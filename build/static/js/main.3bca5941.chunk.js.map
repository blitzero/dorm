{"version":3,"sources":["static/Image13.jpg","components/API/context.js","components/API/api.js","components/API/index.js","utils/util.js","components/hoc/withForm.js","components/Dorms/style.js","components/Dorms/index.js","components/Form/style.js","components/Form/index.js","components/Admin/style.js","components/Admin/AdminPanel.js","components/Admin/index.js","components/App/style.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","API","React","createContext","withAPI","WrappedComponent","props","react_default","a","createElement","context_API","Consumer","api","Object","assign","instance","axios","create","baseURL","headers","Content-Type","interceptors","request","use","config","token","localStorage","getItem","newConfig","objectSpread","Token","_this","this","classCallCheck","getAuth","login","password","get","concat","postRequest","reqValues","post","qs","stringify","content-type","postReport","repValues","getDormDb","getRoom","id","components_API","findName","names","find","name","withoutFields","values","newValues","_len","arguments","length","fields","Array","_key","forEach","field","WithForm","_Component","_getPrototypeOf2","args","possibleConstructorReturn","getPrototypeOf","call","apply","state","name_f","name_l","patronymic","uin","group","address","phone","children","room_id","gender_id","date_residence","status_id","dormDb","handleSubmit","handleSubmitReport","handleChange","e","setState","defineProperty","target","value","handleSelect","inherits","createClass","key","_this2","then","res","data","catch","error","Component","RoomWrapper","styled","div","_templateObject","Dorms","Grid","container","Row","centered","Column","width","className","columns","Card","Image","src","FormStyle","style_templateObject","Segment","raised","Form","size","onSubmit","Group","widths","Field","required","variant","type","onChange","placeholder","maxLength","pattern","label","control","disabled","Button","animated","primary","Content","visible","hidden","Icon","components_Dorms","AdminComponent","Admin_style_templateObject","AdminPanelStyle","_templateObject2","Fragment","status","map","name_id","name_ru","genders","gender","secondary","floated","onClick","handleLogout","Admin","user","handleLogin","setItem","console","log","removeItem","resetForm","Admin_AdminPanel","inverted","htmlFor","Input","AppWrapper","App_style_templateObject","bgImage","App","Switch","Route","exact","path","component","FormComponent","ReactDOM","render","BrowserRouter","Provider","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.3bca5941.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Image13.34f0f66c.jpg\";","import React from \"react\";\r\n\r\nconst API = React.createContext(null);\r\n\r\nexport const withAPI = WrappedComponent => props => {\r\n  return (\r\n    <API.Consumer>\r\n      {api => <WrappedComponent {...props} api={api} />}\r\n    </API.Consumer>\r\n  );\r\n};\r\n\r\nexport default API;\r\n","import axios from \"axios\";\r\nimport qs from \"querystring\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://dorm-keu.herokuapp.com/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n});\r\n\r\ninstance.interceptors.request.use(config => {\r\n  const token = localStorage.getItem(\"sesstionUser\");\r\n\r\n  if (!token) return config;\r\n  const newConfig = { ...config };\r\n  newConfig.headers.Token = token;\r\n  return newConfig;\r\n});\r\n\r\nclass API {\r\n  constructor() {\r\n    this.api = instance;\r\n  }\r\n\r\n  //* get login and password of administrator\r\n  getAuth = (login, password) => {\r\n    return this.api.get(`auth?login=${login}&password=${password}`);\r\n  };\r\n\r\n  //* posting request to the server\r\n  postRequest = reqValues => {\r\n    const reqOptions = {\r\n      headers: { \"content-type\": \"application/x-www-form-urlencoded\" }\r\n    };\r\n\r\n    return this.api.post(\"/request\", qs.stringify(reqValues), reqOptions);\r\n  };\r\n\r\n  //* posting reports to the server\r\n  postReport = repValues => {\r\n    const repOptions = {\r\n      headers: { \"content-type\": \"application/x-www-form-urlencoded\" }\r\n    };\r\n\r\n    return this.api.post(\"/report\", qs.stringify(repValues), repOptions);\r\n  };\r\n\r\n  //* get dorm database\r\n  getDormDb = () => {\r\n    return this.api.get(\"/db\");\r\n  };\r\n\r\n  //* get rooms of dorm\r\n  getRoom = id => {\r\n    return this.api.get(`room?id=${id}`);\r\n  };\r\n}\r\n\r\nexport default API;\r\n","import APIContext, { withAPI } from \"./context\";\r\nimport API from \"./api\";\r\n\r\nexport default APIContext;\r\nexport { withAPI, API };\r\n","export function findName(names, id) {\n  return names.find(name => id === name.id);\n}\n\nexport function withoutFields(values, ...fields) {\n  const newValues = { ...values };\n  fields.forEach(field => {\n    delete newValues[field];\n  });\n\n  return newValues;\n}\n","import React, { Component } from \"react\";\nimport { withAPI } from \"../API\";\nimport { withoutFields } from \"../../utils/util\";\n\nconst WithForm = WrappedComponent => {\n  class WithForm extends Component {\n    state = {\n      name_f: \"\",\n      name_l: \"\",\n      patronymic: \"\",\n      uin: \"\",\n      group: \"\",\n      address: \"\",\n      phone: \"\",\n      children: \"\",\n      room_id: \"\",\n      gender_id: \"\",\n      date_residence: \"\",\n      status_id: \"\",\n      dormDb: {}\n    };\n\n    //* get from the api the dorm database info\n    componentDidMount() {\n      if (this.state.dormDb.length) return;\n\n      this.props.api\n        .getDormDb()\n        .then(res => {\n          this.setState({\n            dormDb: res.data\n          });\n        })\n        .catch(error => {\n          throw error;\n        });\n    }\n\n    //* handling for postring requests\n    handleSubmit = () => {\n      const state = { ...this.state };\n      const values = withoutFields(state, \"status_id\", \"dormDb\");\n      this.props.api.postRequest(values);\n    };\n\n    //* handling for posting reports\n    handleSubmitReport = () => {\n      const state = { ...this.state };\n      const values = withoutFields(state, \"group\", \"dormDb\");\n      this.props.api.postReport(values);\n    };\n\n    //* handling for inputs\n    handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    //* handling for select and options\n    handleSelect = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    render() {\n      return (\n        <WrappedComponent\n          state={this.state}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          handleSelect={this.handleSelect}\n          handleSubmitReport={this.handleSubmitReport}\n          {...this.props}\n        />\n      );\n    }\n  }\n\n  return withAPI(WithForm);\n};\n\nexport default WithForm;\n","import styled from \"styled-components\";\n\nexport const RoomWrapper = styled.div`\n  .title {\n    background-color: transparent;\n    font-size: 42px;\n    text-transform: uppercase;\n    text-align: center;\n    padding: 30px;\n  }\n\n  .desc {\n    text-align: center;\n    font-size: 24px;\n  }\n\n  .ui.card > .image,\n  .ui.cards > .card > .image {\n    cursor: pointer;\n  }\n`;\n","import React, { Component } from \"react\";\nimport { withAPI } from \"../API\";\nimport { RoomWrapper } from \"./style\";\nimport { Grid, Card, Image } from \"semantic-ui-react\";\n\nclass Dorms extends Component {\n  state = {};\n\n  render() {\n    return (\n      <RoomWrapper>\n        <Grid container>\n          <Grid.Row centered>\n            <Grid.Column width={8}>\n              <h1 className=\"title\">Dorms</h1>\n              <p className=\"desc\">Choose dorm</p>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row columns={3} centered>\n            <Grid.Column>\n              <Card>\n                <Image src=\"https://react.semantic-ui.com/images/wireframe/image.png\" />\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Image src=\"https://react.semantic-ui.com/images/wireframe/image.png\" />\n              </Card>\n            </Grid.Column>\n            <Grid.Column>\n              <Card>\n                <Image src=\"https://react.semantic-ui.com/images/wireframe/image.png\" />\n              </Card>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </RoomWrapper>\n    );\n  }\n}\n\nexport default withAPI(Dorms);\n","import styled from \"styled-components\";\r\n\r\nexport const FormStyle = styled.div`\r\n  color: #000000;\r\n  .title {\r\n    font-size: 42px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    padding: 30px;\r\n  }\r\n  .form-label,\r\n  .gender label {\r\n    padding: 10px 10px 10px 0px;\r\n  }\r\n  .button {\r\n    margin: 10px 10px 10px 0px;\r\n    padding: 15px;\r\n  }\r\n  .ui.raised.segment,\r\n  .ui.raised.segments {\r\n    box-shadow: 0 10px 14px 0 rgba(34, 36, 38, 0.5),\r\n      0 2px 10px 0 rgba(34, 36, 38, 0.15);\r\n  }\r\n  .ui.primary.button,\r\n  .ui.primary.buttons .button {\r\n    padding: 15px;\r\n  }\r\n  /* .ui.segment {\r\n    background: #e1e1e1;\r\n  } */\r\n`;\r\n","import React from \"react\";\r\nimport { Button, Grid, Form, Segment, Icon } from \"semantic-ui-react\";\r\nimport WithForm from \"../hoc/withForm\";\r\nimport Dorms from \"../Dorms\";\r\nimport { FormStyle } from \"./style\";\r\n\r\nconst FormComponent = props => {\r\n  return (\r\n    <FormStyle>\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={14}>\r\n            <h1 className=\"title\">Form</h1>\r\n            <Segment raised>\r\n              <Form size=\"big\" onSubmit={props.handleSubmit}>\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Фамилия</label>\r\n                    <input\r\n                      variant=\"outlined\"\r\n                      required\r\n                      value={props.state.name_l}\r\n                      type=\"text\"\r\n                      name=\"name_l\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Введите фамилию\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Имя</label>\r\n                    <input\r\n                      required\r\n                      value={props.state.name_f}\r\n                      type=\"text\"\r\n                      name=\"name_f\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Введите имя\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label className=\"form-label\">Отчество</label>\r\n                    <input\r\n                      value={props.state.patronymic}\r\n                      type=\"text\"\r\n                      name=\"patronymic\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Введите отчество\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">ИИН</label>\r\n                    <input\r\n                      required\r\n                      value={props.state.uin}\r\n                      type=\"text\"\r\n                      name=\"uin\"\r\n                      maxLength=\"12\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Введите ИИН\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Группа</label>\r\n                    <input\r\n                      required\r\n                      value={props.state.group}\r\n                      type=\"text\"\r\n                      name=\"group\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Введите группу\"\r\n                    />\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Номер телефона</label>\r\n                    <input\r\n                      required\r\n                      pattern=\"((\\+7)|[8])7[0-9]{9}$\"\r\n                      value={props.state.phone}\r\n                      type=\"text\"\r\n                      name=\"phone\"\r\n                      maxLength=\"11\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"87081231212\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">\r\n                      Количество детей в семье\r\n                    </label>\r\n                    <input\r\n                      required\r\n                      value={props.state.children}\r\n                      type=\"number\"\r\n                      name=\"children\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Введите количество детей в семье\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Номер комнаты</label>\r\n                    <input\r\n                      required\r\n                      value={props.state.room_id}\r\n                      type=\"number\"\r\n                      name=\"room_id\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Введите номер комнаты\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field\r\n                    className=\"gender\"\r\n                    name=\"gender_id\"\r\n                    onChange={props.handleSelect}\r\n                    value={props.state.gender_id}\r\n                    label=\"Пол\"\r\n                    control=\"select\"\r\n                    required\r\n                  >\r\n                    <option disabled />\r\n                    <option value=\"1\">Мужской</option>\r\n                    <option value=\"2\">Женский</option>\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Дата заселения</label>\r\n                    <input\r\n                      required\r\n                      value={props.state.date_residence}\r\n                      type=\"date\"\r\n                      name=\"date_residence\"\r\n                      onChange={props.handleChange}\r\n                    />\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <Form.Field required>\r\n                  <label className=\"form-label\">Адрес проживания</label>\r\n                  <input\r\n                    required\r\n                    value={props.state.address}\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    onChange={props.handleChange}\r\n                    placeholder=\"Улица, дом, квартира\"\r\n                  />\r\n                </Form.Field>\r\n                <Button animated=\"fade\" primary type=\"submit\">\r\n                  <Button.Content visible>Отправить заявление</Button.Content>\r\n                  <Button.Content hidden>\r\n                    <Icon name=\"arrow right\" />\r\n                  </Button.Content>\r\n                </Button>\r\n              </Form>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Dorms />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </FormStyle>\r\n  );\r\n};\r\n\r\nexport default WithForm(FormComponent);\r\n","import styled from \"styled-components\";\n\nexport const AdminComponent = styled.div`\n  background-color: #b1b1b1;\n  height: 101.5vh;\n  .form {\n    padding-top: 50%;\n  }\n`;\n\nexport const AdminPanelStyle = styled.div`\n  height: 100%;\n  .title {\n    font-size: 42px;\n    text-transform: uppercase;\n    text-align: center;\n    padding: 30px;\n  }\n  .form-label,\n  .gender label,\n  .status label {\n    padding: 10px 10px 10px 0px;\n  }\n  .ui.button {\n    margin: 10px 10px 10px 0px;\n    padding: 15px;\n  }\n`;\n","import React from \"react\";\nimport { Grid, Button, Segment, Form } from \"semantic-ui-react\";\nimport WithForm from \"../hoc/withForm\";\nimport { findName } from \"../../utils/util\";\nimport { AdminPanelStyle } from \"./style\";\n\nconst AdminPanel = props => {\n  return (\n    <AdminPanelStyle>\n      <Grid>\n        <Grid.Row centered>\n          <Grid.Column width={6}>\n            <h1 className=\"title\">Admin panel</h1>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row centered>\n          <Grid.Column width={14}>\n            <Segment raised>\n              <Form size=\"big\" onSubmit={props.handleSubmitReport}>\n                <Form.Group widths=\"equal\">\n                  <Form.Field required>\n                    <label className=\"form-label\">Фамилия</label>\n                    <input\n                      required\n                      value={props.state.name_l}\n                      type=\"text\"\n                      name=\"name_l\"\n                      onChange={props.handleChange}\n                      placeholder=\"Введите фамилию\"\n                    />\n                  </Form.Field>\n                  <Form.Field required>\n                    <label className=\"form-label\">Имя</label>\n                    <input\n                      required\n                      value={props.state.name_f}\n                      type=\"text\"\n                      name=\"name_f\"\n                      onChange={props.handleChange}\n                      placeholder=\"Введите имя\"\n                    />\n                  </Form.Field>\n                  <Form.Field>\n                    <label className=\"form-label\">Отчество</label>\n                    <input\n                      value={props.state.patronymic}\n                      type=\"text\"\n                      name=\"patronymic\"\n                      onChange={props.handleChange}\n                      placeholder=\"Введите отчество\"\n                    />\n                  </Form.Field>\n                  <Form.Field required>\n                    <label className=\"form-label\">ИИН</label>\n                    <input\n                      required\n                      value={props.state.uin}\n                      type=\"text\"\n                      name=\"uin\"\n                      maxLength=\"12\"\n                      onChange={props.handleChange}\n                      placeholder=\"Введите ИИН\"\n                    />\n                  </Form.Field>\n                  <Form.Field\n                    className=\"status\"\n                    name=\"status_id\"\n                    onChange={props.handleSelect}\n                    value={props.state.status_id}\n                    label=\"Статус\"\n                    control=\"select\"\n                    required\n                  >\n                    <>\n                      <option disabled />\n                      {props.state.dormDb.status &&\n                        props.state.dormDb.status.map(status => {\n                          const name = findName(\n                            props.state.dormDb.names,\n                            status.name_id\n                          );\n                          return (\n                            <option key={status.id} value={status.id}>\n                              {name.name_ru}\n                            </option>\n                          );\n                        })}\n                    </>\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group widths=\"equal\">\n                  <Form.Field required>\n                    <label className=\"form-label\">Номер телефона</label>\n                    <input\n                      required\n                      pattern=\"((\\+7)|[8])7[0-9]{9}$\"\n                      value={props.state.phone}\n                      type=\"text\"\n                      name=\"phone\"\n                      maxLength=\"11\"\n                      onChange={props.handleChange}\n                      placeholder=\"87081231212\"\n                    />\n                  </Form.Field>\n                  <Form.Field required>\n                    <label className=\"form-label\">\n                      Количество детей в семье\n                    </label>\n                    <input\n                      required\n                      value={props.state.children}\n                      type=\"number\"\n                      name=\"children\"\n                      onChange={props.handleChange}\n                      placeholder=\"Введите количество детей в семье\"\n                    />\n                  </Form.Field>\n                  <Form.Field required>\n                    <label className=\"form-label\">Номер комнаты</label>\n                    <input\n                      required\n                      value={props.state.room_id}\n                      type=\"number\"\n                      name=\"room_id\"\n                      onChange={props.handleChange}\n                      placeholder=\"Введите номер комнаты\"\n                    />\n                  </Form.Field>\n                  <Form.Field\n                    className=\"gender\"\n                    name=\"gender_id\"\n                    onChange={props.handleSelect}\n                    value={props.state.gender_id}\n                    label=\"Пол\"\n                    control=\"select\"\n                    required\n                  >\n                    <>\n                      <option disabled />\n                      {props.state.dormDb.genders &&\n                        props.state.dormDb.genders.map(gender => {\n                          const name = findName(\n                            props.state.dormDb.names,\n                            gender.name_id\n                          );\n                          return (\n                            <option key={gender.id} value={gender.id}>\n                              {name.name_ru}\n                            </option>\n                          );\n                        })}\n                    </>\n                  </Form.Field>\n                  <Form.Field required>\n                    <label className=\"form-label\">Дата заселения</label>\n                    <input\n                      required\n                      value={props.state.date_residence}\n                      type=\"date\"\n                      name=\"date_residence\"\n                      onChange={props.handleChange}\n                    />\n                  </Form.Field>\n                </Form.Group>\n                <Form.Field required>\n                  <label className=\"form-label\">Адрес проживания</label>\n                  <input\n                    required\n                    value={props.state.address}\n                    type=\"text\"\n                    name=\"address\"\n                    onChange={props.handleChange}\n                    placeholder=\"Улица, дом, квартира\"\n                  />\n                </Form.Field>\n                <Button primary type=\"submit\">\n                  Создать направление\n                </Button>\n                <Button secondary floated=\"right\" onClick={props.handleLogout}>\n                  Выйти\n                </Button>\n              </Form>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </AdminPanelStyle>\n  );\n};\n\nexport default WithForm(AdminPanel);\n","import React, { Component } from \"react\";\nimport { withAPI } from \"../API\";\nimport AdminPanelStyle from \"./AdminPanel\";\nimport { AdminComponent } from \"./style\";\nimport { Grid, Segment, Input, Button, Form } from \"semantic-ui-react\";\n\nclass Admin extends Component {\n  state = {\n    login: \"\",\n    password: \"\",\n    user:\n      localStorage.getItem(\"sesstionUser\") &&\n      localStorage.getItem(\"sesstionUser\")\n  };\n\n  handleLogin = () => {\n    this.props.api\n      .getAuth(this.state.login, this.state.password)\n      .then(res => {\n        this.setState({\n          user: res.data.token\n        });\n        localStorage.setItem(\"sesstionUser\", res.data.token);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  handleLogout = () => {\n    localStorage.removeItem(\"sesstionUser\");\n    this.setState({\n      user: null\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  resetForm = () => {\n    this.setState({\n      login: \"\",\n      password: \"\"\n    });\n  };\n\n  render() {\n    const { user } = this.state;\n    if (user) {\n      return <AdminPanelStyle handleLogout={this.handleLogout} />;\n    }\n\n    return (\n      <AdminComponent>\n        <Grid container>\n          <Grid.Row centered>\n            <Grid.Column width={8}>\n              <Form className=\"form\" onSubmit={this.handleLogin}>\n                <Segment inverted>\n                  <Form.Field>\n                    <label htmlFor=\"login\">Login</label>\n                    <Input\n                      value={this.state.login}\n                      onChange={this.handleChange}\n                      name=\"login\"\n                      type=\"text\"\n                    />\n                  </Form.Field>\n                  <Form.Field>\n                    <label htmlFor=\"password\">Password</label>\n                    <Input\n                      value={this.state.password}\n                      onChange={this.handleChange}\n                      name=\"password\"\n                      type=\"password\"\n                    />\n                  </Form.Field>\n                  <Button type=\"submit\">Войти</Button>\n                </Segment>\n              </Form>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </AdminComponent>\n    );\n  }\n}\n\nexport default withAPI(Admin);\n","import styled from \"styled-components\";\nimport bgImage from \"../../static/Image13.jpg\";\n\nexport const AppWrapper = styled.div`\n  background: url(${bgImage}) no-repeat center;\n  background-size: cover;\n  min-height: 100%;\n`;\n","import React from \"react\";\r\nimport FormComponent from \"../Form\";\r\nimport Admin from \"../Admin\";\r\nimport { AppWrapper } from \"./style\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <AppWrapper>\r\n        <Route exact path=\"/\" component={FormComponent} />\r\n        <Route path=\"/admin\" component={Admin} />\r\n      </AppWrapper>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./components/App\";\r\nimport APIContext, { API } from \"./components/API\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <APIContext.Provider value={new API()}>\r\n      <App />\r\n    </APIContext.Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}