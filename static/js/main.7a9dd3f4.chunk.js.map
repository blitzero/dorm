{"version":3,"sources":["static/firstDorm.webp","static/secondDorm.webp","static/thirdDorm.webp","static/firstDorm/1.webp","components/API/context.js","components/API/api.js","components/API/index.js","utils/util.js","components/hoc/withForm.js","components/Dorms/style.js","components/Dorms/index.js","components/Dorms/FirstDorm/style.js","components/Dorms/Floors.js","components/Dorms/FirstDorm/index.js","components/Dorms/SecondDorm/index.js","components/Form/style.js","components/Form/index.js","components/Admin/style.js","components/Admin/AdminReports.js","components/Admin/AdminDirection.js","components/Admin/AdminRequests.js","components/Admin/AdminPanel.js","components/hoc/withAdmin.js","components/Admin/index.js","components/App/style.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","API","React","createContext","withAPI","WrappedComponent","props","react_default","a","createElement","context_API","Consumer","api","Object","assign","instance","axios","create","baseURL","headers","content-type","interceptors","request","use","config","token","localStorage","getItem","newConfig","objectSpread","Token","_this","this","classCallCheck","postRequest","reqValues","reqOptions","mother","encodeURI","name_f","name_l","patronymic","phone","father","dorm_id","post","qs","stringify","postReport","_ref","repValues","objectWithoutProperties","repOptions","getAuth","login","password","get","concat","getDormDb","getReports","getRequests","getRooms","floor_id","getRequestById","requestId","getRequestDocument","gender_id","address","room_id","children","date_residence","group","id","reqDocOptions","putStatus","status_id","put","components_API","findName","names","find","name","withoutFields","values","newValues","_len","arguments","length","fields","Array","_key","forEach","field","gender","1","2","uin","email","WithForm","_Component","_getPrototypeOf2","args","possibleConstructorReturn","getPrototypeOf","call","apply","_isMounted","state","responseStatus","error","parents","loading","dormDb","resetForm","setState","handleSubmit","e","then","res","status","catch","handleChange","defineProperty","target","value","handleParentsChange","callback","handleSelect","inherits","createClass","key","_this2","data","handleSubmitReport","Component","RoomWrapper","styled","div","_templateObject","SvgRect","rect","attrs","x","width","_templateObject2","DormStyle","_templateObject3","Dorms","Grid","Row","centered","Column","computer","mobile","className","Card","Group","doubling","stackable","itemsPerRow","raised","color","image","FirstDorm","onClick","setCurrentDorm","meta","SecondDorm","ThirdDorm","FirstDormStyle","style_templateObject","coordinates","reqCoordinates","Floor","selectedRoom","handleSelectedRoom","room","genderColor","amount","componentDidUpdate","_","prevState","setSelectedRoom","currentDormId","sortReports","rooms","i","endI","wasSwap","j","endJ","console","log","src","FirstFloor","alt","number","max","selectedFloor","map","index","y","height","_useField","defaultValue","_useState5","useState","_useState6","slicedToArray","useField","_useField2","currentDorm","_getRooms2","_useState","_useState2","setRooms","_useState3","_useState4","isLoading","setLoading","useEffect","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","sent","stop","_getRooms3","floors","filter","dormId","Form","Field","onChange","disabled","floor","Fragment","Button","Segment","Floors","selectedDorm","FormStyle","Form_style_templateObject","date","Date","year","getFullYear","month","getMonth","day","getDate","currDate","_e$target$name$split","split","_e$target$name$split2","parentType","as","Link","to","floated","animated","Content","visible","hidden","Icon","style","success","size","onSubmit","unstackable","padding","widths","required","pattern","type","placeholder","maxLength","readOnly","label","control","min","Message","header","primary","Dorms_FirstDorm","Dorms_SecondDorm","ThirdDorm_default","components_Dorms","currentdorm","renderDorm","AdminComponent","Admin_style_templateObject","AdminPanelStyle","style_templateObject2","AdminReportsStyle","style_templateObject3","AdminRequestsStyle","_templateObject4","AdminDirectionStyle","_templateObject5","ChangeStatusModal","report_id","name_id","name_ru","AdminReports","reports","openModal","componentDidMount","loaded","Header","icon","Table","celled","HeaderCell","Body","Cell","Modal","open","onClose","dimmer","trigger","closeIcon","content","AdminReports_ChangeStatusModal","handleCurrentFieldSubmitReport","openCurrentField","handleCurrentFieldChange","handleCurrentFieldSelect","genders","PureComponent","DownloadDoc","AdminRequests","requests","currentDataToDocument","searchValue","foundedRequest","handleSearchInput","handleSearch","toConsumableArray","window","url","handleLogout","textAlign","inline","corner","compact","Admin_AdminDirection","AdminRequests_DownloadDoc","AdminPanel","routes","setRoutes","Menu","fluid","secondary","Item","position","Admin_AdminRequests","Admin_AdminReports","WithAdmin","user","handleLogin","setItem","removeItem","withAdmin","Admin_AdminPanel","container","htmlFor","Input","AppWrapper","App_style_templateObject","App","Switch","Route","exact","path","component","FormComponent","Admin","ReactDOM","render","HashRouter","basename","process","Provider","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.7a9dd3f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/firstDorm.3246be3b.webp\";","module.exports = __webpack_public_path__ + \"static/media/secondDorm.b99f9185.webp\";","module.exports = __webpack_public_path__ + \"static/media/thirdDorm.e662d390.webp\";","module.exports = __webpack_public_path__ + \"static/media/1.05912791.webp\";","import React from \"react\";\r\n\r\nconst API = React.createContext(null);\r\n\r\nexport const withAPI = WrappedComponent => props => {\r\n  return (\r\n    <API.Consumer>\r\n      {api => <WrappedComponent {...props} api={api} />}\r\n    </API.Consumer>\r\n  );\r\n};\r\n\r\nexport default API;\r\n","/**\r\n * @file This file includes all api requests like GET,POST and etc.\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport qs from \"querystring\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://dorm-keu.herokuapp.com/api\",\r\n  headers: {\r\n    \"content-type\": \"application/x-www-form-urlencoded\"\r\n  }\r\n});\r\n\r\ninstance.interceptors.request.use(config => {\r\n  const token = localStorage.getItem(\"sessionUser\");\r\n\r\n  if (!token) return config;\r\n  const newConfig = { ...config };\r\n  newConfig.headers.Token = token;\r\n  return newConfig;\r\n});\r\n\r\nclass API {\r\n  constructor() {\r\n    this.api = instance;\r\n  }\r\n\r\n  /**\r\n   * Posting request to the server\r\n   * @param {} reqValues The Request data that will be sended\r\n   */\r\n  postRequest = reqValues => {\r\n    const reqOptions = {\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded\",\r\n        mother:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(reqValues.mother.name_f) +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(reqValues.mother.name_l) +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(reqValues.mother.patronymic) +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(reqValues.mother.phone) +\r\n          '\"}',\r\n        father:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(reqValues.father.name_f) +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(reqValues.father.name_l) +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(reqValues.father.patronymic) +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(reqValues.father.phone) +\r\n          '\"}',\r\n        dorm_id: reqValues.dorm_id\r\n      }\r\n    };\r\n    return this.api.post(\"/request\", qs.stringify(reqValues), reqOptions);\r\n  };\r\n\r\n  /**\r\n   * Posting reports to the server\r\n   * @param {} repValues The Report data that will be sended\r\n   */\r\n  postReport = ({ mother, father, ...repValues }) => {\r\n    const repOptions = {\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded\",\r\n        mother:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(mother.name_f || \"\") +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(mother.name_l || \"\") +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(mother.patronymic || \"\") +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(mother.phone || \"\") +\r\n          '\"}',\r\n        father:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(father.name_f || \"\") +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(father.name_l || \"\") +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(father.patronymic || \"\") +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(father.phone || \"\") +\r\n          '\"}'\r\n      }\r\n    };\r\n\r\n    return this.api.post(\"/report\", qs.stringify(repValues), repOptions);\r\n  };\r\n\r\n  /**\r\n   * Get login and password of administrator\r\n   * @param {string} login The login of admin\r\n   * @param {string} password The password of admin\r\n   */\r\n  getAuth = (login, password) => {\r\n    return this.api.get(`auth?login=${login}&password=${password}`);\r\n  };\r\n\r\n  /**\r\n   * Get data from dorm database\r\n   */\r\n  getDormDb = () => {\r\n    return this.api.get(\"/db\");\r\n  };\r\n\r\n  /**\r\n   * Get all reports\r\n   */\r\n  getReports = () => {\r\n    return this.api.get(\"/report\");\r\n  };\r\n\r\n  /**\r\n   * Get all requests\r\n   */\r\n  getRequests = () => {\r\n    return this.api.get(\"/request\");\r\n  };\r\n\r\n  /**\r\n   * This function is showing rooms leaning on current floor\r\n   * @param {number} floor_id The id of the floor\r\n   */\r\n  getRooms = floor_id => {\r\n    return this.api.get(`/room?id=${floor_id}`);\r\n  };\r\n\r\n  /**\r\n   * This function is for showing 1 request by entered id\r\n   * @param {number} requestId This is the id of the request\r\n   */\r\n  getRequestById = requestId => {\r\n    return this.api.get(`/search/request?id=${requestId}`);\r\n  };\r\n\r\n  /**\r\n   * Get autocompleted word document of request\r\n   * @param {string} name_f Firstname of student\r\n   * @param {string} name_l Lastname of student\r\n   * @param {string} patronymic Patronymic of student\r\n   * @param {string} gender_id Gender\r\n   * @param {string} address Address of living of student\r\n   * @param {string} phone Phone of student\r\n   * @param {number} room_id Which room he selected\r\n   * @param {number} children How many childrens he has in family\r\n   * @param {date} date_residence On which date he reserved a room\r\n   * @param {string} group In which group he joined\r\n   */\r\n  getRequestDocument = (\r\n    name_f,\r\n    name_l,\r\n    patronymic,\r\n    gender_id,\r\n    address,\r\n    phone,\r\n    room_id,\r\n    children,\r\n    date_residence,\r\n    group,\r\n    mother,\r\n    father,\r\n    id\r\n  ) => {\r\n    const reqDocOptions = {\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded\",\r\n        mother:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(mother.name_f || \"\") +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(mother.name_l || \"\") +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(mother.patronymic || \"\") +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(mother.phone || \"\") +\r\n          '\"}',\r\n        // `'{ \"name_f\": \"${encodeURI(reqValues.mother.name_f)}\", \"name_l\": \"${encodeURI(reqValues.mother.name_l)}\", \"patronymic\": \"${encodeURI(reqValues.mother.patronymic)}\", \"phone\": \"${encodeURI(reqValues.mother.phone)}\"'`\r\n        father:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(father.name_f || \"\") +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(father.name_l || \"\") +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(father.patronymic || \"\") +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(father.phone || \"\") +\r\n          '\"}'\r\n      }\r\n    };\r\n    return this.api.get(\r\n      `/doc/request?name_f=${name_f}&name_l=${name_l}&patronymic=${patronymic}&gender_id=${gender_id}&address=${address}&phone=${phone}&room_id=${room_id}&children=${children}&date_residence=${date_residence}&group=${group}&id=${id}&mother={\"name_l\":${\r\n        mother.name_l\r\n      },\"name_f\":${mother.name_f}, \"patronymic\":${mother.patronymic}, \"phone\":${\r\n        mother.phone\r\n      }}&father={\"name_l\":${father.name_l},\"name_f\":${\r\n        father.name_f\r\n      },\"patronymic\":${father.patronymic}, \"phone\":${father.phone}}`,\r\n      reqDocOptions\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Changing status of report\r\n   * @param {number} id The id of report\r\n   * @param {number} status_id The status (1,2,3,4)\r\n   */\r\n  putStatus = (id, status_id) => {\r\n    return this.api.put(`/status?id=${id}&status_id=${status_id}`);\r\n  };\r\n}\r\n\r\nexport default API;\r\n","import APIContext, { withAPI } from \"./context\";\r\n//*class API\r\nimport API from \"./api\";\r\n\r\n//* for main index.js\r\nexport default APIContext;\r\n//* for other components\r\nexport { withAPI, API };\r\n","export function findName(names, id) {\r\n  return names.find(name => id === name.id);\r\n}\r\n\r\n/**\r\n * @param {} values state that will be sended\r\n * @param  {...any} fields state that will be deleted\r\n */\r\nexport function withoutFields(values, ...fields) {\r\n  const newValues = { ...values };\r\n  fields.forEach(field => {\r\n    delete newValues[field];\r\n  });\r\n\r\n  return newValues;\r\n}\r\n\r\nexport const gender = {\r\n  1: \"Мужской\",\r\n  2: \"Женский\"\r\n};\r\n\r\nexport function sortByKeys(obj) {\r\n  const keys = Object.keys(obj).sort();\r\n\r\n  return keys.reduce((acc, key) => {\r\n    acc[key] = obj[key];\r\n    return acc;\r\n  }, {});\r\n}\r\n","/**\r\n * @file This HOC includes all input fields and its state.\r\n * @file This HOC only for components that have input fields.\r\n * This HOC includes functions like POST Request [handleSubmit], GET Request [getDormDb], and handlers for inputs.\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { withAPI } from \"../API\";\r\nimport { withoutFields } from \"../../utils/util\";\r\nconst fields = {\r\n  name_f: \"\",\r\n  name_l: \"\",\r\n  patronymic: \"\",\r\n  uin: \"\",\r\n  group: \"\",\r\n  address: \"\",\r\n  phone: \"\",\r\n  children: \"\",\r\n  room_id: \"\",\r\n  gender_id: \"\",\r\n  status_id: \"\",\r\n  dorm_id: \"\",\r\n  email: \"\",\r\n  mother: {\r\n    name_l: \"\",\r\n    name_f: \"\",\r\n    patronymic: \"\",\r\n    phone: \"\"\r\n  },\r\n  father: {\r\n    name_l: \"\",\r\n    name_f: \"\",\r\n    patronymic: \"\",\r\n    phone: \"\"\r\n  },\r\n  date_residence: \"\"\r\n};\r\nconst WithForm = WrappedComponent => {\r\n  class WithForm extends Component {\r\n    _isMounted = false;\r\n    state = {\r\n      ...fields,\r\n      responseStatus: \"\",\r\n      error: null,\r\n      parents: \"\",\r\n      loading: false,\r\n      dormDb: {}\r\n    };\r\n\r\n    /**\r\n     * @function resetForm This function for clearing inputs fields\r\n     */\r\n    resetForm = () => {\r\n      this.setState({ ...fields });\r\n    };\r\n\r\n    componentDidMount() {\r\n      if (this.state.dormDb.length) return;\r\n      this._isMounted = true;\r\n      this.props.api\r\n        .getDormDb()\r\n        .then(res => {\r\n          this.setState({\r\n            dormDb: res.data\r\n          });\r\n        })\r\n        .catch(error => {\r\n          throw error;\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this._isMounted = false;\r\n    }\r\n\r\n    /**\r\n     * Handling for posting requests\r\n     */\r\n    handleSubmit = e => {\r\n      const state = { ...this.state };\r\n      const values = withoutFields(\r\n        state,\r\n        \"status_id\",\r\n        \"dormDb\",\r\n        \"parents\",\r\n        \"responseStatus\",\r\n        \"loading\",\r\n        \"error\"\r\n      );\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      this.props.api\r\n        .postRequest(values)\r\n        .then(res => {\r\n          this.setState({\r\n            responseStatus: res.status,\r\n            loading: false,\r\n            error: null\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            error: error,\r\n            loading: false\r\n          });\r\n        });\r\n      this.resetForm();\r\n    };\r\n\r\n    /**\r\n     * Handling for inputs\r\n     */\r\n    handleChange = e => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    };\r\n\r\n    /**\r\n     * Handling for mother and father inputs\r\n     */\r\n    handleParentsChange = callback => {\r\n      this.setState(callback);\r\n    };\r\n\r\n    /**\r\n     * Handling for select and options\r\n     */\r\n    handleSelect = e => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <WrappedComponent\r\n          state={this.state}\r\n          handleSubmit={this.handleSubmit}\r\n          handleChange={this.handleChange}\r\n          handleSelect={this.handleSelect}\r\n          handleParentsChange={this.handleParentsChange}\r\n          handleSubmitReport={this.handleSubmitReport}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return withAPI(WithForm);\r\n};\r\n\r\nexport default WithForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const RoomWrapper = styled.div`\r\n  height: 100%;\r\n  .ui.cards a.card:hover,\r\n  .ui.link.card:hover,\r\n  .ui.link.cards .card:hover,\r\n  a.ui.card:hover {\r\n    transform: translateY(-15px);\r\n  }\r\n  .title {\r\n    background-color: transparent;\r\n    font-size: 42px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    padding: 30px;\r\n  }\r\n\r\n  .desc {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    font-family: \"Montserrat\", sans-serif;\r\n    color: #000;\r\n  }\r\n\r\n  .ui.card > .image,\r\n  .ui.cards > .card > .image {\r\n    cursor: pointer;\r\n  }\r\n  .ui.card .meta,\r\n  .ui.cards > .card .meta {\r\n    color: black;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .card-group {\r\n    padding: 100px 0;\r\n  }\r\n`;\r\n\r\nexport const SvgRect = styled.rect.attrs(({ x, width }) => ({\r\n  x: x,\r\n  width: width\r\n}))`\r\n  position: relative;\r\n  transition: 0.5s all;\r\n  fill: ${props => props.gender};\r\n  cursor: pointer;\r\n  :hover {\r\n    fill: gray;\r\n  }\r\n`;\r\n\r\nexport const DormStyle = styled.div`\r\n  background-color: #ffffff;\r\n  border-radius: 0.28571429rem;\r\n  padding: 2rem;\r\n  ul {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  outline: none;\r\n  background-image: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  .svg {\r\n    width: 1080px;\r\n    height: 666px;\r\n    position: absolute;\r\n  }\r\n  .title {\r\n    font-size: 24px;\r\n  }\r\n\r\n  .hide {\r\n    display: none;\r\n  }\r\n  .text {\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n  }\r\n  .show {\r\n    width: 350px;\r\n    height: 230px;\r\n    background-color: #b1b1b1;\r\n    border-radius: 4px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    font-size: 24px;\r\n    color: #ffffff;\r\n    top: 70px;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 105px;\r\n    z-index: 2;\r\n  }\r\n  .show ul li {\r\n    list-style-type: none;\r\n    line-height: 40px;\r\n    font-size: 18px;\r\n    line-height: 36px;\r\n  }\r\n\r\n  .select-wrapper {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 300px;\r\n    height: 300px;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { withAPI } from \"../API\";\r\nimport { RoomWrapper } from \"./style\";\r\nimport { Grid, Card } from \"semantic-ui-react\";\r\nimport FirstDorm from \"../../static/firstDorm.webp\";\r\nimport SecondDorm from \"../../static/secondDorm.webp\";\r\nimport ThirdDorm from \"../../static/thirdDorm.webp\";\r\n\r\nclass Dorms extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <RoomWrapper>\r\n        <Grid>\r\n          <Grid.Row centered>\r\n            <Grid.Column computer={14} mobile={14}>\r\n              <h1 className=\"title\">Общежития</h1>\r\n              <p className=\"desc\">Выберите корпус</p>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row centered>\r\n            <Grid.Column width={14}>\r\n              <Card.Group\r\n                className=\"card-group\"\r\n                doubling\r\n                stackable\r\n                itemsPerRow={3}\r\n                centered\r\n              >\r\n                <Card\r\n                  raised\r\n                  color=\"yellow\"\r\n                  image={FirstDorm}\r\n                  onClick={() => this.props.setCurrentDorm(1)}\r\n                  meta=\"г. Караганда, ул. Академическая 5/1\"\r\n                />\r\n                <Card\r\n                  raised\r\n                  color=\"yellow\"\r\n                  image={SecondDorm}\r\n                  onClick={() => this.props.setCurrentDorm(2)}\r\n                  meta=\"г. Караганда, ул. Академическая 5\"\r\n                />\r\n                <Card\r\n                  raised\r\n                  color=\"yellow\"\r\n                  image={ThirdDorm}\r\n                  onClick={() => this.props.setCurrentDorm(3)}\r\n                  meta=\"г. Караганда, ул. Комиссарова 32\"\r\n                />\r\n              </Card.Group>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </RoomWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAPI(Dorms);\r\n","import styled from \"styled-components\";\n\nexport const FirstDormStyle = styled.div`\n  .select-wrapper {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 20px;\n    align-items: center;\n  }\n  .firstDorm {\n    border: 0px !important;\n    box-shadow: 0 0px 0px 0 rgba(255, 255, 255, 1) !important;\n  }\n`;\n","import React, { Component } from \"react\";\nimport FirstFloor from \"../../static/firstDorm/1.webp\";\nimport { DormStyle } from \"../Dorms/style\";\nimport { SvgRect } from \"../Dorms/style\";\n\nconst coordinates = [120, 221, 320, 416, 505, 596, 692, 779, 859, 943];\nconst reqCoordinates = [\n  { x: 86.989, width: 96.972 },\n  { x: 188.99, width: 96.972 },\n  { x: 290.99, width: 92.218 },\n  { x: 388.99, width: 87.465 },\n  { x: 480.99, width: 83.187 },\n  { x: 570.99, width: 85.563 },\n  { x: 660.99, width: 87.244 },\n  { x: 754.99, width: 77.262 },\n  { x: 837.46, width: 73.228 },\n  { x: 916.78, width: 77.598 }\n];\n\nclass Floor extends Component {\n  state = {\n    selectedRoom: {},\n    gender_id: null\n  };\n\n  handleSelectedRoom = room => {\n    this.setState({\n      selectedRoom: room\n    });\n  };\n\n  genderColor = (gender_id, amount) => {\n    if (amount === 0) {\n      return \"#E8F5E9\";\n    }\n    switch (gender_id) {\n      case 1:\n        return \"#E3F2FD\";\n      case 2:\n        return \"#FCE4EC\";\n      default:\n        return \"#E8F5E9\";\n    }\n  };\n\n  componentDidUpdate = (_, prevState) => {\n    if (prevState.selectedRoom !== this.state.selectedRoom) {\n      this.props.setSelectedRoom(\n        this.state.selectedRoom.id,\n        this.props.currentDormId\n      );\n    }\n  };\n\n  sortReports = rooms => {\n    for (let i = 0, endI = rooms.length - 1; i < endI; i++) {\n      let wasSwap = false;\n\n      for (let j = 0, endJ = endI - i; j < endJ; j++) {\n        if (rooms[j].id > rooms[j + 1].id) {\n          [rooms[j], rooms[j + 1]] = [rooms[j + 1], rooms[j]];\n          wasSwap = true;\n        }\n      }\n\n      if (!wasSwap) break;\n    }\n\n    return rooms;\n  };\n\n  render() {\n    const { rooms } = this.props;\n    this.sortReports(rooms);\n    const { selectedRoom } = this.state;\n    this.genderColor();\n    console.log(this.state.gender_id);\n    return (\n      <DormStyle>\n        <img src={FirstFloor} alt=\"Dorm\" />\n        <div className=\"show\">\n          <ul>\n            <li>Общежитие №: {this.props.currentDormId} </li>\n            <li>Комната №: {selectedRoom.number}</li>\n            <li>Максимальное кол-во жителей: {selectedRoom.max}</li>\n            <li>Сейчас проживает: {selectedRoom.amount} чел.</li>\n            <li>Этаж: {this.props.selectedFloor}</li>\n          </ul>\n        </div>\n        <svg className=\"svg\">\n          {rooms.map((room, index) => {\n            console.log(room);\n            return (\n              <SvgRect\n                key={room.id}\n                onClick={() => this.handleSelectedRoom(room)}\n                x={`${reqCoordinates[index].x}`}\n                y=\"444.01\"\n                width={`${reqCoordinates[index].width}`}\n                height=\"191.57\"\n                gender={this.genderColor(room.gender_id, room.amount)}\n              />\n            );\n          })}\n          {rooms.map((room, index) => (\n            <text\n              key={room.id}\n              onClick={() => this.handleSelectedRoom(room)}\n              className=\"text\"\n              height=\"191.57\"\n              x={`${coordinates[index]}`}\n              y=\"556\"\n            >\n              {room.number}\n            </text>\n          ))}\n        </svg>\n      </DormStyle>\n    );\n  }\n}\n\nexport default Floor;\n","import React, { useEffect, useState } from \"react\";\nimport { Grid, Segment, Form, Button } from \"semantic-ui-react\";\nimport { FirstDormStyle } from \"./style\";\nimport { withAPI } from \"../../API\";\nimport Floors from \"../Floors\";\n\n/**\n *\n * @param {string} selectedFloor Comes from select\n * @param {*} getRooms This is just API\n *\n */\nconst getRooms = (selectedFloor, getRooms) => {\n  const [rooms, setRooms] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  /**\n   * useEffect тригеррится только тогда когда меняется 2-ой аргумент [selectedFloor]\n   */\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const response = await getRooms(selectedFloor);\n      setRooms(response.data);\n      setLoading(false);\n    })();\n  }, [selectedFloor]); // Триггеры на которые будут дергаться API\n\n  return [rooms, isLoading];\n};\n\nconst useField = defaultValue => {\n  const [value, handleChange] = useState(defaultValue);\n  return [value, handleChange];\n};\n\nconst FirstDorm = props => {\n  const [currentDorm, setCurrentDorm] = useField(\"1\");\n\n  const [rooms, isLoading] = getRooms(currentDorm, props.api.getRooms);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setCurrentDorm(value);\n  };\n\n  const floors = props.dormDb.floors.filter(dormId => {\n    return dormId.dorm_id === props.currentDorm;\n  });\n\n  return (\n    <FirstDormStyle>\n      <div className=\"select-wrapper\">\n        <Form>\n          <Form.Group>\n            <Form.Field>\n              <select\n                value={currentDorm}\n                onChange={handleChange}\n                name=\"selectedFloor\"\n              >\n                <option disabled value=\"0\">\n                  Выберите этаж\n                </option>\n                {floors.map((floor, key) => {\n                  return (\n                    <React.Fragment key={key}>\n                      <option value={floor.number}>{floor.number} этаж</option>\n                    </React.Fragment>\n                  );\n                })}\n              </select>\n            </Form.Field>\n            <Form.Field>\n              <Button onClick={() => props.setCurrentDorm(null)}>Назад</Button>\n            </Form.Field>\n          </Form.Group>\n        </Form>\n      </div>\n      <div>\n        <Grid>\n          <Grid.Row centered>\n            <Grid.Column width={16}>\n              <Segment className=\"firstDorm\" loading={isLoading}>\n                <Floors\n                  rooms={rooms}\n                  selectedFloor={currentDorm}\n                  currentDormId={props.currentDorm}\n                  setCurrentDorm={props.setCurrentDorm}\n                  setSelectedRoom={(selectedRoom, selectedDorm) =>\n                    props.setSelectedRoom(state => ({\n                      ...state,\n                      room_id: selectedRoom,\n                      dorm_id: selectedDorm\n                    }))\n                  }\n                />\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    </FirstDormStyle>\n  );\n};\n\nexport default withAPI(FirstDorm);\n","import React, { Component } from \"react\";\n\nclass SecondDorm extends Component {\n  render() {\n    return <div>SecondDorm</div>;\n  }\n}\n\nexport default SecondDorm;\n","import styled from \"styled-components\";\r\n\r\nexport const FormStyle = styled.div`\r\n  .auth-btn {\r\n    margin-top: 58px !important;\r\n    position: absolute !important;\r\n    z-index: 999 !important;\r\n  }\r\n  .title {\r\n    color: #000;\r\n    font-family: \"Montserrat\", sans-serif;\r\n    font-size: 42px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    padding: 30px;\r\n  }\r\n  .form-label,\r\n  .gender label {\r\n    padding: 10px 10px 10px 0px;\r\n    font-family: \"Roboto\", sans-serif;\r\n  }\r\n  .ui.segment {\r\n    padding: 2rem 2rem;\r\n  }\r\n  .button {\r\n    margin: 10px 10px 10px 0px;\r\n    padding: 15px;\r\n  }\r\n  .ui.raised.segment,\r\n  .ui.raised.segments {\r\n    box-shadow: 0 10px 14px 0 rgba(34, 36, 38, 0.5),\r\n      0 2px 10px 0 rgba(34, 36, 38, 0.15);\r\n  }\r\n  .ui.primary.button,\r\n  .ui.primary.buttons .button {\r\n    padding: 15px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid, Form, Segment, Icon, Message } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport WithForm from \"../hoc/withForm\";\r\nimport Dorms from \"../Dorms\";\r\nimport FirstDorm from \"../Dorms/FirstDorm/\";\r\nimport SecondDorm from \"../Dorms/SecondDorm\";\r\nimport ThirdDorm from \"../Dorms/ThirdDorm\";\r\nimport { FormStyle } from \"./style\";\r\n\r\nconst FormComponent = props => {\r\n  const [currentDorm, setCurrentDorm] = useState(null);\r\n  /**\r\n   * This is for setting min date that student can reserve a room\r\n   */\r\n  const date = new Date();\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth() + 1;\r\n  let day = date.getDate();\r\n  let currDate = `${year}-0${month}-${day}`;\r\n\r\n  function handleParentsChange(e) {\r\n    const { value } = e.target;\r\n    const [parentType, name] = e.target.name.split(\".\");\r\n    props.handleParentsChange(state => ({\r\n      ...state,\r\n      [parentType]: {\r\n        ...state[parentType],\r\n        [name]: value\r\n      }\r\n    }));\r\n  }\r\n\r\n  const renderDorm = () => {\r\n    switch (currentDorm) {\r\n      case 1:\r\n        return (\r\n          <FirstDorm\r\n            dormDb={props.state.dormDb}\r\n            setCurrentDorm={setCurrentDorm}\r\n            currentDorm={currentDorm}\r\n            setSelectedRoom={props.handleParentsChange}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <SecondDorm\r\n            dormDb={props.state.dormDb}\r\n            setCurrentDorm={setCurrentDorm}\r\n            currentDorm={currentDorm}\r\n            setSelectedRoom={props.handleParentsChange}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <ThirdDorm\r\n            dormDb={props.state.dormDb}\r\n            setCurrentDorm={setCurrentDorm}\r\n            currentDorm={currentDorm}\r\n            setSelectedRoom={props.handleParentsChange}\r\n          />\r\n        );\r\n\r\n      default:\r\n        return (\r\n          <Dorms\r\n            dormDb={props.state.dormDb}\r\n            currentdorm={currentDorm}\r\n            setCurrentDorm={setCurrentDorm}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormStyle>\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column computer={14} mobile={14}>\r\n            <Button\r\n              className=\"auth-btn\"\r\n              as={Link}\r\n              to=\"/admin\"\r\n              floated=\"right\"\r\n              animated=\"fade\"\r\n            >\r\n              <Button.Content visible>Авторизация</Button.Content>\r\n              <Button.Content hidden>\r\n                <Icon name=\"arrow right\" />\r\n              </Button.Content>\r\n            </Button>\r\n            <h1 style={{ color: \"#fff\" }} className=\"title\">\r\n              Dorm\r\n            </h1>\r\n            <Segment raised>\r\n              <Form\r\n                success={\r\n                  props.state.responseStatus === 200 ||\r\n                  props.state.responseStatus === 201\r\n                }\r\n                error={props.state.error}\r\n                loading={props.state.loading}\r\n                size=\"large\"\r\n                onSubmit={props.handleSubmit}\r\n                unstackable\r\n              >\r\n                <Grid.Row centered>\r\n                  <Grid.Column computer={14} mobile={14}>\r\n                    <h1\r\n                      style={{ padding: \"5px 20px 30px 20px\" }}\r\n                      className=\"title\"\r\n                    >\r\n                      Заявление\r\n                    </h1>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Фамилия</label>\r\n                    <input\r\n                      pattern=\"[А-ЯЁ][а-яё]{1,39}$\"\r\n                      required\r\n                      value={props.state.name_l}\r\n                      type=\"text\"\r\n                      name=\"name_l\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Заглавная буква,кириллица\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Имя</label>\r\n                    <input\r\n                      pattern=\"[А-ЯЁ][а-яё]{1,39}$\"\r\n                      required\r\n                      value={props.state.name_f}\r\n                      type=\"text\"\r\n                      name=\"name_f\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Заглавная буква,кириллица\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label className=\"form-label\">Отчество</label>\r\n                    <input\r\n                      pattern=\"[А-ЯЁ][а-яё]{1,39}$\"\r\n                      value={props.state.patronymic}\r\n                      type=\"text\"\r\n                      name=\"patronymic\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Заглавная буква,кириллица\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">ИИН</label>\r\n                    <input\r\n                      required\r\n                      value={props.state.uin}\r\n                      type=\"text\"\r\n                      name=\"uin\"\r\n                      maxLength=\"12\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Только цифры\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Группа</label>\r\n                    <input\r\n                      pattern=\"[\\-А-ЯЁ0-9 ]{2,12}$\"\r\n                      required\r\n                      value={props.state.group}\r\n                      type=\"text\"\r\n                      name=\"group\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"С заглавной буквы, кириллица\"\r\n                    />\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Номер телефона</label>\r\n                    <input\r\n                      required\r\n                      pattern=\"((\\+7)|[8])7[0-9]{9}$\"\r\n                      value={props.state.phone}\r\n                      type=\"text\"\r\n                      name=\"phone\"\r\n                      maxLength=\"11\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Начиная с 8\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">\r\n                      Количество детей в семье\r\n                    </label>\r\n                    <input\r\n                      required\r\n                      value={props.state.children}\r\n                      type=\"number\"\r\n                      name=\"children\"\r\n                      onChange={props.handleChange}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Номер комнаты</label>\r\n                    <input\r\n                      readOnly\r\n                      required\r\n                      value={props.state.room_id}\r\n                      type=\"number\"\r\n                      name=\"room_id\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Введите номер комнаты\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Номер общежития</label>\r\n                    <input\r\n                      readOnly\r\n                      required\r\n                      value={props.state.dorm_id || \"\"}\r\n                      type=\"number\"\r\n                      name=\"dorm_id\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Номер общежития\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field\r\n                    className=\"gender\"\r\n                    name=\"gender_id\"\r\n                    onChange={props.handleSelect}\r\n                    value={props.state.gender_id}\r\n                    label=\"Пол\"\r\n                    control=\"select\"\r\n                    required\r\n                  >\r\n                    <option value=\"\" disabled>\r\n                      Выберите пол\r\n                    </option>\r\n                    <option value=\"1\">Мужской</option>\r\n                    <option value=\"2\">Женский</option>\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Дата заселения</label>\r\n                    <input\r\n                      min={currDate}\r\n                      required\r\n                      value={props.state.date_residence}\r\n                      type=\"date\"\r\n                      name=\"date_residence\"\r\n                      onChange={props.handleChange}\r\n                    />\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <Form.Field required>\r\n                  <label className=\"form-label\">Адрес проживания</label>\r\n                  <input\r\n                    required\r\n                    value={props.state.address}\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    onChange={props.handleChange}\r\n                    placeholder=\"Улица, дом, квартира\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field required>\r\n                  <label className=\"form-label\">E-Mail</label>\r\n                  <input\r\n                    required\r\n                    value={props.state.email}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={props.handleChange}\r\n                    placeholder=\"test@test.kz\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field\r\n                  name=\"parents\"\r\n                  onChange={props.handleChange}\r\n                  value={props.state.parents}\r\n                  label=\"Родители\"\r\n                  control=\"select\"\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Нет\r\n                  </option>\r\n                  <option value=\"both\">Оба</option>\r\n                  <option value=\"mother\">Мама</option>\r\n                  <option value=\"father\">Папа</option>\r\n                </Form.Field>\r\n                <Form.Group>\r\n                  {(props.state.parents === \"mother\" ||\r\n                    props.state.parents === \"both\") && (\r\n                    <React.Fragment>\r\n                      <Form.Field>\r\n                        <label>Фамилия</label>\r\n                        <input\r\n                          name=\"mother.name_l\"\r\n                          value={props.state.mother.name_l || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Фамилия матери\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Имя</label>\r\n                        <input\r\n                          name=\"mother.name_f\"\r\n                          value={props.state.mother.name_f || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Имя матери\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Отчество</label>\r\n                        <input\r\n                          name=\"mother.patronymic\"\r\n                          value={props.state.mother.patronymic || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Отчество матери\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Номер телефона</label>\r\n                        <input\r\n                          name=\"mother.phone\"\r\n                          value={props.state.mother.phone || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Номер телефона матери\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                    </React.Fragment>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  {(props.state.parents === \"father\" ||\r\n                    props.state.parents === \"both\") && (\r\n                    <React.Fragment>\r\n                      <label>Отец</label>\r\n                      <Form.Field>\r\n                        <label>Фамилия</label>\r\n                        <input\r\n                          name=\"father.name_l\"\r\n                          value={props.state.father.name_l || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Фамилия отца\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Имя</label>\r\n                        <input\r\n                          name=\"father.name_f\"\r\n                          value={props.state.father.name_f || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Имя отца\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Отчество</label>\r\n                        <input\r\n                          name=\"father.patronymic\"\r\n                          value={props.state.father.patronymic || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Отчество отца\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Номер телефона</label>\r\n                        <input\r\n                          name=\"father.phone\"\r\n                          value={props.state.father.phone || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Номер телефона отца\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                    </React.Fragment>\r\n                  )}\r\n                </Form.Group>\r\n                {props.state.responseStatus === 200 ||\r\n                  (props.state.responseStatus === 201 && (\r\n                    <Message success header=\"Форма отправлена успешно!\" />\r\n                  ))}\r\n                {props.state.error && (\r\n                  <Message error header=\"Неправильно заполнена форма!\" />\r\n                )}\r\n                <Button animated=\"fade\" primary type=\"submit\">\r\n                  <Button.Content visible>Отправить заявку</Button.Content>\r\n                  <Button.Content hidden>\r\n                    <Icon name=\"arrow right\" />\r\n                  </Button.Content>\r\n                </Button>\r\n              </Form>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row centered>\r\n          <Grid.Column width=\"14\">\r\n            <Segment raised>{renderDorm()}</Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </FormStyle>\r\n  );\r\n};\r\n\r\nexport default WithForm(FormComponent);\r\n","import styled from \"styled-components\";\r\n\r\nexport const AdminComponent = styled.div`\r\n  background-color: inherit;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  height: 100vh;\r\n  .form {\r\n    padding-top: 50%;\r\n  }\r\n`;\r\n\r\nexport const AdminPanelStyle = styled.div`\r\n  height: 100vh;\r\n  .ui.segment {\r\n    border-radius: 0px;\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n  i.icon,\r\n  i.icons {\r\n    font-size: 1.4em;\r\n  }\r\n  .form-label,\r\n  .gender label,\r\n  .status label {\r\n    padding: 10px 10px 10px 0px;\r\n  }\r\n  .ui.button {\r\n    margin: 2px 2px 2px 0px;\r\n    padding: 10px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const AdminReportsStyle = styled.div`\r\n  background-color: inherit;\r\n`;\r\n\r\nexport const AdminRequestsStyle = styled.div`\r\n  background-color: inherit;\r\n`;\r\n\r\nexport const AdminDirectionStyle = styled.div`\r\n  background-color: inherit;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Icon,\r\n  Modal\r\n} from \"semantic-ui-react\";\r\nimport { withAPI } from \"../API\";\r\nimport { gender, findName } from \"../../utils/util\";\r\n\r\nimport { AdminReportsStyle } from \"./style\";\r\n\r\nconst ChangeStatusModal = props => {\r\n  const changeStatus = () => {\r\n    props.putStatus(props.report_id, props.status_id);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={changeStatus}>\r\n      <Form.Field\r\n        className=\"status\"\r\n        name=\"status_id\"\r\n        onChange={props.handleChange}\r\n        value={props.status_id || \"0\"}\r\n        control=\"select\"\r\n        required\r\n      >\r\n        <>\r\n          <option disabled value=\"0\">\r\n            Статус заявки\r\n          </option>\r\n          {props.dormDb.status &&\r\n            props.dormDb.status.map(status => {\r\n              const name = findName(props.dormDb.names, status.name_id);\r\n              return (\r\n                <option key={status.id} value={status.id}>\r\n                  {name.name_ru}\r\n                </option>\r\n              );\r\n            })}\r\n        </>\r\n      </Form.Field>\r\n      <Button primary type=\"submit\">\r\n        Изменить\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nclass AdminReports extends Component {\r\n  state = {\r\n    reports: [],\r\n    status_id: \"\",\r\n    report_id: \"\",\r\n    dormDb: {},\r\n    openModal: false\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (this.state.reports.length) return;\r\n    this.props.api.getReports().then(res => {\r\n      this.setState({\r\n        reports: res.data\r\n      });\r\n    });\r\n    if (this.state.dormDb.length) return;\r\n    this.props.api.getDormDb().then(res => {\r\n      this.setState({\r\n        dormDb: res.data\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const loaded = this.state.reports.length ? false : true;\r\n    return (\r\n      <AdminReportsStyle>\r\n        <Grid.Row centered>\r\n          <Grid.Column>\r\n            {!loaded ? (\r\n              <Segment loading={loaded}>\r\n                <h1>Направления</h1>\r\n                <Table size=\"large\" celled>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Фамилия</Table.HeaderCell>\r\n                      <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                      <Table.HeaderCell>Отчество</Table.HeaderCell>\r\n                      <Table.HeaderCell>Пол</Table.HeaderCell>\r\n                      <Table.HeaderCell>ИИН</Table.HeaderCell>\r\n                      <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\r\n                      <Table.HeaderCell>Телефон</Table.HeaderCell>\r\n                      <Table.HeaderCell>Сколько детей в семье</Table.HeaderCell>\r\n                      <Table.HeaderCell>\r\n                        Дата начала проживания\r\n                      </Table.HeaderCell>\r\n                      <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\r\n                      <Table.HeaderCell>Статус</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {this.state.reports.map((value, index) => {\r\n                      return (\r\n                        <Table.Row key={index}>\r\n                          <Table.Cell>{value.name_l}</Table.Cell>\r\n                          <Table.Cell>{value.name_f}</Table.Cell>\r\n                          <Table.Cell>{value.patronymic}</Table.Cell>\r\n                          <Table.Cell>{gender[value.gender_id]}</Table.Cell>\r\n                          <Table.Cell>{value.uin}</Table.Cell>\r\n                          <Table.Cell>{value.address}</Table.Cell>\r\n                          <Table.Cell>{value.phone}</Table.Cell>\r\n                          <Table.Cell>{value.children}</Table.Cell>\r\n                          <Table.Cell>{value.date_residence}</Table.Cell>\r\n                          <Table.Cell>{value.rooms.number}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <Modal\r\n                              open={this.state.openModal}\r\n                              onClose={() =>\r\n                                this.setState({\r\n                                  openModal: false\r\n                                })\r\n                              }\r\n                              dimmer=\"blurring\"\r\n                              size=\"fullscreen\"\r\n                              trigger={\r\n                                <Button\r\n                                  onClick={() =>\r\n                                    this.setState({\r\n                                      report_id: value.id,\r\n                                      openModal: true\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  Изменить статус\r\n                                </Button>\r\n                              }\r\n                              closeIcon\r\n                            >\r\n                              <Header\r\n                                icon=\"archive\"\r\n                                content=\"Изменение статуса\"\r\n                              />\r\n                              <Modal.Content>\r\n                                <ChangeStatusModal\r\n                                  handleChange={this.handleChange}\r\n                                  status_id={this.state.status_id}\r\n                                  report_id={this.state.report_id}\r\n                                  dormDb={this.state.dormDb}\r\n                                  putStatus={this.props.api.putStatus}\r\n                                />\r\n                              </Modal.Content>\r\n                            </Modal>\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              </Segment>\r\n            ) : (\r\n              <Segment\r\n                loading={this.state.reports.length ? false : true}\r\n                placeholder\r\n              >\r\n                <Header icon>\r\n                  <Icon name=\"file outline\" />\r\n                  <br />\r\n                  Список направлений пуст.\r\n                </Header>\r\n              </Segment>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </AdminReportsStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAPI(AdminReports);\r\n","import React, { PureComponent } from \"react\";\r\nimport { Button, Segment, Form } from \"semantic-ui-react\";\r\nimport { findName } from \"../../utils/util\";\r\nimport WithForm from \"../hoc/withForm\";\r\n\r\nimport { AdminDirectionStyle } from \"./style\";\r\n\r\nclass AdminDirection extends PureComponent {\r\n  render() {\r\n    return (\r\n      <AdminDirectionStyle>\r\n        <Segment raised>\r\n          <Form size=\"big\" onSubmit={this.props.handleCurrentFieldSubmitReport}>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Фамилия</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.name_l}\r\n                  type=\"text\"\r\n                  name=\"name_l\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите фамилию\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Имя</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.name_f}\r\n                  type=\"text\"\r\n                  name=\"name_f\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите имя\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label className=\"form-label\">Отчество</label>\r\n                <input\r\n                  value={this.props.openCurrentField.patronymic || \"\"}\r\n                  type=\"text\"\r\n                  name=\"patronymic\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите отчество\"\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field required>\r\n                <label className=\"form-label\">ИИН</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.uin}\r\n                  type=\"text\"\r\n                  name=\"uin\"\r\n                  maxLength=\"12\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите ИИН\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field\r\n                className=\"status\"\r\n                name=\"status_id\"\r\n                onChange={this.props.handleCurrentFieldSelect}\r\n                value={this.props.openCurrentField.status_id || \"0\"}\r\n                label=\"Статус\"\r\n                control=\"select\"\r\n                required\r\n              >\r\n                <>\r\n                  <option disabled value=\"0\">\r\n                    Статус заявки\r\n                  </option>\r\n                  {this.props.state.dormDb.status &&\r\n                    this.props.state.dormDb.status.map(status => {\r\n                      const name = findName(\r\n                        this.props.state.dormDb.names,\r\n                        status.name_id\r\n                      );\r\n                      return (\r\n                        <option key={status.id} value={status.id}>\r\n                          {name.name_ru}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </>\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Номер телефона</label>\r\n                <input\r\n                  required\r\n                  pattern=\"((\\+7)|[8])7[0-9]{9}$\"\r\n                  value={this.props.openCurrentField.phone}\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  maxLength=\"11\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"87081231212\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Количество детей в семье</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.children}\r\n                  type=\"number\"\r\n                  name=\"children\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите количество детей в семье\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Номер комнаты</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.rooms.id}\r\n                  type=\"number\"\r\n                  name=\"room_id\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите номер комнаты\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field\r\n                className=\"gender\"\r\n                name=\"gender_id\"\r\n                onChange={this.props.handleCurrentFieldChange}\r\n                value={this.props.openCurrentField.gender_id}\r\n                label=\"Пол\"\r\n                control=\"select\"\r\n                required\r\n              >\r\n                <>\r\n                  <option defaultValue=\"\" disabled>\r\n                    Пол\r\n                  </option>\r\n                  {this.props.state.dormDb.genders &&\r\n                    this.props.state.dormDb.genders.map(gender => {\r\n                      const name = findName(\r\n                        this.props.state.dormDb.names,\r\n                        gender.name_id\r\n                      );\r\n                      return (\r\n                        <option key={gender.id} value={gender.id}>\r\n                          {name.name_ru}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </>\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Дата заселения</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.date_residence}\r\n                  type=\"date\"\r\n                  name=\"date_residence\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                />\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Form.Field required>\r\n              <label className=\"form-label\">E-Mail</label>\r\n              <input\r\n                required\r\n                value={this.props.openCurrentField.email}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                onChange={this.props.handleCurrentFieldChange}\r\n                placeholder=\"E-Mail\"\r\n              />\r\n            </Form.Field>\r\n            <Form.Field required>\r\n              <label className=\"form-label\">Адрес проживания</label>\r\n              <input\r\n                required\r\n                value={this.props.openCurrentField.address}\r\n                type=\"text\"\r\n                name=\"address\"\r\n                onChange={this.props.handleCurrentFieldChange}\r\n                placeholder=\"Улица, дом, квартира\"\r\n              />\r\n            </Form.Field>\r\n            <Button primary type=\"submit\">\r\n              Создать направление\r\n            </Button>\r\n          </Form>\r\n        </Segment>\r\n      </AdminDirectionStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WithForm(AdminDirection);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Segment,\r\n  Modal,\r\n  Button,\r\n  Header,\r\n  Icon,\r\n  Form\r\n} from \"semantic-ui-react\";\r\nimport { withAPI } from \"../API\";\r\nimport { gender } from \"../../utils/util\";\r\nimport AdminDirection from \"./AdminDirection\";\r\nimport { withoutFields } from \"../../utils/util\";\r\n\r\nimport { AdminRequestsStyle } from \"./style\";\r\n\r\nconst DownloadDoc = props => {\r\n  return (\r\n    <Button onClick={props.getRequestDocument}>Скачать направление</Button>\r\n  );\r\n};\r\n\r\nclass AdminRequests extends Component {\r\n  state = {\r\n    requests: [],\r\n    openCurrentField: null,\r\n    room_id: null,\r\n    currentDataToDocument: null,\r\n    openModal: false,\r\n    loading: true,\r\n    searchValue: \"\",\r\n    foundedRequest: []\r\n  };\r\n\r\n  handleSubmitReport = e => {\r\n    const room_id = this.state.room_id;\r\n    const state = { ...this.state.openCurrentField, room_id };\r\n    const value = withoutFields(state, \"id\", \"active\", \"rooms\");\r\n    this.props.api.postReport(value).then(() => {\r\n      this.setState({\r\n        openModal: false\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      openCurrentField: {\r\n        ...this.state.openCurrentField,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSearchInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSearch = e => {\r\n    this.props.api\r\n      .getRequestById(this.state.searchValue)\r\n      .then(res => {\r\n        if (this.state.foundedRequest) {\r\n          this.setState({\r\n            foundedRequest: []\r\n          });\r\n        }\r\n        this.setState(prevState => ({\r\n          foundedRequest: [...prevState.foundedRequest, res.data]\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  handleSelect = e => {\r\n    this.setState({\r\n      openCurrentField: {\r\n        ...this.state.openCurrentField,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  getRequestDocument = () => {\r\n    return this.props.api\r\n      .getRequestDocument(\r\n        this.state.currentDataToDocument.name_f,\r\n        this.state.currentDataToDocument.name_l,\r\n        this.state.currentDataToDocument.patronymic,\r\n        this.state.currentDataToDocument.gender_id,\r\n        this.state.currentDataToDocument.address,\r\n        this.state.currentDataToDocument.phone,\r\n        this.state.currentDataToDocument.rooms.id,\r\n        this.state.currentDataToDocument.children,\r\n        this.state.currentDataToDocument.date_residence,\r\n        this.state.currentDataToDocument.group,\r\n        this.state.currentDataToDocument.mother,\r\n        this.state.currentDataToDocument.father,\r\n        this.state.currentDataToDocument.id\r\n      )\r\n      .then(res => {\r\n        window.open(res.config.url);\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.props.api\r\n      .getRequests()\r\n      .then(\r\n        res => {\r\n          this.setState({\r\n            requests: res.data,\r\n            loading: false\r\n          });\r\n        },\r\n        error => {\r\n          if (error.response.status === 401) {\r\n            return this.props.handleLogout();\r\n          }\r\n        }\r\n      )\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AdminRequestsStyle>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={14}>\r\n            {!this.state.loading ? (\r\n              <Segment loading={this.state.loading}>\r\n                <h1 style={{ textAlign: \"center\" }}>Заявления</h1>\r\n                <Form onSubmit={this.handleSearch}>\r\n                  <Form.Field inline>\r\n                    <label>\r\n                      <Icon corner=\"bottom left\" name=\"search\" />\r\n                    </label>\r\n                    <input\r\n                      onChange={this.handleSearchInput}\r\n                      value={this.state.searchValue}\r\n                      type=\"text\"\r\n                      name=\"searchValue\"\r\n                    />\r\n                    <Button primary type=\"submit\">\r\n                      Найти\r\n                    </Button>\r\n                  </Form.Field>\r\n                </Form>\r\n                {this.state.foundedRequest.length ? (\r\n                  <Table size=\"small\" compact celled>\r\n                    <Table.Header>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell>Фамилия</Table.HeaderCell>\r\n                        <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                        <Table.HeaderCell>Отчество</Table.HeaderCell>\r\n                        <Table.HeaderCell>Группа</Table.HeaderCell>\r\n                        <Table.HeaderCell>Пол</Table.HeaderCell>\r\n                        <Table.HeaderCell>ИИН</Table.HeaderCell>\r\n                        <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\r\n                        <Table.HeaderCell>Телефон</Table.HeaderCell>\r\n                        <Table.HeaderCell>\r\n                          Сколько детей в семье\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell>\r\n                          Дата начала проживания\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\r\n                        <Table.HeaderCell>Направление</Table.HeaderCell>\r\n                        <Table.HeaderCell>Скачать</Table.HeaderCell>\r\n                      </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                      {this.state.foundedRequest.map((value, index) => {\r\n                        return (\r\n                          <Table.Row key={index}>\r\n                            <Table.Cell>{value.name_l}</Table.Cell>\r\n                            <Table.Cell>{value.name_f}</Table.Cell>\r\n                            <Table.Cell>{value.patronymic}</Table.Cell>\r\n                            <Table.Cell>{value.group}</Table.Cell>\r\n                            <Table.Cell>{gender[value.gender_id]}</Table.Cell>\r\n                            <Table.Cell>{value.uin}</Table.Cell>\r\n                            <Table.Cell>{value.address}</Table.Cell>\r\n                            <Table.Cell>{value.phone}</Table.Cell>\r\n                            <Table.Cell>{value.children}</Table.Cell>\r\n                            <Table.Cell>{value.date_residence}</Table.Cell>\r\n                            <Table.Cell>{value.rooms.number}</Table.Cell>\r\n                            <Table.Cell>\r\n                              <Modal\r\n                                open={this.state.openModal}\r\n                                onClose={() =>\r\n                                  this.setState({\r\n                                    openModal: false\r\n                                  })\r\n                                }\r\n                                dimmer=\"blurring\"\r\n                                size=\"fullscreen\"\r\n                                trigger={\r\n                                  <Button\r\n                                    onClick={() =>\r\n                                      this.setState({\r\n                                        openCurrentField: value,\r\n                                        room_id: value.rooms.id,\r\n                                        openModal: true\r\n                                      })\r\n                                    }\r\n                                  >\r\n                                    Создать направление\r\n                                  </Button>\r\n                                }\r\n                                closeIcon\r\n                              >\r\n                                <Header\r\n                                  icon=\"archive\"\r\n                                  content=\"Создание направления\"\r\n                                />\r\n                                <Modal.Content>\r\n                                  <AdminDirection\r\n                                    openCurrentField={\r\n                                      this.state.openCurrentField\r\n                                    }\r\n                                    room_id={this.state.room_id}\r\n                                    handleCurrentFieldChange={this.handleChange}\r\n                                    handleCurrentFieldSelect={this.handleSelect}\r\n                                    handleCurrentFieldSubmitReport={\r\n                                      this.handleSubmitReport\r\n                                    }\r\n                                  />\r\n                                </Modal.Content>\r\n                              </Modal>\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                              <Modal\r\n                                dimmer=\"blurring\"\r\n                                size=\"mini\"\r\n                                trigger={\r\n                                  <Button\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        currentDataToDocument: value\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    Открыть направление\r\n                                  </Button>\r\n                                }\r\n                              >\r\n                                <Header\r\n                                  icon=\"file outline\"\r\n                                  content=\"Скачать направление\"\r\n                                />\r\n                                <Modal.Content>\r\n                                  <DownloadDoc\r\n                                    getRequestDocument={this.getRequestDocument}\r\n                                  />\r\n                                </Modal.Content>\r\n                              </Modal>\r\n                            </Table.Cell>\r\n                          </Table.Row>\r\n                        );\r\n                      })}\r\n                    </Table.Body>\r\n                  </Table>\r\n                ) : (\r\n                  <p />\r\n                )}\r\n                <hr />\r\n                <Table compact={true} size=\"small\" celled>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Фамилия</Table.HeaderCell>\r\n                      <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                      <Table.HeaderCell>Отчество</Table.HeaderCell>\r\n                      <Table.HeaderCell>Группа</Table.HeaderCell>\r\n                      <Table.HeaderCell>Пол</Table.HeaderCell>\r\n                      <Table.HeaderCell>ИИН</Table.HeaderCell>\r\n                      <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\r\n                      <Table.HeaderCell>Телефон</Table.HeaderCell>\r\n                      <Table.HeaderCell>Сколько детей в семье</Table.HeaderCell>\r\n                      <Table.HeaderCell>\r\n                        Дата начала проживания\r\n                      </Table.HeaderCell>\r\n                      <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\r\n                      <Table.HeaderCell>Направление</Table.HeaderCell>\r\n                      <Table.HeaderCell>Скачать</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {this.state.requests.map((value, index) => {\r\n                      return (\r\n                        <Table.Row key={index}>\r\n                          <Table.Cell>{value.name_l}</Table.Cell>\r\n                          <Table.Cell>{value.name_f}</Table.Cell>\r\n                          <Table.Cell>{value.patronymic}</Table.Cell>\r\n                          <Table.Cell>{value.group}</Table.Cell>\r\n                          <Table.Cell>{gender[value.gender_id]}</Table.Cell>\r\n                          <Table.Cell>{value.uin}</Table.Cell>\r\n                          <Table.Cell>{value.address}</Table.Cell>\r\n                          <Table.Cell>{value.phone}</Table.Cell>\r\n                          <Table.Cell>{value.children}</Table.Cell>\r\n                          <Table.Cell>{value.date_residence}</Table.Cell>\r\n                          <Table.Cell>{value.rooms.number}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <Modal\r\n                              open={this.state.openModal}\r\n                              onClose={() =>\r\n                                this.setState({\r\n                                  openModal: false\r\n                                })\r\n                              }\r\n                              dimmer=\"blurring\"\r\n                              size=\"fullscreen\"\r\n                              trigger={\r\n                                <Button\r\n                                  onClick={() =>\r\n                                    this.setState({\r\n                                      openCurrentField: value,\r\n                                      room_id: value.rooms.id,\r\n                                      openModal: true\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  Создать направление\r\n                                </Button>\r\n                              }\r\n                              closeIcon\r\n                            >\r\n                              <Header\r\n                                icon=\"archive\"\r\n                                content=\"Создание направления\"\r\n                              />\r\n                              <Modal.Content>\r\n                                <AdminDirection\r\n                                  openCurrentField={this.state.openCurrentField}\r\n                                  room_id={this.state.room_id}\r\n                                  handleCurrentFieldChange={this.handleChange}\r\n                                  handleCurrentFieldSelect={this.handleSelect}\r\n                                  handleCurrentFieldSubmitReport={\r\n                                    this.handleSubmitReport\r\n                                  }\r\n                                />\r\n                              </Modal.Content>\r\n                            </Modal>\r\n                          </Table.Cell>\r\n                          <Table.Cell>\r\n                            <Modal\r\n                              dimmer=\"blurring\"\r\n                              size=\"mini\"\r\n                              trigger={\r\n                                <Button\r\n                                  onClick={() => {\r\n                                    this.setState({\r\n                                      currentDataToDocument: value\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  Открыть направление\r\n                                </Button>\r\n                              }\r\n                            >\r\n                              <Header\r\n                                icon=\"file outline\"\r\n                                content=\"Скачать направление\"\r\n                              />\r\n                              <Modal.Content>\r\n                                <DownloadDoc\r\n                                  getRequestDocument={this.getRequestDocument}\r\n                                />\r\n                              </Modal.Content>\r\n                            </Modal>\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              </Segment>\r\n            ) : (\r\n              <Segment\r\n                loading={this.state.requests.length ? false : true}\r\n                placeholder\r\n              >\r\n                <Header icon>\r\n                  <Icon name=\"file outline\" />\r\n                  <br />\r\n                  Список заявлений пуст.\r\n                </Header>\r\n              </Segment>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </AdminRequestsStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAPI(AdminRequests);\r\n","import React, { useState } from \"react\";\r\nimport AdminReports from \"./AdminReports\";\r\nimport AdminRequests from \"./AdminRequests\";\r\nimport { Grid, Menu, Segment } from \"semantic-ui-react\";\r\n\r\nimport { AdminPanelStyle } from \"./style\";\r\n\r\nconst AdminPanel = props => {\r\n  const [routes, setRoutes] = useState(1);\r\n  return (\r\n    <AdminPanelStyle>\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column>\r\n            <Segment>\r\n              <Menu fluid size=\"large\" secondary>\r\n                <Menu.Item className=\"header-name\" icon=\"user\" />\r\n                <Menu.Item onClick={() => setRoutes(1)} name=\"Заявления\" />\r\n                <Menu.Item onClick={() => setRoutes(2)} name=\"Направления\" />\r\n                <Menu.Item\r\n                  icon=\"sign out\"\r\n                  position=\"right\"\r\n                  onClick={props.handleLogout}\r\n                  name=\"Выйти\"\r\n                />\r\n              </Menu>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row centered>\r\n          <Grid.Column>\r\n            <React.Fragment>\r\n              {routes === 1 && (\r\n                <AdminRequests handleLogout={props.handleLogout} />\r\n              )}\r\n              {routes === 2 && <AdminReports />}\r\n            </React.Fragment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </AdminPanelStyle>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","/**\r\n * @file This HOC is for authorization for admin\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { withAPI } from \"../API\";\r\n\r\nconst WithAdmin = WrappedComponent => {\r\n  class WithAdmin extends Component {\r\n    state = {\r\n      login: \"\",\r\n      password: \"\",\r\n      user:\r\n        localStorage.getItem(\"sessionUser\") &&\r\n        localStorage.getItem(\"sessionUser\")\r\n    };\r\n\r\n    /**\r\n     * Get password and login for administrator\r\n     */\r\n    handleLogin = () => {\r\n      this.props.api\r\n        .getAuth(this.state.login, this.state.password)\r\n        .then(res => {\r\n          this.setState({\r\n            user: res.data.token\r\n          });\r\n          localStorage.setItem(\"sessionUser\", res.data.token);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Function for loggingout of administrator\r\n     */\r\n    handleLogout = () => {\r\n      localStorage.removeItem(\"sessionUser\");\r\n      this.setState({\r\n        user: null\r\n      });\r\n    };\r\n\r\n    handleChange = e => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <WrappedComponent\r\n          state={this.state}\r\n          handleChange={this.handleChange}\r\n          handleLogout={this.handleLogout}\r\n          handleLogin={this.handleLogin}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  return withAPI(WithAdmin);\r\n};\r\n\r\nexport default WithAdmin;\r\n","import React from \"react\";\r\nimport AdminPanel from \"./AdminPanel\";\r\nimport withAdmin from \"../hoc/withAdmin\";\r\nimport { AdminComponent } from \"./style\";\r\nimport { Grid, Segment, Input, Button, Form } from \"semantic-ui-react\";\r\n\r\nconst Admin = props => {\r\n  const { user } = props.state;\r\n  if (user) {\r\n    return <AdminPanel handleLogout={props.handleLogout} />;\r\n  }\r\n\r\n  return (\r\n    <AdminComponent>\r\n      <Grid container>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={8}>\r\n            <Form className=\"form\" onSubmit={props.handleLogin}>\r\n              <Segment>\r\n                <Form.Field>\r\n                  <label htmlFor=\"login\">Login</label>\r\n                  <Input\r\n                    value={props.state.login}\r\n                    onChange={props.handleChange}\r\n                    name=\"login\"\r\n                    type=\"text\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    value={props.state.password}\r\n                    onChange={props.handleChange}\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                  />\r\n                </Form.Field>\r\n                <Button type=\"submit\">Войти</Button>\r\n              </Segment>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </AdminComponent>\r\n  );\r\n};\r\n\r\nexport default withAdmin(Admin);\r\n","import styled from \"styled-components\";\r\n\r\nexport const AppWrapper = styled.div`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Montserrat\");\r\n  @import url(\"https://fonts.googleapis.com/css?family=Roboto&subset=cyrillic,cyrillic-ext,latin-ext\");\r\n`;\r\n","import React from \"react\";\r\nimport FormComponent from \"../Form\";\r\nimport Admin from \"../Admin\";\r\nimport { AppWrapper } from \"./style\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n// import Preloader from \"./Preloader\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <AppWrapper>\r\n        <div className=\"app\">\r\n          <Route exact path=\"/\" component={FormComponent} />\r\n          <Route exact path=\"/admin\" component={Admin} />\r\n        </div>\r\n      </AppWrapper>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport APIContext, { API } from \"./components/API\";\r\nimport App from \"./components/App\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <HashRouter basename={process.env.PUBLIC_URL}>\r\n    <APIContext.Provider value={new API()}>\r\n      <App />\r\n    </APIContext.Provider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}