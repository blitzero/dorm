{"version":3,"sources":["static/1.png","components/API/context.js","components/API/api.js","components/API/index.js","utils/util.js","components/hoc/withForm.js","components/Dorms/style.js","components/Dorms/index.js","components/Dorms/FirstDorm.js","components/Form/style.js","components/Form/index.js","components/Admin/style.js","components/Admin/AdminReports.js","components/Admin/AdminDirection.js","components/Admin/AdminRequests.js","components/Admin/AdminPanel.js","components/hoc/withAdmin.js","components/Admin/index.js","components/App/style.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","API","React","createContext","withAPI","WrappedComponent","props","react_default","a","createElement","context_API","Consumer","api","Object","assign","instance","axios","create","baseURL","headers","content-type","interceptors","request","use","config","token","localStorage","getItem","newConfig","objectSpread","Token","_this","this","classCallCheck","mother","father","getAuth","login","password","get","concat","postRequest","reqValues","reqOptions","encodeURI","name_f","name_l","patronymic","phone","post","qs","stringify","postReport","repValues","getDormDb","getReports","getRequests","getRequestDocument","gender_id","address","room_id","children","date_residence","group","components_API","findName","names","id","find","name","withoutFields","values","newValues","_len","arguments","length","fields","Array","_key","forEach","field","gender","1","2","uin","email","parents","status_id","WithForm","_Component","_getPrototypeOf2","args","possibleConstructorReturn","getPrototypeOf","call","apply","state","responseStatus","loading","dormDb","resetForm","setState","handleSubmit","e","preventDefault","then","res","status","handleSubmitReport","handleChange","defineProperty","target","value","handleParentsChange","callback","handleSelect","inherits","createClass","key","_this2","data","catch","error","Component","RoomWrapper","styled","div","_templateObject","DormStyle","_templateObject2","Dorms","Grid","Row","centered","Column","width","className","Card","Group","itemsPerRow","raised","color","image","onClick","setCurrentDorm","meta","FirstDorm","display","room","handleTooltip","prevState","src","DormImage","alt","x","y","height","strokeWidth","FormStyle","style_templateObject","_useState","useState","_useState2","slicedToArray","currentDorm","_e$target$name$split","split","_e$target$name$split2","parentType","computer","mobile","Segment","Form","success","size","onSubmit","unstackable","widths","Field","required","pattern","variant","type","onChange","placeholder","maxLength","label","control","disabled","Fragment","Message","header","Button","animated","primary","Content","visible","hidden","Icon","Dorms_FirstDorm","components_Dorms","AdminComponent","Admin_style_templateObject","AdminPanelStyle","style_templateObject2","AdminReportsStyle","_templateObject3","AdminRequestsStyle","_templateObject4","AdminDirectionStyle","_templateObject5","AdminReports","reports","componentDidMount","loaded","Table","Header","HeaderCell","celled","Body","map","index","Cell","number","Checkbox","slider","openCurrentField","name_id","name_ru","genders","DownloadDoc","AdminRequests","requests","currentDataToDocument","window","open","url","response","handleLogout","fixed","Modal","dimmer","trigger","closeIcon","icon","content","Admin_AdminDirection","AdminRequests_DownloadDoc","AdminPanel","routes","setRoutes","Menu","fluid","secondary","Item","position","Admin_AdminRequests","Admin_AdminReports","WithAdmin","user","handleLogin","setItem","removeItem","withAdmin","Admin_AdminPanel","container","inverted","htmlFor","Input","AppWrapper","App_style_templateObject","App","Switch","Route","exact","path","component","FormComponent","Admin","ReactDOM","render","HashRouter","basename","process","Provider","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b30b385f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.87a14a42.png\";","import React from \"react\";\r\n\r\nconst API = React.createContext(null);\r\n\r\nexport const withAPI = WrappedComponent => props => {\r\n  return (\r\n    <API.Consumer>\r\n      {api => <WrappedComponent {...props} api={api} />}\r\n    </API.Consumer>\r\n  );\r\n};\r\n\r\nexport default API;\r\n","import axios from \"axios\";\r\nimport qs from \"querystring\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://dorm-keu.herokuapp.com/api\",\r\n  headers: {\r\n    \"content-type\": \"application/x-www-form-urlencoded\"\r\n  }\r\n});\r\n\r\ninstance.interceptors.request.use(config => {\r\n  const token = localStorage.getItem(\"sessionUser\");\r\n\r\n  if (!token) return config;\r\n  const newConfig = { ...config };\r\n  newConfig.headers.Token = token;\r\n  return newConfig;\r\n});\r\n\r\n/**\r\n * @this {API}\r\n */\r\nclass API {\r\n  constructor() {\r\n    this.api = instance;\r\n  }\r\n\r\n  mother = null;\r\n  father = null;\r\n\r\n  //* get login and password of administrator\r\n  /**\r\n   * @param {string} login The login of admin\r\n   * @param {string} password The password of admin\r\n   */\r\n  getAuth = (login, password) => {\r\n    return this.api.get(`auth?login=${login}&password=${password}`);\r\n  };\r\n\r\n  //* posting request to the server\r\n  /**\r\n   * @param {} reqValues The Request data that will be sended\r\n   */\r\n  postRequest = reqValues => {\r\n    const reqOptions = {\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded\",\r\n        mother:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(reqValues.mother.name_f) +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(reqValues.mother.name_l) +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(reqValues.mother.patronymic) +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(reqValues.mother.phone) +\r\n          '\"}',\r\n        // `'{ \"name_f\": \"${encodeURI(reqValues.mother.name_f)}\", \"name_l\": \"${encodeURI(reqValues.mother.name_l)}\", \"patronymic\": \"${encodeURI(reqValues.mother.patronymic)}\", \"phone\": \"${encodeURI(reqValues.mother.phone)}\"'`\r\n        father:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(reqValues.father.name_f) +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(reqValues.father.name_l) +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(reqValues.father.patronymic) +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(reqValues.father.phone) +\r\n          '\"}'\r\n        // `'{ \"name_f\": \"${encodeURI(reqValues.father.name_f)}\", \"name_l\": \"${encodeURI(reqValues.father.name_l)}\", \"patronymic\": \"${encodeURI(reqValues.father.patronymic)}\", \"phone\": \"${encodeURI(reqValues.father.phone)}\"'`\r\n      }\r\n    };\r\n    return this.api.post(\"/request\", qs.stringify(reqValues), reqOptions);\r\n  };\r\n\r\n  //* posting reports to the server\r\n  /**\r\n   * @param {} repValues The Report data that will be sended\r\n   */\r\n  postReport = repValues => {\r\n    const repOptions = {\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded\"\r\n      }\r\n    };\r\n\r\n    return this.api.post(\"/report\", qs.stringify(repValues), repOptions);\r\n  };\r\n\r\n  //* get dorm database\r\n  getDormDb = () => {\r\n    return this.api.get(\"/db\");\r\n  };\r\n\r\n  //* get all reports\r\n  getReports = () => {\r\n    return this.api.get(\"/report\");\r\n  };\r\n\r\n  //*get all request\r\n  getRequests = () => {\r\n    return this.api.get(\"/request\");\r\n  };\r\n\r\n  //* get autocompleted word document of request\r\n  /**\r\n   * @param {string} name_f Firstname of student\r\n   * @param {string} name_l Lastname of student\r\n   * @param {string} patronymic Patronymic of student\r\n   * @param {string} gender_id Gender\r\n   * @param {string} address Address of living of student\r\n   * @param {string} phone Phone of student\r\n   * @param {number} room_id Which room he selected\r\n   * @param {number} children How many childrens he has in family\r\n   * @param {date} date_residence On which date he reserved a room\r\n   * @param {string} group In which group he joined\r\n   */\r\n  getRequestDocument = (\r\n    name_f,\r\n    name_l,\r\n    patronymic,\r\n    gender_id,\r\n    address,\r\n    phone,\r\n    room_id,\r\n    children,\r\n    date_residence,\r\n    group\r\n  ) => {\r\n    return this.api.get(\r\n      `/doc/request?name_f=${name_f}&name_l=${name_l}&patronymic=${patronymic}&gender_id=${gender_id}&address=${address}&phone=${phone}&room_id=${room_id}&children=${children}&date_residence=${date_residence}&group=${group}`\r\n    );\r\n  };\r\n}\r\n\r\nexport default API;\r\n","import APIContext, { withAPI } from \"./context\";\r\n//*class API\r\nimport API from \"./api\";\r\n\r\n//* for main index.js\r\nexport default APIContext;\r\n//* for other components\r\nexport { withAPI, API };\r\n","export function findName(names, id) {\r\n  return names.find(name => id === name.id);\r\n}\r\n\r\nexport function withoutFields(values, ...fields) {\r\n  const newValues = { ...values };\r\n  fields.forEach(field => {\r\n    delete newValues[field];\r\n  });\r\n\r\n  return newValues;\r\n}\r\n\r\nexport const gender = {\r\n  1: \"Мужской\",\r\n  2: \"Женский\"\r\n};\r\n\r\nexport function sortByKeys(obj) {\r\n  const keys = Object.keys(obj).sort();\r\n\r\n  return keys.reduce((acc, key) => {\r\n    acc[key] = obj[key];\r\n    return acc;\r\n  }, {});\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withAPI } from \"../API\";\r\nimport { withoutFields } from \"../../utils/util\";\r\nconst fields = {\r\n  name_f: \"\",\r\n  name_l: \"\",\r\n  patronymic: \"\",\r\n  uin: \"\",\r\n  group: \"\",\r\n  address: \"\",\r\n  phone: \"\",\r\n  children: \"\",\r\n  room_id: \"\",\r\n  gender_id: \"\",\r\n  email: \"\",\r\n  parents: \"\",\r\n  mother: {\r\n    name_l: \"\",\r\n    name_f: \"\",\r\n    patronymic: \"\",\r\n    phone: \"\"\r\n  },\r\n  father: {\r\n    name_l: \"\",\r\n    name_f: \"\",\r\n    patronymic: \"\",\r\n    phone: \"\"\r\n  },\r\n  date_residence: \"\",\r\n  status_id: \"\"\r\n};\r\nconst WithForm = WrappedComponent => {\r\n  class WithForm extends Component {\r\n    state = {\r\n      name_f: \"\",\r\n      name_l: \"\",\r\n      patronymic: \"\",\r\n      uin: \"\",\r\n      group: \"\",\r\n      address: \"\",\r\n      phone: \"\",\r\n      children: \"\",\r\n      room_id: \"\",\r\n      gender_id: \"\",\r\n      date_residence: \"\",\r\n      status_id: \"\",\r\n      email: \"\",\r\n      responseStatus: \"\",\r\n      loading: false,\r\n      parents: \"\",\r\n      mother: {\r\n        name_l: \"\",\r\n        name_f: \"\",\r\n        patronymic: \"\",\r\n        phone: \"\"\r\n      },\r\n      father: {\r\n        name_l: \"\",\r\n        name_f: \"\",\r\n        patronymic: \"\",\r\n        phone: \"\"\r\n      },\r\n      dormDb: {}\r\n    };\r\n\r\n    //* reset form fields\r\n    resetForm = () => {\r\n      this.setState({ ...fields });\r\n    };\r\n\r\n    //* get from the api the dorm database info\r\n    componentDidMount() {\r\n      if (this.state.dormDb.length) return;\r\n\r\n      this.props.api\r\n        .getDormDb()\r\n        .then(res => {\r\n          this.setState({\r\n            dormDb: res.data\r\n          });\r\n        })\r\n        .catch(error => {\r\n          throw error;\r\n        });\r\n    }\r\n\r\n    //* handling for posting requests\r\n    handleSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      const state = { ...this.state };\r\n      const values = withoutFields(\r\n        state,\r\n        \"status_id\",\r\n        \"dormDb\",\r\n        \"parents\",\r\n        \"responseStatus\",\r\n        \"loading\"\r\n      );\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      this.props.api.postRequest(values).then(res => {\r\n        this.setState({\r\n          responseStatus: res.status,\r\n          loading: false\r\n        });\r\n      });\r\n      this.resetForm();\r\n    };\r\n\r\n    //* handling for posting reports\r\n    handleSubmitReport = () => {\r\n      const state = { ...this.state };\r\n      const values = withoutFields(\r\n        state,\r\n        \"group\",\r\n        \"dormDb\",\r\n        \"parents\",\r\n        \"responseStatus\",\r\n        \"loading\"\r\n      );\r\n      this.props.api.postReport(values);\r\n      this.resetForm();\r\n    };\r\n\r\n    //* handling for inputs\r\n    handleChange = e => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    };\r\n\r\n    //* handling for mother and father inputs\r\n    handleParentsChange = callback => {\r\n      this.setState(callback);\r\n    };\r\n\r\n    //* handling for select and options\r\n    handleSelect = e => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <WrappedComponent\r\n          state={this.state}\r\n          handleSubmit={this.handleSubmit}\r\n          handleChange={this.handleChange}\r\n          handleSelect={this.handleSelect}\r\n          handleParentsChange={this.handleParentsChange}\r\n          handleSubmitReport={this.handleSubmitReport}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return withAPI(WithForm);\r\n};\r\n\r\nexport default WithForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const RoomWrapper = styled.div`\r\n  height: 100%;\r\n  .ui.cards a.card:hover,\r\n  .ui.link.card:hover,\r\n  .ui.link.cards .card:hover,\r\n  a.ui.card:hover {\r\n    transform: translateY(-15px);\r\n  }\r\n  .title {\r\n    background-color: transparent;\r\n    font-size: 42px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    padding: 30px;\r\n  }\r\n\r\n  .desc {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    font-family: \"Montserrat\", sans-serif;\r\n    color: #ffffff;\r\n  }\r\n\r\n  .ui.card > .image,\r\n  .ui.cards > .card > .image {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const DormStyle = styled.div`\r\n  background-color: #ffffff;\r\n  ul {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  outline: none;\r\n  background-image: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  .svg {\r\n    width: 1080px;\r\n    height: 666px;\r\n    position: absolute;\r\n  }\r\n  .rectangle {\r\n    position: relative;\r\n    transition: 0.5s all;\r\n    cursor: pointer;\r\n    fill: transparent;\r\n  }\r\n  .rectangle:hover {\r\n    fill: gray;\r\n  }\r\n\r\n  .title {\r\n    font-size: 24px;\r\n  }\r\n\r\n  .hide {\r\n    display: none;\r\n  }\r\n  .show {\r\n    width: 200px;\r\n    height: 200px;\r\n    background-color: #000000;\r\n    border-radius: 4px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    font-size: 24px;\r\n    color: #ffffff;\r\n    top: 150px;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 160px;\r\n  }\r\n  .show ul li {\r\n    list-style-type: none;\r\n    line-height: 40px;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { withAPI } from \"../API\";\r\nimport { RoomWrapper } from \"./style\";\r\nimport { Grid, Card } from \"semantic-ui-react\";\r\n\r\nclass Dorms extends Component {\r\n  render() {\r\n    return (\r\n      <RoomWrapper>\r\n        <Grid>\r\n          <Grid.Row centered>\r\n            <Grid.Column width={8}>\r\n              <h1 className=\"title\">Общежития</h1>\r\n              <p className=\"desc\">Выберите корпус</p>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row centered>\r\n            <Grid.Column width={14}>\r\n              <Card.Group itemsPerRow={4} centered>\r\n                <Card\r\n                  raised\r\n                  color=\"yellow\"\r\n                  image=\"https://react.semantic-ui.com/images/wireframe/image.png\"\r\n                  onClick={() => this.props.setCurrentDorm(1)}\r\n                  meta=\"г. Караганда, ул. Академическая 5\"\r\n                />\r\n                <Card\r\n                  raised\r\n                  color=\"yellow\"\r\n                  image=\"https://react.semantic-ui.com/images/wireframe/image.png\"\r\n                  onClick={() => this.props.setCurrentDorm(2)}\r\n                  meta=\"г. Караганда, ул. Академическая 5\"\r\n                />\r\n                <Card\r\n                  raised\r\n                  color=\"yellow\"\r\n                  image=\"https://react.semantic-ui.com/images/wireframe/image.png\"\r\n                  onClick={() => this.props.setCurrentDorm(3)}\r\n                  meta=\"г. Караганда, ул. Академическая 5\"\r\n                />\r\n              </Card.Group>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </RoomWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAPI(Dorms);\r\n","import React, { Component } from \"react\";\r\nimport DormImage from \"../../static/1.png\";\r\nimport { DormStyle } from \"./style\";\r\n\r\nclass FirstDorm extends Component {\r\n  state = {\r\n    display: false,\r\n    room: \"\"\r\n  };\r\n  handleTooltip = room => {\r\n    this.setState(prevState => ({\r\n      display: !prevState.display,\r\n      room: room\r\n    }));\r\n  };\r\n  render() {\r\n    return (\r\n      <DormStyle>\r\n        <img src={DormImage} alt=\"Dorm\" />\r\n        <div className=\"show\">\r\n          <ul>\r\n            <li>Info: dasdasd</li>\r\n            <li>Room: {this.state.room}</li>\r\n            <li>Floor: 1</li>\r\n          </ul>\r\n        </div>\r\n        <svg className=\"svg\">\r\n          <rect\r\n            className=\"rectangle\"\r\n            x=\"77.96\"\r\n            y=\"445.77\"\r\n            width=\"97.901\"\r\n            height=\"194.58\"\r\n            strokeWidth=\"7.5678\"\r\n            onClick={() => this.handleTooltip(101)}\r\n          />\r\n          <rect\r\n            className=\"rectangle\"\r\n            x=\"182.45\"\r\n            y=\"445.67\"\r\n            width=\"97.11\"\r\n            height=\"194.67\"\r\n            strokeWidth=\"7.5391\"\r\n            onClick={() => this.handleTooltip(102)}\r\n          />\r\n          <rect\r\n            className=\"rectangle\"\r\n            x=\"286.09\"\r\n            y=\"445.67\"\r\n            width=\"93.284\"\r\n            height=\"194.47\"\r\n            strokeWidth=\"7.3852\"\r\n            onClick={() => this.handleTooltip(103)}\r\n          />\r\n          <rect\r\n            className=\"rectangle\"\r\n            x=\"385.61\"\r\n            y=\"445.67\"\r\n            width=\"87.893\"\r\n            height=\"194.67\"\r\n            strokeWidth=\"7.1724\"\r\n            onClick={() => this.handleTooltip(104)}\r\n          />\r\n          <rect\r\n            className=\"rectangle\"\r\n            x=\"480.19\"\r\n            y=\"445.67\"\r\n            width=\"84.358\"\r\n            height=\"194.67\"\r\n            strokeWidth=\"7.0267\"\r\n            onClick={() => this.handleTooltip(105)}\r\n          />\r\n          <rect\r\n            className=\"rectangle\"\r\n            x=\"570.94\"\r\n            y=\"445.67\"\r\n            width=\"86.548\"\r\n            height=\"194.67\"\r\n            strokeWidth=\"7.1173\"\r\n            onClick={() => this.handleTooltip(106)}\r\n          />\r\n          <rect\r\n            className=\"rectangle\"\r\n            x=\"663.61\"\r\n            y=\"445.67\"\r\n            width=\"88.07\"\r\n            height=\"194.74\"\r\n            strokeWidth=\"7.1808\"\r\n            onClick={() => this.handleTooltip(107)}\r\n          />\r\n          <rect\r\n            className=\"rectangle\"\r\n            x=\"757.94\"\r\n            y=\"445.66\"\r\n            width=\"78.877\"\r\n            height=\"194.74\"\r\n            strokeWidth=\"6.7958\"\r\n            onClick={() => this.handleTooltip(108)}\r\n          />\r\n          <rect\r\n            className=\"rectangle\"\r\n            x=\"843.35\"\r\n            y=\"445.68\"\r\n            width=\"74.206\"\r\n            height=\"194.66\"\r\n            strokeWidth=\"6.5901\"\r\n            onClick={() => this.handleTooltip(109)}\r\n          />\r\n          <rect\r\n            className=\"rectangle\"\r\n            x=\"923.60\"\r\n            y=\"445.67\"\r\n            width=\"79.424\"\r\n            height=\"194.62\"\r\n            strokeWidth=\"6.8172\"\r\n            onClick={() => this.handleTooltip(110)}\r\n          />\r\n        </svg>\r\n      </DormStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FirstDorm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormStyle = styled.div`\r\n  .title {\r\n    color: #fff;\r\n    font-family: \"Montserrat\", sans-serif;\r\n    text-shadow: #000 2px 2px 4px;\r\n    font-size: 42px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    padding: 30px;\r\n  }\r\n  .form-label,\r\n  .gender label {\r\n    padding: 10px 10px 10px 0px;\r\n    font-family: \"Roboto\", sans-serif;\r\n  }\r\n  .button {\r\n    margin: 10px 10px 10px 0px;\r\n    padding: 15px;\r\n  }\r\n  .ui.raised.segment,\r\n  .ui.raised.segments {\r\n    box-shadow: 0 10px 14px 0 rgba(34, 36, 38, 0.5),\r\n      0 2px 10px 0 rgba(34, 36, 38, 0.15);\r\n  }\r\n  .ui.primary.button,\r\n  .ui.primary.buttons .button {\r\n    padding: 15px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid, Form, Segment, Icon, Message } from \"semantic-ui-react\";\r\nimport WithForm from \"../hoc/withForm\";\r\nimport Dorms from \"../Dorms\";\r\nimport FirstDorm from \"../Dorms/FirstDorm\";\r\nimport { FormStyle } from \"./style\";\r\n\r\nconst FormComponent = props => {\r\n  const [currentDorm, setCurrentDorm] = useState(null);\r\n\r\n  function handleParentsChange(e) {\r\n    const { value } = e.target;\r\n    const [parentType, name] = e.target.name.split(\".\");\r\n    props.handleParentsChange(state => ({\r\n      ...state,\r\n      [parentType]: {\r\n        ...state[parentType],\r\n        [name]: value\r\n      }\r\n    }));\r\n  }\r\n  return (\r\n    <FormStyle>\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column computer={14} mobile={10}>\r\n            <h1 className=\"title\">Dorm</h1>\r\n            <Segment raised>\r\n              <Form\r\n                success={\r\n                  props.state.responseStatus === 200 ||\r\n                  props.state.responseStatus === 201\r\n                }\r\n                error={\r\n                  props.state.responseStatus === 400 ||\r\n                  props.state.responseStatus === 401 ||\r\n                  props.state.responseStatus === 404 ||\r\n                  props.state.responseStatus === 409\r\n                }\r\n                loading={props.state.loading}\r\n                size=\"large\"\r\n                onSubmit={props.handleSubmit}\r\n                unstackable\r\n              >\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Фамилия</label>\r\n                    <input\r\n                      pattern=\"[А-ЯЁ][а-яё]{1,39}$\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      value={props.state.name_l}\r\n                      type=\"text\"\r\n                      name=\"name_l\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Заглавная буква,кириллица\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Имя</label>\r\n                    <input\r\n                      pattern=\"[А-ЯЁ][а-яё]{1,39}$\"\r\n                      required\r\n                      value={props.state.name_f}\r\n                      type=\"text\"\r\n                      name=\"name_f\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Заглавная буква,кириллица\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label className=\"form-label\">Отчество</label>\r\n                    <input\r\n                      pattern=\"[А-ЯЁ][а-яё]{1,39}$\"\r\n                      value={props.state.patronymic}\r\n                      type=\"text\"\r\n                      name=\"patronymic\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Заглавная буква,кириллица\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">ИИН</label>\r\n                    <input\r\n                      required\r\n                      value={props.state.uin}\r\n                      type=\"text\"\r\n                      name=\"uin\"\r\n                      maxLength=\"12\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Только цифры\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Группа</label>\r\n                    <input\r\n                      pattern=\"[\\-А-ЯЁ0-9 ]{2,12}$\"\r\n                      required\r\n                      value={props.state.group}\r\n                      type=\"text\"\r\n                      name=\"group\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"С заглавной буквы, кириллица\"\r\n                    />\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Номер телефона</label>\r\n                    <input\r\n                      required\r\n                      pattern=\"((\\+7)|[8])7[0-9]{9}$\"\r\n                      value={props.state.phone}\r\n                      type=\"text\"\r\n                      name=\"phone\"\r\n                      maxLength=\"11\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Начиная с 8\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">\r\n                      Количество детей в семье\r\n                    </label>\r\n                    <input\r\n                      required\r\n                      value={props.state.children}\r\n                      type=\"number\"\r\n                      name=\"children\"\r\n                      onChange={props.handleChange}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Номер комнаты</label>\r\n                    <input\r\n                      required\r\n                      value={props.state.room_id}\r\n                      type=\"number\"\r\n                      name=\"room_id\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Введите номер комнаты\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field\r\n                    className=\"gender\"\r\n                    name=\"gender_id\"\r\n                    onChange={props.handleSelect}\r\n                    value={props.state.gender_id}\r\n                    label=\"Пол\"\r\n                    control=\"select\"\r\n                    required\r\n                  >\r\n                    <option value=\"\" disabled>\r\n                      Выберите пол\r\n                    </option>\r\n                    <option value=\"1\">Мужской</option>\r\n                    <option value=\"2\">Женский</option>\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Дата заселения</label>\r\n                    <input\r\n                      required\r\n                      value={props.state.date_residence}\r\n                      type=\"date\"\r\n                      name=\"date_residence\"\r\n                      onChange={props.handleChange}\r\n                    />\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <Form.Field required>\r\n                  <label className=\"form-label\">Адрес проживания</label>\r\n                  <input\r\n                    required\r\n                    value={props.state.address}\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    onChange={props.handleChange}\r\n                    placeholder=\"Улица, дом, квартира\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field required>\r\n                  <label className=\"form-label\">E-Mail</label>\r\n                  <input\r\n                    required\r\n                    value={props.state.email}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={props.handleChange}\r\n                    placeholder=\"E-Mail\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field\r\n                  name=\"parents\"\r\n                  onChange={props.handleChange}\r\n                  value={props.state.parents}\r\n                  label=\"Родители\"\r\n                  control=\"select\"\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Нет\r\n                  </option>\r\n                  <option value=\"both\">Оба</option>\r\n                  <option value=\"mother\">Мама</option>\r\n                  <option value=\"father\">Папа</option>\r\n                </Form.Field>\r\n                <Form.Group>\r\n                  {(props.state.parents === \"mother\" ||\r\n                    props.state.parents === \"both\") && (\r\n                    <React.Fragment>\r\n                      <Form.Field>\r\n                        <label>Фамилия</label>\r\n                        <input\r\n                          name=\"mother.name_l\"\r\n                          value={props.state.mother.name_l || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Фамилия матери\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Имя</label>\r\n                        <input\r\n                          name=\"mother.name_f\"\r\n                          value={props.state.mother.name_f || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Имя матери\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Отчество</label>\r\n                        <input\r\n                          name=\"mother.patronymic\"\r\n                          value={props.state.mother.patronymic || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Отчество матери\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Номер телефона</label>\r\n                        <input\r\n                          name=\"mother.phone\"\r\n                          value={props.state.mother.phone || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Номер телефона матери\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                    </React.Fragment>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  {(props.state.parents === \"father\" ||\r\n                    props.state.parents === \"both\") && (\r\n                    <React.Fragment>\r\n                      <Form.Field>\r\n                        <label>Фамилия</label>\r\n                        <input\r\n                          name=\"father.name_l\"\r\n                          value={props.state.father.name_l || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Фамилия отца\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Имя</label>\r\n                        <input\r\n                          name=\"father.name_f\"\r\n                          value={props.state.father.name_f || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Имя отца\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Отчество</label>\r\n                        <input\r\n                          name=\"father.patronymic\"\r\n                          value={props.state.father.patronymic || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Отчество отца\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Номер телефона</label>\r\n                        <input\r\n                          name=\"father.phone\"\r\n                          value={props.state.father.phone || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Номер телефона отца\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                    </React.Fragment>\r\n                  )}\r\n                </Form.Group>\r\n                <Message success header=\"Форма отправлена успешно!\" />\r\n                <Message error header=\"Неправильно заполнена форма!\" />\r\n                <Button animated=\"fade\" primary type=\"submit\">\r\n                  <Button.Content visible>Отправить заявление</Button.Content>\r\n                  <Button.Content hidden>\r\n                    <Icon name=\"arrow right\" />\r\n                  </Button.Content>\r\n                </Button>\r\n              </Form>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            {currentDorm ? (\r\n              <FirstDorm setCurrentDorm={setCurrentDorm} />\r\n            ) : (\r\n              <Dorms setCurrentDorm={setCurrentDorm} />\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </FormStyle>\r\n  );\r\n};\r\n\r\nexport default WithForm(FormComponent);\r\n","import styled from \"styled-components\";\r\n\r\nexport const AdminComponent = styled.div`\r\n  background-color: inherit;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  height: 100vh;\r\n  .form {\r\n    padding-top: 50%;\r\n  }\r\n`;\r\n\r\nexport const AdminPanelStyle = styled.div`\r\n  height: 100vh;\r\n  .ui.segment {\r\n    border-radius: 0px;\r\n  }\r\n  i.icon,\r\n  i.icons {\r\n    font-size: 1.4em;\r\n  }\r\n  .form-label,\r\n  .gender label,\r\n  .status label {\r\n    padding: 10px 10px 10px 0px;\r\n  }\r\n  .ui.button {\r\n    margin: 2px 2px 2px 0px;\r\n    padding: 10px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const AdminReportsStyle = styled.div`\r\n  background-color: inherit;\r\n`;\r\n\r\nexport const AdminRequestsStyle = styled.div`\r\n  background-color: inherit;\r\n`;\r\n\r\nexport const AdminDirectionStyle = styled.div`\r\n  background-color: inherit;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Table, Checkbox, Segment } from \"semantic-ui-react\";\r\nimport { withAPI } from \"../API\";\r\nimport { gender } from \"../../utils/util\";\r\n\r\nimport { AdminReportsStyle } from \"./style\";\r\n\r\nclass AdminReports extends Component {\r\n  state = {\r\n    reports: []\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (this.state.reports.length) return;\r\n    this.props.api.getReports().then(res => {\r\n      this.setState({\r\n        reports: res.data\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const loaded = this.state.reports.length ? false : true;\r\n    return (\r\n      <AdminReportsStyle>\r\n        <Grid.Row centered>\r\n          <Grid.Column>\r\n            {!loaded ? (\r\n              <Segment loading={loaded}>\r\n                <Table size=\"large\" celled>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Фамилия</Table.HeaderCell>\r\n                      <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                      <Table.HeaderCell>Отчество</Table.HeaderCell>\r\n                      <Table.HeaderCell>Пол</Table.HeaderCell>\r\n                      <Table.HeaderCell>ИИН</Table.HeaderCell>\r\n                      <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\r\n                      <Table.HeaderCell>Телефон</Table.HeaderCell>\r\n                      <Table.HeaderCell>Сколько детей в семье</Table.HeaderCell>\r\n                      <Table.HeaderCell>\r\n                        Дата начала проживания\r\n                      </Table.HeaderCell>\r\n                      <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\r\n                      <Table.HeaderCell>Статус</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {this.state.reports.map((value, index) => {\r\n                      return (\r\n                        <Table.Row key={index}>\r\n                          <Table.Cell>{value.name_l}</Table.Cell>\r\n                          <Table.Cell>{value.name_f}</Table.Cell>\r\n                          <Table.Cell>{value.patronymic}</Table.Cell>\r\n                          <Table.Cell>{gender[value.gender_id]}</Table.Cell>\r\n                          <Table.Cell>{value.uin}</Table.Cell>\r\n                          <Table.Cell>{value.address}</Table.Cell>\r\n                          <Table.Cell>{value.phone}</Table.Cell>\r\n                          <Table.Cell>{value.children}</Table.Cell>\r\n                          <Table.Cell>{value.date_residence}</Table.Cell>\r\n                          <Table.Cell>{value.number}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <Checkbox slider />\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              </Segment>\r\n            ) : (\r\n              <Segment loading={loaded}>\r\n                <Table>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Фамилия</Table.HeaderCell>\r\n                      <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                      <Table.HeaderCell>Отчество</Table.HeaderCell>\r\n                      <Table.HeaderCell>Пол</Table.HeaderCell>\r\n                      <Table.HeaderCell>ИИН</Table.HeaderCell>\r\n                      <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\r\n                      <Table.HeaderCell>Телефон</Table.HeaderCell>\r\n                      <Table.HeaderCell>Сколько детей в семье</Table.HeaderCell>\r\n                      <Table.HeaderCell>\r\n                        Дата начала проживания\r\n                      </Table.HeaderCell>\r\n                      <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\r\n                      <Table.HeaderCell>Статус</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                </Table>\r\n              </Segment>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </AdminReportsStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAPI(AdminReports);\r\n","import React from \"react\";\r\nimport { Button, Segment, Form } from \"semantic-ui-react\";\r\nimport { findName } from \"../../utils/util\";\r\nimport WithForm from \"../hoc/withForm\";\r\n\r\nimport { AdminDirectionStyle } from \"./style\";\r\n\r\nconst AdminDirection = props => {\r\n  return (\r\n    <AdminDirectionStyle>\r\n      <Segment raised>\r\n        <Form size=\"big\" onSubmit={props.handleSubmitReport}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field required>\r\n              <label className=\"form-label\">Фамилия</label>\r\n              <input\r\n                required\r\n                value={props.openCurrentField.name_l}\r\n                type=\"text\"\r\n                name=\"name_l\"\r\n                onChange={props.handleChange}\r\n                placeholder=\"Введите фамилию\"\r\n              />\r\n            </Form.Field>\r\n            <Form.Field required>\r\n              <label className=\"form-label\">Имя</label>\r\n              <input\r\n                required\r\n                value={props.openCurrentField.name_f}\r\n                type=\"text\"\r\n                name=\"name_f\"\r\n                onChange={props.handleChange}\r\n                placeholder=\"Введите имя\"\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label className=\"form-label\">Отчество</label>\r\n              <input\r\n                value={props.openCurrentField.patronymic}\r\n                type=\"text\"\r\n                name=\"patronymic\"\r\n                onChange={props.handleChange}\r\n                placeholder=\"Введите отчество\"\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field required>\r\n              <label className=\"form-label\">ИИН</label>\r\n              <input\r\n                required\r\n                value={props.openCurrentField.uin}\r\n                type=\"text\"\r\n                name=\"uin\"\r\n                maxLength=\"12\"\r\n                onChange={props.handleChange}\r\n                placeholder=\"Введите ИИН\"\r\n              />\r\n            </Form.Field>\r\n            <Form.Field\r\n              className=\"status\"\r\n              name=\"status_id\"\r\n              onChange={props.handleSelect}\r\n              value={props.state.status_id}\r\n              label=\"Статус\"\r\n              control=\"select\"\r\n              required\r\n            >\r\n              <>\r\n                <option disabled />\r\n                {props.state.dormDb.status &&\r\n                  props.state.dormDb.status.map(status => {\r\n                    const name = findName(\r\n                      props.state.dormDb.names,\r\n                      status.name_id\r\n                    );\r\n                    return (\r\n                      <option key={status.id} value={status.id}>\r\n                        {name.name_ru}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field required>\r\n              <label className=\"form-label\">Номер телефона</label>\r\n              <input\r\n                required\r\n                pattern=\"((\\+7)|[8])7[0-9]{9}$\"\r\n                value={props.openCurrentField.phone}\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                maxLength=\"11\"\r\n                onChange={props.handleChange}\r\n                placeholder=\"87081231212\"\r\n              />\r\n            </Form.Field>\r\n            <Form.Field required>\r\n              <label className=\"form-label\">Количество детей в семье</label>\r\n              <input\r\n                required\r\n                value={props.openCurrentField.children}\r\n                type=\"number\"\r\n                name=\"children\"\r\n                onChange={props.handleChange}\r\n                placeholder=\"Введите количество детей в семье\"\r\n              />\r\n            </Form.Field>\r\n            <Form.Field required>\r\n              <label className=\"form-label\">Номер комнаты</label>\r\n              <input\r\n                required\r\n                value={props.openCurrentField.number}\r\n                type=\"number\"\r\n                name=\"room_id\"\r\n                onChange={props.handleChange}\r\n                placeholder=\"Введите номер комнаты\"\r\n              />\r\n            </Form.Field>\r\n            <Form.Field\r\n              className=\"gender\"\r\n              name=\"gender_id\"\r\n              onChange={props.handleSelect}\r\n              value={props.openCurrentField.gender_id}\r\n              label=\"Пол\"\r\n              control=\"select\"\r\n              required\r\n            >\r\n              <>\r\n                <option disabled />\r\n                {props.state.dormDb.genders &&\r\n                  props.state.dormDb.genders.map(gender => {\r\n                    const name = findName(\r\n                      props.state.dormDb.names,\r\n                      gender.name_id\r\n                    );\r\n                    return (\r\n                      <option key={gender.id} value={gender.id}>\r\n                        {name.name_ru}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </>\r\n            </Form.Field>\r\n            <Form.Field required>\r\n              <label className=\"form-label\">Дата заселения</label>\r\n              <input\r\n                required\r\n                value={props.openCurrentField.date_residence}\r\n                type=\"date\"\r\n                name=\"date_residence\"\r\n                onChange={props.handleChange}\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Field required>\r\n            <label className=\"form-label\">Адрес проживания</label>\r\n            <input\r\n              required\r\n              value={props.openCurrentField.address}\r\n              type=\"text\"\r\n              name=\"address\"\r\n              onChange={props.handleChange}\r\n              placeholder=\"Улица, дом, квартира\"\r\n            />\r\n          </Form.Field>\r\n          <Button primary type=\"submit\">\r\n            Создать направление\r\n          </Button>\r\n          {/* <Button secondary floated=\"right\" onClick={props.handleLogout}>\r\n            Выйти\r\n          </Button> */}\r\n        </Form>\r\n      </Segment>\r\n    </AdminDirectionStyle>\r\n  );\r\n};\r\n\r\nexport default WithForm(AdminDirection);\r\n","/* eslint-disable jsx-a11y/anchor-has-content */\r\n/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React, { Component } from \"react\";\r\nimport { Grid, Table, Segment, Modal, Button, Header } from \"semantic-ui-react\";\r\nimport { withAPI } from \"../API\";\r\nimport { gender } from \"../../utils/util\";\r\nimport AdminDirection from \"./AdminDirection\";\r\n\r\nimport { AdminRequestsStyle } from \"./style\";\r\n\r\nconst DownloadDoc = props => {\r\n  return (\r\n    <Button onClick={props.getRequestDocument}>Скачать направление</Button>\r\n  );\r\n};\r\n\r\nclass AdminRequests extends Component {\r\n  state = {\r\n    requests: [],\r\n    openCurrentField: null,\r\n    currentDataToDocument: null\r\n  };\r\n\r\n  getRequestDocument = () => {\r\n    return this.props.api\r\n      .getRequestDocument(\r\n        this.state.currentDataToDocument.name_f,\r\n        this.state.currentDataToDocument.name_l,\r\n        this.state.currentDataToDocument.patronymic,\r\n        this.state.currentDataToDocument.gender_id,\r\n        this.state.currentDataToDocument.address,\r\n        this.state.currentDataToDocument.phone,\r\n        this.state.currentDataToDocument.number,\r\n        this.state.currentDataToDocument.children,\r\n        this.state.currentDataToDocument.date_residence,\r\n        this.state.currentDataToDocument.group\r\n      )\r\n      .then(res => {\r\n        window.open(res.config.url);\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.props.api\r\n      .getRequests()\r\n      .then(\r\n        res => {\r\n          this.setState({\r\n            requests: res.data\r\n          });\r\n        },\r\n        error => {\r\n          if (error.response.status === 401) {\r\n            return this.props.handleLogout();\r\n          }\r\n        }\r\n      )\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const loaded = this.state.requests.length ? false : true;\r\n    return (\r\n      <AdminRequestsStyle>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={16}>\r\n            {!loaded ? (\r\n              <Segment loading={loaded}>\r\n                <Table fixed size=\"small\" celled>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Фамилия</Table.HeaderCell>\r\n                      <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                      <Table.HeaderCell>Отчество</Table.HeaderCell>\r\n                      <Table.HeaderCell>Группа</Table.HeaderCell>\r\n                      <Table.HeaderCell>Пол</Table.HeaderCell>\r\n                      <Table.HeaderCell>ИИН</Table.HeaderCell>\r\n                      <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\r\n                      <Table.HeaderCell>Телефон</Table.HeaderCell>\r\n                      <Table.HeaderCell>Сколько детей в семье</Table.HeaderCell>\r\n                      <Table.HeaderCell>\r\n                        Дата начала проживания\r\n                      </Table.HeaderCell>\r\n                      <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\r\n                      <Table.HeaderCell>Направление</Table.HeaderCell>\r\n                      <Table.HeaderCell>Скачать</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {this.state.requests.map((value, index) => {\r\n                      return (\r\n                        <Table.Row key={index}>\r\n                          <Table.Cell>{value.name_l}</Table.Cell>\r\n                          <Table.Cell>{value.name_f}</Table.Cell>\r\n                          <Table.Cell>{value.patronymic}</Table.Cell>\r\n                          <Table.Cell>{value.group}</Table.Cell>\r\n                          <Table.Cell>{gender[value.gender_id]}</Table.Cell>\r\n                          <Table.Cell>{value.uin}</Table.Cell>\r\n                          <Table.Cell>{value.address}</Table.Cell>\r\n                          <Table.Cell>{value.phone}</Table.Cell>\r\n                          <Table.Cell>{value.children}</Table.Cell>\r\n                          <Table.Cell>{value.date_residence}</Table.Cell>\r\n                          <Table.Cell>{value.number}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <Modal\r\n                              dimmer=\"blurring\"\r\n                              size=\"fullscreen\"\r\n                              trigger={\r\n                                <Button\r\n                                  onClick={() =>\r\n                                    this.setState({\r\n                                      openCurrentField: value\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  Создать направление\r\n                                </Button>\r\n                              }\r\n                              closeIcon\r\n                            >\r\n                              <Header\r\n                                icon=\"archive\"\r\n                                content=\"Создание направления\"\r\n                              />\r\n                              <Modal.Content>\r\n                                <AdminDirection\r\n                                  openCurrentField={this.state.openCurrentField}\r\n                                />\r\n                              </Modal.Content>\r\n                            </Modal>\r\n                          </Table.Cell>\r\n                          <Table.Cell>\r\n                            <Modal\r\n                              dimmer=\"blurring\"\r\n                              size=\"mini\"\r\n                              trigger={\r\n                                <Button\r\n                                  onClick={() => {\r\n                                    this.setState({\r\n                                      currentDataToDocument: value\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  Открыть направление\r\n                                </Button>\r\n                              }\r\n                            >\r\n                              <Header\r\n                                icon=\"file outline\"\r\n                                content=\"Скачать направление\"\r\n                              />\r\n                              <Modal.Content>\r\n                                <DownloadDoc\r\n                                  getRequestDocument={this.getRequestDocument}\r\n                                />\r\n                              </Modal.Content>\r\n                            </Modal>\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              </Segment>\r\n            ) : (\r\n              <Segment loading={loaded}>\r\n                <Table>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Фамилия</Table.HeaderCell>\r\n                      <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                      <Table.HeaderCell>Отчество</Table.HeaderCell>\r\n                      <Table.HeaderCell>Группа</Table.HeaderCell>\r\n                      <Table.HeaderCell>Пол</Table.HeaderCell>\r\n                      <Table.HeaderCell>ИИН</Table.HeaderCell>\r\n                      <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\r\n                      <Table.HeaderCell>Телефон</Table.HeaderCell>\r\n                      <Table.HeaderCell>Сколько детей в семье</Table.HeaderCell>\r\n                      <Table.HeaderCell>\r\n                        Дата начала проживания\r\n                      </Table.HeaderCell>\r\n                      <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\r\n                      <Table.HeaderCell>Направление</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                </Table>\r\n              </Segment>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </AdminRequestsStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAPI(AdminRequests);\r\n","import React, { useState } from \"react\";\r\nimport AdminReports from \"./AdminReports\";\r\nimport AdminRequests from \"./AdminRequests\";\r\nimport { Grid, Menu, Segment } from \"semantic-ui-react\";\r\n\r\nimport { AdminPanelStyle } from \"./style\";\r\n\r\nconst AdminPanel = props => {\r\n  const [routes, setRoutes] = useState(1);\r\n  return (\r\n    <AdminPanelStyle>\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column>\r\n            <Segment>\r\n              <Menu fluid size=\"large\" secondary>\r\n                <Menu.Item className=\"header-name\" icon=\"user\" />\r\n                <Menu.Item onClick={() => setRoutes(1)} name=\"Заявления\" />\r\n                <Menu.Item onClick={() => setRoutes(2)} name=\"Направления\" />\r\n                <Menu.Item\r\n                  icon=\"sign out\"\r\n                  position=\"right\"\r\n                  onClick={props.handleLogout}\r\n                  name=\"Выйти\"\r\n                />\r\n              </Menu>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row centered>\r\n          <Grid.Column>\r\n            <React.Fragment>\r\n              {routes === 1 && (\r\n                <AdminRequests handleLogout={props.handleLogout} />\r\n              )}\r\n              {routes === 2 && <AdminReports />}\r\n            </React.Fragment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </AdminPanelStyle>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { Component } from \"react\";\r\nimport { withAPI } from \"../API\";\r\n\r\nconst WithAdmin = WrappedComponent => {\r\n  class WithAdmin extends Component {\r\n    state = {\r\n      login: \"\",\r\n      password: \"\",\r\n      user:\r\n        localStorage.getItem(\"sessionUser\") &&\r\n        localStorage.getItem(\"sessionUser\")\r\n    };\r\n\r\n    //*get password and login for administrator\r\n    handleLogin = () => {\r\n      this.props.api\r\n        .getAuth(this.state.login, this.state.password)\r\n        .then(res => {\r\n          this.setState({\r\n            user: res.data.token\r\n          });\r\n          localStorage.setItem(\"sessionUser\", res.data.token);\r\n        })\r\n        .catch(error => {\r\n          throw error;\r\n        });\r\n    };\r\n\r\n    //* function of logout administrator\r\n    handleLogout = () => {\r\n      localStorage.removeItem(\"sessionUser\");\r\n      this.setState({\r\n        user: null\r\n      });\r\n    };\r\n\r\n    handleChange = e => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <WrappedComponent\r\n          state={this.state}\r\n          handleChange={this.handleChange}\r\n          handleLogout={this.handleLogout}\r\n          handleLogin={this.handleLogin}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  return withAPI(WithAdmin);\r\n};\r\n\r\nexport default WithAdmin;\r\n","import React from \"react\";\r\nimport AdminPanel from \"./AdminPanel\";\r\nimport withAdmin from \"../hoc/withAdmin\";\r\nimport { AdminComponent } from \"./style\";\r\nimport { Grid, Segment, Input, Button, Form } from \"semantic-ui-react\";\r\n\r\nconst Admin = props => {\r\n  const { user } = props.state;\r\n  if (user) {\r\n    return <AdminPanel handleLogout={props.handleLogout} />;\r\n  }\r\n\r\n  return (\r\n    <AdminComponent>\r\n      <Grid container>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={8}>\r\n            <Form className=\"form\" onSubmit={props.handleLogin}>\r\n              <Segment inverted>\r\n                <Form.Field>\r\n                  <label htmlFor=\"login\">Login</label>\r\n                  <Input\r\n                    value={props.state.login}\r\n                    onChange={props.handleChange}\r\n                    name=\"login\"\r\n                    type=\"text\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    value={props.state.password}\r\n                    onChange={props.handleChange}\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                  />\r\n                </Form.Field>\r\n                <Button type=\"submit\">Войти</Button>\r\n              </Segment>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </AdminComponent>\r\n  );\r\n};\r\n\r\nexport default withAdmin(Admin);\r\n","import styled from \"styled-components\";\r\n\r\nexport const AppWrapper = styled.div`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Montserrat\");\r\n  @import url(\"https://fonts.googleapis.com/css?family=Roboto&subset=cyrillic,cyrillic-ext,latin-ext\");\r\n  background-image: linear-gradient(\r\n    to right top,\r\n    #4b4453,\r\n    #746f7b,\r\n    #9f9da5,\r\n    #cecdd1,\r\n    #ffffff\r\n  );\r\n`;\r\n","import React from \"react\";\r\nimport FormComponent from \"../Form\";\r\nimport Admin from \"../Admin\";\r\nimport { AppWrapper } from \"./style\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n// import Preloader from \"./Preloader\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <AppWrapper>\r\n        <Route exact path=\"/\" component={FormComponent} />\r\n        <Route exact path=\"/admin\" component={Admin} />\r\n      </AppWrapper>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport APIContext, { API } from \"./components/API\";\r\nimport App from \"./components/App\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <HashRouter basename={process.env.PUBLIC_URL}>\r\n    <APIContext.Provider value={new API()}>\r\n      <App />\r\n    </APIContext.Provider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}