{"version":3,"sources":["static/firstDorm.JPG","static/secondDorm.JPG","static/firstDorm/1.png","components/API/context.js","components/API/api.js","components/API/index.js","utils/util.js","components/hoc/withForm.js","components/Dorms/style.js","components/Dorms/index.js","components/Dorms/FirstDorm/style.js","components/Dorms/Floors.js","components/Dorms/FirstDorm/index.js","components/Dorms/SecondDorm/index.js","components/Form/style.js","components/Form/index.js","components/Admin/style.js","components/Admin/AdminReports.js","components/Admin/AdminDirection.js","components/Admin/AdminRequests.js","components/Admin/AdminPanel.js","components/hoc/withAdmin.js","components/Admin/index.js","components/App/style.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","API","React","createContext","withAPI","WrappedComponent","props","react_default","a","createElement","context_API","Consumer","api","Object","assign","instance","axios","create","baseURL","headers","content-type","interceptors","request","use","config","token","localStorage","getItem","newConfig","objectSpread","Token","_this","this","classCallCheck","getAuth","login","password","get","concat","postRequest","reqValues","reqOptions","mother","encodeURI","name_f","name_l","patronymic","phone","father","post","qs","stringify","postReport","_ref","repValues","objectWithoutProperties","console","log","repOptions","getDormDb","getReports","getRequests","getRooms","floor_id","getRequestDocument","gender_id","address","room_id","children","date_residence","group","id","reqDocOptions","components_API","findName","names","find","name","withoutFields","values","newValues","_len","arguments","length","fields","Array","_key","forEach","field","gender","1","2","uin","status_id","email","WithForm","_Component","_getPrototypeOf2","args","possibleConstructorReturn","getPrototypeOf","call","apply","_isMounted","state","responseStatus","error","parents","loading","dormDb","resetForm","setState","handleSubmit","e","preventDefault","then","res","status","catch","handleChange","defineProperty","target","value","handleParentsChange","callback","handleSelect","inherits","createClass","key","_this2","data","handleSubmitReport","Component","RoomWrapper","styled","div","_templateObject","DormStyle","_templateObject2","Dorms","Grid","Row","centered","Column","width","className","Card","Group","itemsPerRow","raised","color","image","FirstDorm","onClick","setCurrentDorm","meta","SecondDorm","FirstDormStyle","style_templateObject","coordinates","reqCoordinates","x","Floor","selectedRoom","handleSelectedRoom","room","componentDidUpdate","_","prevState","setSelectedRoom","number","rooms","src","FirstFloor","alt","max","amount","Button","secondary","map","index","y","height","_useField","defaultValue","_useState5","useState","_useState6","slicedToArray","useField","_useField2","currentDorm","_getRooms2","selectedFloor","_useState","_useState2","setRooms","_useState3","_useState4","isLoading","setLoading","useEffect","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","sent","stop","_getRooms3","floors","filter","dormId","dorm_id","onChange","disabled","floor","Fragment","Segment","Floors","FormStyle","Form_style_templateObject","date","Date","year","getFullYear","month","getMonth","day","getDate","currDate","_e$target$name$split","split","_e$target$name$split2","parentType","computer","mobile","Form","success","size","onSubmit","unstackable","widths","Field","required","pattern","type","placeholder","maxLength","label","control","min","Message","header","animated","primary","Content","visible","hidden","Icon","Dorms_FirstDorm","Dorms_SecondDorm","ThirdDorm_default","components_Dorms","currentdorm","renderDorm","AdminComponent","Admin_style_templateObject","AdminPanelStyle","style_templateObject2","AdminReportsStyle","_templateObject3","AdminRequestsStyle","_templateObject4","AdminDirectionStyle","_templateObject5","AdminReports","reports","componentDidMount","loaded","Table","Header","HeaderCell","celled","Body","Cell","Checkbox","slider","handleCurrentFieldSubmitReport","openCurrentField","handleCurrentFieldChange","handleCurrentFieldSelect","name_id","name_ru","genders","PureComponent","DownloadDoc","AdminRequests","requests","currentDataToDocument","openModal","window","open","url","handleLogout","style","textAlign","compact","Modal","onClose","dimmer","trigger","closeIcon","icon","content","Admin_AdminDirection","AdminRequests_DownloadDoc","AdminPanel","routes","setRoutes","Menu","fluid","Item","position","Admin_AdminRequests","Admin_AdminReports","WithAdmin","user","handleLogin","setItem","removeItem","withAdmin","Admin_AdminPanel","container","htmlFor","Input","AppWrapper","App_style_templateObject","App","Switch","Route","exact","path","component","FormComponent","Admin","ReactDOM","render","HashRouter","basename","process","Provider","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5c8df8b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/firstDorm.3e74774a.JPG\";","module.exports = __webpack_public_path__ + \"static/media/secondDorm.91963ea9.JPG\";","module.exports = __webpack_public_path__ + \"static/media/1.cbcdd99d.png\";","import React from \"react\";\r\n\r\nconst API = React.createContext(null);\r\n\r\nexport const withAPI = WrappedComponent => props => {\r\n  return (\r\n    <API.Consumer>\r\n      {api => <WrappedComponent {...props} api={api} />}\r\n    </API.Consumer>\r\n  );\r\n};\r\n\r\nexport default API;\r\n","/**\r\n * @file This file includes all api requests like GET,POST and etc.\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport qs from \"querystring\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://dorm-keu.herokuapp.com/api\",\r\n  headers: {\r\n    \"content-type\": \"application/x-www-form-urlencoded\"\r\n  }\r\n});\r\n\r\ninstance.interceptors.request.use(config => {\r\n  const token = localStorage.getItem(\"sessionUser\");\r\n\r\n  if (!token) return config;\r\n  const newConfig = { ...config };\r\n  newConfig.headers.Token = token;\r\n  return newConfig;\r\n});\r\n\r\n/**\r\n * @this {API}\r\n */\r\nclass API {\r\n  constructor() {\r\n    this.api = instance;\r\n  }\r\n\r\n  //* get login and password of administrator\r\n  /**\r\n   * @param {string} login The login of admin\r\n   * @param {string} password The password of admin\r\n   */\r\n  getAuth = (login, password) => {\r\n    return this.api.get(`auth?login=${login}&password=${password}`);\r\n  };\r\n\r\n  //* posting request to the server\r\n  /**\r\n   * @param {} reqValues The Request data that will be sended\r\n   */\r\n  postRequest = reqValues => {\r\n    const reqOptions = {\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded\",\r\n        mother:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(reqValues.mother.name_f) +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(reqValues.mother.name_l) +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(reqValues.mother.patronymic) +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(reqValues.mother.phone) +\r\n          '\"}',\r\n        father:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(reqValues.father.name_f) +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(reqValues.father.name_l) +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(reqValues.father.patronymic) +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(reqValues.father.phone) +\r\n          '\"}'\r\n      }\r\n    };\r\n    return this.api.post(\"/request\", qs.stringify(reqValues), reqOptions);\r\n  };\r\n\r\n  //* posting reports to the server\r\n  /**\r\n   * @param {} repValues The Report data that will be sended\r\n   */\r\n  postReport = ({ mother, father, ...repValues }) => {\r\n    console.log(mother, father);\r\n    const repOptions = {\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded\",\r\n        mother:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(mother.name_f || \"\") +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(mother.name_l || \"\") +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(mother.patronymic || \"\") +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(mother.phone || \"\") +\r\n          '\"}',\r\n        father:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(father.name_f || \"\") +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(father.name_l || \"\") +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(father.patronymic || \"\") +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(father.phone || \"\") +\r\n          '\"}'\r\n      }\r\n    };\r\n\r\n    return this.api.post(\"/report\", qs.stringify(repValues), repOptions);\r\n  };\r\n\r\n  //* get dorm database\r\n  getDormDb = () => {\r\n    return this.api.get(\"/db\");\r\n  };\r\n\r\n  //* get all reports\r\n  getReports = () => {\r\n    return this.api.get(\"/report\");\r\n  };\r\n\r\n  //*get all request\r\n  getRequests = () => {\r\n    return this.api.get(\"/request\");\r\n  };\r\n\r\n  //* get rooms by floor id\r\n  getRooms = floor_id => {\r\n    return this.api.get(`/room?id=${floor_id}`);\r\n  };\r\n\r\n  //* get autocompleted word document of request\r\n  /**\r\n   * @param {string} name_f Firstname of student\r\n   * @param {string} name_l Lastname of student\r\n   * @param {string} patronymic Patronymic of student\r\n   * @param {string} gender_id Gender\r\n   * @param {string} address Address of living of student\r\n   * @param {string} phone Phone of student\r\n   * @param {number} room_id Which room he selected\r\n   * @param {number} children How many childrens he has in family\r\n   * @param {date} date_residence On which date he reserved a room\r\n   * @param {string} group In which group he joined\r\n   */\r\n  getRequestDocument = (\r\n    name_f,\r\n    name_l,\r\n    patronymic,\r\n    gender_id,\r\n    address,\r\n    phone,\r\n    room_id,\r\n    children,\r\n    date_residence,\r\n    group,\r\n    mother,\r\n    father,\r\n    id\r\n  ) => {\r\n    const reqDocOptions = {\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded\",\r\n        mother:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(mother.name_f || \"\") +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(mother.name_l || \"\") +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(mother.patronymic || \"\") +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(mother.phone || \"\") +\r\n          '\"}',\r\n        // `'{ \"name_f\": \"${encodeURI(reqValues.mother.name_f)}\", \"name_l\": \"${encodeURI(reqValues.mother.name_l)}\", \"patronymic\": \"${encodeURI(reqValues.mother.patronymic)}\", \"phone\": \"${encodeURI(reqValues.mother.phone)}\"'`\r\n        father:\r\n          '{ \"name_f\":\"' +\r\n          encodeURI(father.name_f || \"\") +\r\n          '\",\"name_l\":\"' +\r\n          encodeURI(father.name_l || \"\") +\r\n          '\",  \"patronymic\":\"' +\r\n          encodeURI(father.patronymic || \"\") +\r\n          '\", \"phone\":\"' +\r\n          encodeURI(father.phone || \"\") +\r\n          '\"}'\r\n      }\r\n    };\r\n    return this.api.get(\r\n      `/doc/request?name_f=${name_f}&name_l=${name_l}&patronymic=${patronymic}&gender_id=${gender_id}&address=${address}&phone=${phone}&room_id=${room_id}&children=${children}&date_residence=${date_residence}&group=${group}&id=${id}&mother={\"name_l\":${mother.name_l},\"name_f\":${mother.name_f}, \"patronymic\":${mother.patronymic}, \"phone\":${mother.phone}}&father={\"name_l\":${father.name_l},\"name_f\":${father.name_f},\"patronymic\":${father.patronymic}, \"phone\":${father.phone}}`,\r\n      reqDocOptions\r\n    );\r\n  };\r\n}\r\n\r\nexport default API;\r\n","import APIContext, { withAPI } from \"./context\";\r\n//*class API\r\nimport API from \"./api\";\r\n\r\n//* for main index.js\r\nexport default APIContext;\r\n//* for other components\r\nexport { withAPI, API };\r\n","export function findName(names, id) {\r\n  return names.find(name => id === name.id);\r\n}\r\n\r\n/**\r\n * @param {} values state that will be sended\r\n * @param  {...any} fields state that will be deleted\r\n */\r\nexport function withoutFields(values, ...fields) {\r\n  const newValues = { ...values };\r\n  fields.forEach(field => {\r\n    delete newValues[field];\r\n  });\r\n\r\n  return newValues;\r\n}\r\n\r\nexport const gender = {\r\n  1: \"Мужской\",\r\n  2: \"Женский\"\r\n};\r\n\r\nexport function sortByKeys(obj) {\r\n  const keys = Object.keys(obj).sort();\r\n\r\n  return keys.reduce((acc, key) => {\r\n    acc[key] = obj[key];\r\n    return acc;\r\n  }, {});\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withAPI } from \"../API\";\r\nimport { withoutFields } from \"../../utils/util\";\r\nconst fields = {\r\n  name_f: \"\",\r\n  name_l: \"\",\r\n  patronymic: \"\",\r\n  uin: \"\",\r\n  group: \"\",\r\n  address: \"\",\r\n  phone: \"\",\r\n  children: \"\",\r\n  room_id: \"\",\r\n  gender_id: \"\",\r\n  status_id: \"\",\r\n  email: \"\",\r\n  mother: {\r\n    name_l: \"\",\r\n    name_f: \"\",\r\n    patronymic: \"\",\r\n    phone: \"\"\r\n  },\r\n  father: {\r\n    name_l: \"\",\r\n    name_f: \"\",\r\n    patronymic: \"\",\r\n    phone: \"\"\r\n  },\r\n  date_residence: \"\"\r\n};\r\nconst WithForm = WrappedComponent => {\r\n  class WithForm extends Component {\r\n    _isMounted = false;\r\n    state = {\r\n      ...fields,\r\n      responseStatus: \"\",\r\n      error: null,\r\n      parents: \"\",\r\n      loading: false,\r\n      dormDb: {}\r\n    };\r\n\r\n    /**\r\n     * @function resetForm This function for clearing inputs fields\r\n     */\r\n    resetForm = () => {\r\n      this.setState({ ...fields });\r\n    };\r\n\r\n    /**\r\n     * @method this.props.api.getDormDb Get from the api the dorm database info\r\n     */\r\n    componentDidMount() {\r\n      if (this.state.dormDb.length) return;\r\n      this._isMounted = true;\r\n      this.props.api\r\n        .getDormDb()\r\n        .then(res => {\r\n          this.setState({\r\n            dormDb: res.data\r\n          });\r\n        })\r\n        .catch(error => {\r\n          throw error;\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this._isMounted = false;\r\n    }\r\n\r\n    /**\r\n     * Handling for posting requests\r\n     */\r\n    handleSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      const state = { ...this.state };\r\n      const values = withoutFields(\r\n        state,\r\n        \"status_id\",\r\n        \"dormDb\",\r\n        \"parents\",\r\n        \"responseStatus\",\r\n        \"loading\",\r\n        \"error\"\r\n      );\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      this.props.api\r\n        .postRequest(values)\r\n        .then(res => {\r\n          this.setState({\r\n            responseStatus: res.status,\r\n            loading: false,\r\n            error: null\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            error: error,\r\n            loading: false\r\n          });\r\n        });\r\n      this.resetForm();\r\n    };\r\n\r\n    /**\r\n     * Handling for inputs\r\n     */\r\n    handleChange = e => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    };\r\n\r\n    /**\r\n     * Handling for mother and father inputs\r\n     */\r\n    handleParentsChange = callback => {\r\n      this.setState(callback);\r\n    };\r\n\r\n    /**\r\n     * Handling for select and options\r\n     */\r\n    handleSelect = e => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <WrappedComponent\r\n          state={this.state}\r\n          handleSubmit={this.handleSubmit}\r\n          handleChange={this.handleChange}\r\n          handleSelect={this.handleSelect}\r\n          handleParentsChange={this.handleParentsChange}\r\n          handleSubmitReport={this.handleSubmitReport}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return withAPI(WithForm);\r\n};\r\n\r\nexport default WithForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const RoomWrapper = styled.div`\r\n  height: 100%;\r\n  .ui.cards a.card:hover,\r\n  .ui.link.card:hover,\r\n  .ui.link.cards .card:hover,\r\n  a.ui.card:hover {\r\n    transform: translateY(-15px);\r\n  }\r\n  .title {\r\n    background-color: transparent;\r\n    font-size: 42px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    padding: 30px;\r\n  }\r\n\r\n  .desc {\r\n    text-align: center;\r\n    font-size: 24px;\r\n    font-family: \"Montserrat\", sans-serif;\r\n    color: #ffffff;\r\n  }\r\n\r\n  .ui.card > .image,\r\n  .ui.cards > .card > .image {\r\n    cursor: pointer;\r\n  }\r\n  .ui.card .meta,\r\n  .ui.cards > .card .meta {\r\n    color: black;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const DormStyle = styled.div`\r\n  background-color: #ffffff;\r\n  border-radius: 0.28571429rem;\r\n  padding: 2rem;\r\n  ul {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  outline: none;\r\n  background-image: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  .svg {\r\n    width: 1080px;\r\n    height: 666px;\r\n    position: absolute;\r\n  }\r\n  .rectangle {\r\n    position: relative;\r\n    transition: 0.5s all;\r\n    cursor: pointer;\r\n    fill: transparent;\r\n  }\r\n  .rectangle:hover {\r\n    fill: gray;\r\n  }\r\n\r\n  .title {\r\n    font-size: 24px;\r\n  }\r\n\r\n  .hide {\r\n    display: none;\r\n  }\r\n  .text {\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n  }\r\n  .show {\r\n    width: 300px;\r\n    height: 270px;\r\n    background-color: #b1b1b1;\r\n    border-radius: 4px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    font-size: 24px;\r\n    color: #ffffff;\r\n    top: 70px;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 105px;\r\n  }\r\n  .show ul li {\r\n    list-style-type: none;\r\n    line-height: 40px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .select-wrapper {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 300px;\r\n    height: 300px;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { withAPI } from \"../API\";\r\nimport { RoomWrapper } from \"./style\";\r\nimport { Grid, Card } from \"semantic-ui-react\";\r\nimport FirstDorm from \"../../static/firstDorm.JPG\";\r\nimport SecondDorm from \"../../static/secondDorm.JPG\";\r\n\r\nclass Dorms extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <RoomWrapper>\r\n        <Grid>\r\n          <Grid.Row centered>\r\n            <Grid.Column width={8}>\r\n              <h1 className=\"title\">Общежития</h1>\r\n              <p className=\"desc\">Выберите корпус</p>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row centered>\r\n            <Grid.Column width={14}>\r\n              <Card.Group itemsPerRow={4} centered>\r\n                {/* {this.props.dormDb.dorms &&\r\n                  this.props.dormDb.dorms.map((dorms, key) => {\r\n                    return (\r\n                      <React.Fragment key={key}>\r\n                        <Card\r\n                          raised\r\n                          color=\"yellow\"\r\n                          image={FirstDorm}\r\n                          onClick={() => this.props.setCurrentDorm(dorms.id)}\r\n                          meta=\"г. Караганда, ул. Академическая 5\"\r\n                        />\r\n                      </React.Fragment>\r\n                    );\r\n                  })} */}\r\n                <Card\r\n                  raised\r\n                  color=\"yellow\"\r\n                  image={FirstDorm}\r\n                  onClick={() => this.props.setCurrentDorm(1)}\r\n                  meta=\"г. Караганда, ул. Академическая 5\"\r\n                />\r\n                <Card\r\n                  raised\r\n                  color=\"yellow\"\r\n                  image={SecondDorm}\r\n                  onClick={() => this.props.setCurrentDorm(2)}\r\n                  meta=\"г. Караганда, ул. Академическая 5/1\"\r\n                />\r\n                <Card\r\n                  raised\r\n                  color=\"yellow\"\r\n                  image=\"https://react.semantic-ui.com/images/wireframe/image.png\"\r\n                  onClick={() => this.props.setCurrentDorm(3)}\r\n                  meta=\"г. Караганда, ул. Комиссарова 32\"\r\n                />\r\n              </Card.Group>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </RoomWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAPI(Dorms);\r\n","import styled from \"styled-components\";\n\nexport const FirstDormStyle = styled.div`\n  .select-wrapper {\n    display: flex;\n    justify-content: center;\n    margin-bottom: 20px;\n    align-items: center;\n  }\n`;\n","import React, { Component } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport FirstFloor from \"../../static/firstDorm/1.png\";\nimport { DormStyle } from \"../Dorms/style\";\n\nconst coordinates = [120, 221, 320, 416, 505, 596, 692, 779, 859, 943];\nconst reqCoordinates = [\n  { x: 86.989, width: 96.972 },\n  { x: 188.99, width: 96.972 },\n  { x: 290.99, width: 92.218 },\n  { x: 388.99, width: 87.465 },\n  { x: 480.99, width: 83.187 },\n  { x: 570.99, width: 85.563 },\n  { x: 660.99, width: 87.244 },\n  { x: 754.99, width: 77.262 },\n  { x: 837.46, width: 73.228 },\n  { x: 916.78, width: 77.598 }\n];\n\nclass Floor extends Component {\n  state = {\n    selectedRoom: {}\n  };\n\n  handleSelectedRoom = room => {\n    this.setState({\n      selectedRoom: room\n    });\n  };\n\n  componentDidUpdate = (_, prevState) => {\n    if (prevState.selectedRoom !== this.state.selectedRoom) {\n      this.props.setSelectedRoom(this.state.selectedRoom.number);\n    }\n  };\n\n  render() {\n    const { rooms } = this.props;\n    const { selectedRoom } = this.state;\n    return (\n      <DormStyle>\n        <img src={FirstFloor} alt=\"Dorm\" />\n        <div className=\"show\">\n          <ul>\n            <li>Инфо: Первое общежитие </li>\n            <li>Комната №: {selectedRoom.number}</li>\n            <li>Максимальное кол-во жителей: {selectedRoom.max}</li>\n            <li>Сейчас проживает: {selectedRoom.amount} чел.</li>\n            <li>Этаж: {selectedRoom.floor_id}</li>\n            <li>\n              <Button secondary onClick={() => this.props.setCurrentDorm(null)}>\n                Назад\n              </Button>\n            </li>\n          </ul>\n        </div>\n        <svg className=\"svg\">\n          {rooms.map((room, index) => {\n            console.log(room);\n            return (\n              <rect\n                key={room.id}\n                onClick={() => this.handleSelectedRoom(room)}\n                className=\"rectangle\"\n                x={`${reqCoordinates[index].x}`}\n                y=\"444.01\"\n                width={`${reqCoordinates[index].width}`}\n                height=\"191.57\"\n              />\n            );\n          })}\n          {rooms.map((room, index) => (\n            <text\n              key={room.id}\n              onClick={() => this.handleSelectedRoom(room)}\n              className=\"text\"\n              height=\"191.57\"\n              x={`${coordinates[index]}`}\n              y=\"556\"\n            >\n              {room.number}\n            </text>\n          ))}\n        </svg>\n      </DormStyle>\n    );\n  }\n}\n\nexport default Floor;\n","import React, { useEffect, useState } from \"react\";\nimport { Grid, Segment } from \"semantic-ui-react\";\nimport { FirstDormStyle } from \"./style\";\nimport { withAPI } from \"../../API\";\nimport Floors from \"../Floors\";\n\n/**\n *\n * @param {string} selectedFloor Comes from select\n * @param {*} getRooms This is just API\n *\n */\nconst getRooms = (selectedFloor, getRooms) => {\n  const [rooms, setRooms] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  /**\n   * useEffect тригеррится только тогда когда меняется 2-ой аргумент [selectedFloor]\n   */\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const response = await getRooms(selectedFloor);\n      setRooms(response.data);\n      setLoading(false);\n    })();\n  }, [selectedFloor]); // Триггеры на которые будут дергаться API\n\n  return [rooms, isLoading];\n};\n\nconst useField = defaultValue => {\n  const [value, handleChange] = useState(defaultValue);\n  return [value, handleChange];\n};\n\nconst FirstDorm = props => {\n  const [currentDorm, setCurrentDorm] = useField(\"1\");\n\n  const [rooms, isLoading] = getRooms(currentDorm, props.api.getRooms);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setCurrentDorm(value);\n  };\n\n  const floors = props.dormDb.floors.filter(dormId => {\n    return dormId.dorm_id === props.currentDorm;\n  });\n\n  return (\n    <FirstDormStyle>\n      <div className=\"select-wrapper\">\n        <select\n          value={currentDorm}\n          onChange={handleChange}\n          name=\"selectedFloor\"\n        >\n          <option disabled value=\"0\">\n            Выберите этаж\n          </option>\n          {floors.map((floor, key) => {\n            return (\n              <React.Fragment key={key}>\n                <option value={floor.number}>{floor.number} этаж</option>\n              </React.Fragment>\n            );\n          })}\n        </select>\n      </div>\n      <div>\n        {currentDorm === \"1\" && (\n          <Grid>\n            <Grid.Row centered>\n              <Grid.Column width={16}>\n                <Segment loading={isLoading}>\n                  <Floors\n                    rooms={rooms}\n                    selectedFloor={currentDorm}\n                    setCurrentDorm={props.setCurrentDorm}\n                    setSelectedRoom={selectedRoom =>\n                      props.setSelectedRoom(state => ({\n                        ...state,\n                        room_id: selectedRoom\n                      }))\n                    }\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        )}\n        {currentDorm === \"2\" && (\n          <Grid>\n            <Grid.Row centered>\n              <Grid.Column width={16}>\n                <Segment loading={isLoading}>\n                  <Floors\n                    rooms={rooms}\n                    selectedFloor={currentDorm}\n                    setCurrentDorm={props.setCurrentDorm}\n                    setSelectedRoom={selectedRoom =>\n                      props.setSelectedRoom(state => ({\n                        ...state,\n                        room_id: selectedRoom\n                      }))\n                    }\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        )}\n        {currentDorm === \"3\" && (\n          <Grid>\n            <Grid.Row centered>\n              <Grid.Column width={16}>\n                <Segment loading={isLoading}>\n                  <Floors\n                    rooms={rooms}\n                    selectedFloor={currentDorm}\n                    setCurrentDorm={props.setCurrentDorm}\n                    setSelectedRoom={selectedRoom =>\n                      props.setSelectedRoom(state => ({\n                        ...state,\n                        room_id: selectedRoom\n                      }))\n                    }\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        )}\n      </div>\n    </FirstDormStyle>\n  );\n};\n\nexport default withAPI(FirstDorm);\n","import React, { Component } from \"react\";\n\nclass SecondDorm extends Component {\n  render() {\n    return <div>SecondDorm</div>;\n  }\n}\n\nexport default SecondDorm;\n","import styled from \"styled-components\";\r\n\r\nexport const FormStyle = styled.div`\r\n  .title {\r\n    color: #fff;\r\n    font-family: \"Montserrat\", sans-serif;\r\n    text-shadow: #000 2px 2px 4px;\r\n    font-size: 42px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    padding: 30px;\r\n  }\r\n  .form-label,\r\n  .gender label {\r\n    padding: 10px 10px 10px 0px;\r\n    font-family: \"Roboto\", sans-serif;\r\n  }\r\n  .ui.segment {\r\n    padding: 2rem 2rem;\r\n  }\r\n  .button {\r\n    margin: 10px 10px 10px 0px;\r\n    padding: 15px;\r\n  }\r\n  .ui.raised.segment,\r\n  .ui.raised.segments {\r\n    box-shadow: 0 10px 14px 0 rgba(34, 36, 38, 0.5),\r\n      0 2px 10px 0 rgba(34, 36, 38, 0.15);\r\n  }\r\n  .ui.primary.button,\r\n  .ui.primary.buttons .button {\r\n    padding: 15px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid, Form, Segment, Icon, Message } from \"semantic-ui-react\";\r\nimport WithForm from \"../hoc/withForm\";\r\nimport Dorms from \"../Dorms\";\r\nimport FirstDorm from \"../Dorms/FirstDorm/\";\r\nimport SecondDorm from \"../Dorms/SecondDorm\";\r\nimport ThirdDorm from \"../Dorms/ThirdDorm\";\r\nimport { FormStyle } from \"./style\";\r\n\r\nconst FormComponent = props => {\r\n  const [currentDorm, setCurrentDorm] = useState(null);\r\n  /**\r\n   * This is for setting min date that student can reserve a room\r\n   */\r\n  const date = new Date();\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth() + 1;\r\n  let day = date.getDate();\r\n  let currDate = `${year}-0${month}-${day}`;\r\n\r\n  function handleParentsChange(e) {\r\n    const { value } = e.target;\r\n    const [parentType, name] = e.target.name.split(\".\");\r\n    props.handleParentsChange(state => ({\r\n      ...state,\r\n      [parentType]: {\r\n        ...state[parentType],\r\n        [name]: value\r\n      }\r\n    }));\r\n  }\r\n\r\n  const renderDorm = () => {\r\n    switch (currentDorm) {\r\n      case 1:\r\n        return (\r\n          <FirstDorm\r\n            dormDb={props.state.dormDb}\r\n            setCurrentDorm={setCurrentDorm}\r\n            currentDorm={currentDorm}\r\n            setSelectedRoom={props.handleParentsChange}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <SecondDorm\r\n            dormDb={props.state.dormDb}\r\n            setCurrentDorm={setCurrentDorm}\r\n            currentDorm={currentDorm}\r\n            setSelectedRoom={props.handleParentsChange}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <ThirdDorm\r\n            dormDb={props.state.dormDb}\r\n            setCurrentDorm={setCurrentDorm}\r\n            currentDorm={currentDorm}\r\n            setSelectedRoom={props.handleParentsChange}\r\n          />\r\n        );\r\n\r\n      default:\r\n        return (\r\n          <Dorms\r\n            dormDb={props.state.dormDb}\r\n            currentdorm={currentDorm}\r\n            setCurrentDorm={setCurrentDorm}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormStyle>\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column computer={14} mobile={10}>\r\n            <h1 className=\"title\">Dorm</h1>\r\n            <Segment raised>\r\n              <Form\r\n                success={\r\n                  props.state.responseStatus === 200 ||\r\n                  props.state.responseStatus === 201\r\n                }\r\n                error={props.state.error}\r\n                loading={props.state.loading}\r\n                size=\"large\"\r\n                onSubmit={props.handleSubmit}\r\n                unstackable\r\n              >\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Фамилия</label>\r\n                    <input\r\n                      pattern=\"[А-ЯЁ][а-яё]{1,39}$\"\r\n                      required\r\n                      value={props.state.name_l}\r\n                      type=\"text\"\r\n                      name=\"name_l\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Заглавная буква,кириллица\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Имя</label>\r\n                    <input\r\n                      pattern=\"[А-ЯЁ][а-яё]{1,39}$\"\r\n                      required\r\n                      value={props.state.name_f}\r\n                      type=\"text\"\r\n                      name=\"name_f\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Заглавная буква,кириллица\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label className=\"form-label\">Отчество</label>\r\n                    <input\r\n                      pattern=\"[А-ЯЁ][а-яё]{1,39}$\"\r\n                      value={props.state.patronymic}\r\n                      type=\"text\"\r\n                      name=\"patronymic\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Заглавная буква,кириллица\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">ИИН</label>\r\n                    <input\r\n                      required\r\n                      value={props.state.uin}\r\n                      type=\"text\"\r\n                      name=\"uin\"\r\n                      maxLength=\"12\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Только цифры\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Группа</label>\r\n                    <input\r\n                      pattern=\"[\\-А-ЯЁ0-9 ]{2,12}$\"\r\n                      required\r\n                      value={props.state.group}\r\n                      type=\"text\"\r\n                      name=\"group\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"С заглавной буквы, кириллица\"\r\n                    />\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group widths=\"equal\">\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Номер телефона</label>\r\n                    <input\r\n                      required\r\n                      pattern=\"((\\+7)|[8])7[0-9]{9}$\"\r\n                      value={props.state.phone}\r\n                      type=\"text\"\r\n                      name=\"phone\"\r\n                      maxLength=\"11\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Начиная с 8\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">\r\n                      Количество детей в семье\r\n                    </label>\r\n                    <input\r\n                      required\r\n                      value={props.state.children}\r\n                      type=\"number\"\r\n                      name=\"children\"\r\n                      onChange={props.handleChange}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Номер комнаты</label>\r\n                    <input\r\n                      required\r\n                      value={props.state.room_id}\r\n                      type=\"number\"\r\n                      name=\"room_id\"\r\n                      onChange={props.handleChange}\r\n                      placeholder=\"Введите номер комнаты\"\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field\r\n                    className=\"gender\"\r\n                    name=\"gender_id\"\r\n                    onChange={props.handleSelect}\r\n                    value={props.state.gender_id}\r\n                    label=\"Пол\"\r\n                    control=\"select\"\r\n                    required\r\n                  >\r\n                    <option value=\"\" disabled>\r\n                      Выберите пол\r\n                    </option>\r\n                    <option value=\"1\">Мужской</option>\r\n                    <option value=\"2\">Женский</option>\r\n                  </Form.Field>\r\n                  <Form.Field required>\r\n                    <label className=\"form-label\">Дата заселения</label>\r\n                    <input\r\n                      min={currDate}\r\n                      required\r\n                      value={props.state.date_residence}\r\n                      type=\"date\"\r\n                      name=\"date_residence\"\r\n                      onChange={props.handleChange}\r\n                    />\r\n                  </Form.Field>\r\n                </Form.Group>\r\n                <Form.Field required>\r\n                  <label className=\"form-label\">Адрес проживания</label>\r\n                  <input\r\n                    required\r\n                    value={props.state.address}\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    onChange={props.handleChange}\r\n                    placeholder=\"Улица, дом, квартира\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field required>\r\n                  <label className=\"form-label\">E-Mail</label>\r\n                  <input\r\n                    required\r\n                    value={props.state.email}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={props.handleChange}\r\n                    placeholder=\"E-Mail\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field\r\n                  name=\"parents\"\r\n                  onChange={props.handleChange}\r\n                  value={props.state.parents}\r\n                  label=\"Родители\"\r\n                  control=\"select\"\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Нет\r\n                  </option>\r\n                  <option value=\"both\">Оба</option>\r\n                  <option value=\"mother\">Мама</option>\r\n                  <option value=\"father\">Папа</option>\r\n                </Form.Field>\r\n                <Form.Group>\r\n                  {(props.state.parents === \"mother\" ||\r\n                    props.state.parents === \"both\") && (\r\n                    <React.Fragment>\r\n                      <Form.Field>\r\n                        <label>Фамилия</label>\r\n                        <input\r\n                          name=\"mother.name_l\"\r\n                          value={props.state.mother.name_l || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Фамилия матери\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Имя</label>\r\n                        <input\r\n                          name=\"mother.name_f\"\r\n                          value={props.state.mother.name_f || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Имя матери\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Отчество</label>\r\n                        <input\r\n                          name=\"mother.patronymic\"\r\n                          value={props.state.mother.patronymic || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Отчество матери\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Номер телефона</label>\r\n                        <input\r\n                          name=\"mother.phone\"\r\n                          value={props.state.mother.phone || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Номер телефона матери\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                    </React.Fragment>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  {(props.state.parents === \"father\" ||\r\n                    props.state.parents === \"both\") && (\r\n                    <React.Fragment>\r\n                      <label>Отец</label>\r\n                      <Form.Field>\r\n                        <label>Фамилия</label>\r\n                        <input\r\n                          name=\"father.name_l\"\r\n                          value={props.state.father.name_l || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Фамилия отца\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Имя</label>\r\n                        <input\r\n                          name=\"father.name_f\"\r\n                          value={props.state.father.name_f || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Имя отца\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Отчество</label>\r\n                        <input\r\n                          name=\"father.patronymic\"\r\n                          value={props.state.father.patronymic || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Отчество отца\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                        <label>Номер телефона</label>\r\n                        <input\r\n                          name=\"father.phone\"\r\n                          value={props.state.father.phone || \"\"}\r\n                          onChange={handleParentsChange}\r\n                          placeholder=\"Номер телефона отца\"\r\n                          type=\"text\"\r\n                        />\r\n                      </Form.Field>\r\n                    </React.Fragment>\r\n                  )}\r\n                </Form.Group>\r\n                {props.state.responseStatus === 200 ||\r\n                  (props.state.responseStatus === 201 && (\r\n                    <Message success header=\"Форма отправлена успешно!\" />\r\n                  ))}\r\n                {props.state.error && (\r\n                  <Message error header=\"Неправильно заполнена форма!\" />\r\n                )}\r\n                <Button animated=\"fade\" primary type=\"submit\">\r\n                  <Button.Content visible>Отправить заявление</Button.Content>\r\n                  <Button.Content hidden>\r\n                    <Icon name=\"arrow right\" />\r\n                  </Button.Content>\r\n                </Button>\r\n              </Form>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row centered>\r\n          <Grid.Column width=\"14\">{renderDorm()}</Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </FormStyle>\r\n  );\r\n};\r\n\r\nexport default WithForm(FormComponent);\r\n","import styled from \"styled-components\";\r\n\r\nexport const AdminComponent = styled.div`\r\n  background-color: inherit;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  height: 100vh;\r\n  .form {\r\n    padding-top: 50%;\r\n  }\r\n`;\r\n\r\nexport const AdminPanelStyle = styled.div`\r\n  height: 100vh;\r\n  .ui.segment {\r\n    border-radius: 0px;\r\n    width: 100%;\r\n    overflow-x: auto;\r\n  }\r\n  i.icon,\r\n  i.icons {\r\n    font-size: 1.4em;\r\n  }\r\n  .form-label,\r\n  .gender label,\r\n  .status label {\r\n    padding: 10px 10px 10px 0px;\r\n  }\r\n  .ui.button {\r\n    margin: 2px 2px 2px 0px;\r\n    padding: 10px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const AdminReportsStyle = styled.div`\r\n  background-color: inherit;\r\n`;\r\n\r\nexport const AdminRequestsStyle = styled.div`\r\n  background-color: inherit;\r\n`;\r\n\r\nexport const AdminDirectionStyle = styled.div`\r\n  background-color: inherit;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Table, Checkbox, Segment } from \"semantic-ui-react\";\r\nimport { withAPI } from \"../API\";\r\nimport { gender } from \"../../utils/util\";\r\n\r\nimport { AdminReportsStyle } from \"./style\";\r\n\r\nclass AdminReports extends Component {\r\n  state = {\r\n    reports: []\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (this.state.reports.length) return;\r\n    this.props.api.getReports().then(res => {\r\n      this.setState({\r\n        reports: res.data\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const loaded = this.state.reports.length ? false : true;\r\n    return (\r\n      <AdminReportsStyle>\r\n        <Grid.Row centered>\r\n          <Grid.Column>\r\n            {!loaded ? (\r\n              <Segment loading={loaded}>\r\n                <h1>Направления</h1>\r\n                <Table size=\"large\" celled>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Фамилия</Table.HeaderCell>\r\n                      <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                      <Table.HeaderCell>Отчество</Table.HeaderCell>\r\n                      <Table.HeaderCell>Пол</Table.HeaderCell>\r\n                      <Table.HeaderCell>ИИН</Table.HeaderCell>\r\n                      <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\r\n                      <Table.HeaderCell>Телефон</Table.HeaderCell>\r\n                      <Table.HeaderCell>Сколько детей в семье</Table.HeaderCell>\r\n                      <Table.HeaderCell>\r\n                        Дата начала проживания\r\n                      </Table.HeaderCell>\r\n                      <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\r\n                      <Table.HeaderCell>Статус</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {this.state.reports.map((value, index) => {\r\n                      return (\r\n                        <Table.Row key={index}>\r\n                          <Table.Cell>{value.name_l}</Table.Cell>\r\n                          <Table.Cell>{value.name_f}</Table.Cell>\r\n                          <Table.Cell>{value.patronymic}</Table.Cell>\r\n                          <Table.Cell>{gender[value.gender_id]}</Table.Cell>\r\n                          <Table.Cell>{value.uin}</Table.Cell>\r\n                          <Table.Cell>{value.address}</Table.Cell>\r\n                          <Table.Cell>{value.phone}</Table.Cell>\r\n                          <Table.Cell>{value.children}</Table.Cell>\r\n                          <Table.Cell>{value.date_residence}</Table.Cell>\r\n                          <Table.Cell>{value.number}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <Checkbox slider />\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              </Segment>\r\n            ) : (\r\n              <Segment loading={loaded}>\r\n                <Table>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Фамилия</Table.HeaderCell>\r\n                      <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                      <Table.HeaderCell>Отчество</Table.HeaderCell>\r\n                      <Table.HeaderCell>Пол</Table.HeaderCell>\r\n                      <Table.HeaderCell>ИИН</Table.HeaderCell>\r\n                      <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\r\n                      <Table.HeaderCell>Телефон</Table.HeaderCell>\r\n                      <Table.HeaderCell>Сколько детей в семье</Table.HeaderCell>\r\n                      <Table.HeaderCell>\r\n                        Дата начала проживания\r\n                      </Table.HeaderCell>\r\n                      <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\r\n                      <Table.HeaderCell>Статус</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                </Table>\r\n              </Segment>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </AdminReportsStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAPI(AdminReports);\r\n","import React, { PureComponent } from \"react\";\r\nimport { Button, Segment, Form } from \"semantic-ui-react\";\r\nimport { findName } from \"../../utils/util\";\r\nimport WithForm from \"../hoc/withForm\";\r\n\r\nimport { AdminDirectionStyle } from \"./style\";\r\n\r\nclass AdminDirection extends PureComponent {\r\n  render() {\r\n    return (\r\n      <AdminDirectionStyle>\r\n        <Segment raised>\r\n          <Form size=\"big\" onSubmit={this.props.handleCurrentFieldSubmitReport}>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Фамилия</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.name_l}\r\n                  type=\"text\"\r\n                  name=\"name_l\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите фамилию\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Имя</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.name_f}\r\n                  type=\"text\"\r\n                  name=\"name_f\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите имя\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label className=\"form-label\">Отчество</label>\r\n                <input\r\n                  value={this.props.openCurrentField.patronymic || \"\"}\r\n                  type=\"text\"\r\n                  name=\"patronymic\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите отчество\"\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field required>\r\n                <label className=\"form-label\">ИИН</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.uin}\r\n                  type=\"text\"\r\n                  name=\"uin\"\r\n                  maxLength=\"12\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите ИИН\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field\r\n                className=\"status\"\r\n                name=\"status_id\"\r\n                onChange={this.props.handleCurrentFieldSelect}\r\n                value={this.props.openCurrentField.status_id || \"0\"}\r\n                label=\"Статус\"\r\n                control=\"select\"\r\n                required\r\n              >\r\n                <>\r\n                  <option disabled value=\"0\">\r\n                    Статус заявки\r\n                  </option>\r\n                  {this.props.state.dormDb.status &&\r\n                    this.props.state.dormDb.status.map(status => {\r\n                      const name = findName(\r\n                        this.props.state.dormDb.names,\r\n                        status.name_id\r\n                      );\r\n                      return (\r\n                        <option key={status.id} value={status.id}>\r\n                          {name.name_ru}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </>\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Номер телефона</label>\r\n                <input\r\n                  required\r\n                  pattern=\"((\\+7)|[8])7[0-9]{9}$\"\r\n                  value={this.props.openCurrentField.phone}\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  maxLength=\"11\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"87081231212\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Количество детей в семье</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.children}\r\n                  type=\"number\"\r\n                  name=\"children\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите количество детей в семье\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Номер комнаты</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.room_id || \"\"}\r\n                  type=\"number\"\r\n                  name=\"room_id\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите номер комнаты\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field\r\n                className=\"gender\"\r\n                name=\"gender_id\"\r\n                onChange={this.props.handleCurrentFieldChange}\r\n                value={this.props.openCurrentField.gender_id}\r\n                label=\"Пол\"\r\n                control=\"select\"\r\n                required\r\n              >\r\n                <>\r\n                  <option defaultValue=\"\" disabled>\r\n                    Пол\r\n                  </option>\r\n                  {this.props.state.dormDb.genders &&\r\n                    this.props.state.dormDb.genders.map(gender => {\r\n                      const name = findName(\r\n                        this.props.state.dormDb.names,\r\n                        gender.name_id\r\n                      );\r\n                      return (\r\n                        <option key={gender.id} value={gender.id}>\r\n                          {name.name_ru}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </>\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Дата заселения</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.date_residence}\r\n                  type=\"date\"\r\n                  name=\"date_residence\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                />\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Form.Field required>\r\n              <label className=\"form-label\">E-Mail</label>\r\n              <input\r\n                required\r\n                value={this.props.openCurrentField.email}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                onChange={this.props.handleCurrentFieldChange}\r\n                placeholder=\"E-Mail\"\r\n              />\r\n            </Form.Field>\r\n            <Form.Field required>\r\n              <label className=\"form-label\">Адрес проживания</label>\r\n              <input\r\n                required\r\n                value={this.props.openCurrentField.address}\r\n                type=\"text\"\r\n                name=\"address\"\r\n                onChange={this.props.handleCurrentFieldChange}\r\n                placeholder=\"Улица, дом, квартира\"\r\n              />\r\n            </Form.Field>\r\n            <Button primary type=\"submit\">\r\n              Создать направление\r\n            </Button>\r\n          </Form>\r\n        </Segment>\r\n      </AdminDirectionStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WithForm(AdminDirection);\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Table, Segment, Modal, Button, Header } from \"semantic-ui-react\";\r\nimport { withAPI } from \"../API\";\r\nimport { gender } from \"../../utils/util\";\r\nimport AdminDirection from \"./AdminDirection\";\r\nimport { withoutFields } from \"../../utils/util\";\r\n\r\nimport { AdminRequestsStyle } from \"./style\";\r\n\r\nconst DownloadDoc = props => {\r\n  return (\r\n    <Button onClick={props.getRequestDocument}>Скачать направление</Button>\r\n  );\r\n};\r\n\r\nclass AdminRequests extends Component {\r\n  state = {\r\n    requests: [],\r\n    openCurrentField: null,\r\n    currentDataToDocument: null,\r\n    openModal: false\r\n  };\r\n\r\n  handleSubmitReport = e => {\r\n    e.preventDefault();\r\n    const state = { ...this.state.openCurrentField };\r\n    const value = withoutFields(state, \"id\", \"active\", \"room_id\");\r\n    this.props.api.postReport(value).then(() => {\r\n      this.setState({\r\n        openModal: false\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      openCurrentField: {\r\n        ...this.state.openCurrentField,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSelect = e => {\r\n    this.setState({\r\n      openCurrentField: {\r\n        ...this.state.openCurrentField,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  getRequestDocument = () => {\r\n    return this.props.api\r\n      .getRequestDocument(\r\n        this.state.currentDataToDocument.name_f,\r\n        this.state.currentDataToDocument.name_l,\r\n        this.state.currentDataToDocument.patronymic,\r\n        this.state.currentDataToDocument.gender_id,\r\n        this.state.currentDataToDocument.address,\r\n        this.state.currentDataToDocument.phone,\r\n        this.state.currentDataToDocument.rooms.id,\r\n        this.state.currentDataToDocument.children,\r\n        this.state.currentDataToDocument.date_residence,\r\n        this.state.currentDataToDocument.group,\r\n        this.state.currentDataToDocument.mother,\r\n        this.state.currentDataToDocument.father,\r\n        this.state.currentDataToDocument.id\r\n      )\r\n      .then(res => {\r\n        window.open(res.config.url);\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.props.api\r\n      .getRequests()\r\n      .then(\r\n        res => {\r\n          this.setState({\r\n            requests: res.data\r\n          });\r\n        },\r\n        error => {\r\n          if (error.response.status === 401) {\r\n            return this.props.handleLogout();\r\n          }\r\n        }\r\n      )\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const loaded = this.state.requests.length ? false : true;\r\n    return (\r\n      <AdminRequestsStyle>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={16}>\r\n            {!loaded ? (\r\n              <Segment loading={loaded}>\r\n                <h1 style={{ textAlign: \"center\" }}>Заявления</h1>\r\n                <Table compact={true} size=\"small\" celled>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Фамилия</Table.HeaderCell>\r\n                      <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                      <Table.HeaderCell>Отчество</Table.HeaderCell>\r\n                      <Table.HeaderCell>Группа</Table.HeaderCell>\r\n                      <Table.HeaderCell>Пол</Table.HeaderCell>\r\n                      <Table.HeaderCell>ИИН</Table.HeaderCell>\r\n                      <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\r\n                      <Table.HeaderCell>Телефон</Table.HeaderCell>\r\n                      <Table.HeaderCell>Сколько детей в семье</Table.HeaderCell>\r\n                      <Table.HeaderCell>\r\n                        Дата начала проживания\r\n                      </Table.HeaderCell>\r\n                      <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\r\n                      <Table.HeaderCell>Направление</Table.HeaderCell>\r\n                      <Table.HeaderCell>Скачать</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {this.state.requests.map((value, index) => {\r\n                      return (\r\n                        <Table.Row key={index}>\r\n                          <Table.Cell>{value.name_l}</Table.Cell>\r\n                          <Table.Cell>{value.name_f}</Table.Cell>\r\n                          <Table.Cell>{value.patronymic}</Table.Cell>\r\n                          <Table.Cell>{value.group}</Table.Cell>\r\n                          <Table.Cell>{gender[value.gender_id]}</Table.Cell>\r\n                          <Table.Cell>{value.uin}</Table.Cell>\r\n                          <Table.Cell>{value.address}</Table.Cell>\r\n                          <Table.Cell>{value.phone}</Table.Cell>\r\n                          <Table.Cell>{value.children}</Table.Cell>\r\n                          <Table.Cell>{value.date_residence}</Table.Cell>\r\n                          <Table.Cell>{value.rooms.number}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <Modal\r\n                              open={this.state.openModal}\r\n                              onClose={() =>\r\n                                this.setState({\r\n                                  openModal: false\r\n                                })\r\n                              }\r\n                              dimmer=\"blurring\"\r\n                              size=\"fullscreen\"\r\n                              trigger={\r\n                                <Button\r\n                                  onClick={() =>\r\n                                    this.setState({\r\n                                      openCurrentField: value,\r\n                                      openModal: true\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  Создать направление\r\n                                </Button>\r\n                              }\r\n                              closeIcon\r\n                            >\r\n                              <Header\r\n                                icon=\"archive\"\r\n                                content=\"Создание направления\"\r\n                              />\r\n                              <Modal.Content>\r\n                                <AdminDirection\r\n                                  openCurrentField={this.state.openCurrentField}\r\n                                  handleCurrentFieldChange={this.handleChange}\r\n                                  handleCurrentFieldSelect={this.handleSelect}\r\n                                  handleCurrentFieldSubmitReport={\r\n                                    this.handleSubmitReport\r\n                                  }\r\n                                />\r\n                              </Modal.Content>\r\n                            </Modal>\r\n                          </Table.Cell>\r\n                          <Table.Cell>\r\n                            <Modal\r\n                              dimmer=\"blurring\"\r\n                              size=\"mini\"\r\n                              trigger={\r\n                                <Button\r\n                                  onClick={() => {\r\n                                    this.setState({\r\n                                      currentDataToDocument: value\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  Открыть направление\r\n                                </Button>\r\n                              }\r\n                            >\r\n                              <Header\r\n                                icon=\"file outline\"\r\n                                content=\"Скачать направление\"\r\n                              />\r\n                              <Modal.Content>\r\n                                <DownloadDoc\r\n                                  getRequestDocument={this.getRequestDocument}\r\n                                />\r\n                              </Modal.Content>\r\n                            </Modal>\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              </Segment>\r\n            ) : (\r\n              <Segment loading={loaded}>\r\n                <Table>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Фамилия</Table.HeaderCell>\r\n                      <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                      <Table.HeaderCell>Отчество</Table.HeaderCell>\r\n                      <Table.HeaderCell>Группа</Table.HeaderCell>\r\n                      <Table.HeaderCell>Пол</Table.HeaderCell>\r\n                      <Table.HeaderCell>ИИН</Table.HeaderCell>\r\n                      <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\r\n                      <Table.HeaderCell>Телефон</Table.HeaderCell>\r\n                      <Table.HeaderCell>Сколько детей в семье</Table.HeaderCell>\r\n                      <Table.HeaderCell>\r\n                        Дата начала проживания\r\n                      </Table.HeaderCell>\r\n                      <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\r\n                      <Table.HeaderCell>Направление</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                </Table>\r\n              </Segment>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </AdminRequestsStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAPI(AdminRequests);\r\n","import React, { useState } from \"react\";\r\nimport AdminReports from \"./AdminReports\";\r\nimport AdminRequests from \"./AdminRequests\";\r\nimport { Grid, Menu, Segment } from \"semantic-ui-react\";\r\n\r\nimport { AdminPanelStyle } from \"./style\";\r\n\r\nconst AdminPanel = props => {\r\n  const [routes, setRoutes] = useState(1);\r\n  return (\r\n    <AdminPanelStyle>\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column>\r\n            <Segment>\r\n              <Menu fluid size=\"large\" secondary>\r\n                <Menu.Item className=\"header-name\" icon=\"user\" />\r\n                <Menu.Item onClick={() => setRoutes(1)} name=\"Заявления\" />\r\n                <Menu.Item onClick={() => setRoutes(2)} name=\"Направления\" />\r\n                <Menu.Item\r\n                  icon=\"sign out\"\r\n                  position=\"right\"\r\n                  onClick={props.handleLogout}\r\n                  name=\"Выйти\"\r\n                />\r\n              </Menu>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row centered>\r\n          <Grid.Column>\r\n            <React.Fragment>\r\n              {routes === 1 && (\r\n                <AdminRequests handleLogout={props.handleLogout} />\r\n              )}\r\n              {routes === 2 && <AdminReports />}\r\n            </React.Fragment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </AdminPanelStyle>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","/**\r\n * @file This HOC is for auth for admin\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { withAPI } from \"../API\";\r\n\r\nconst WithAdmin = WrappedComponent => {\r\n  class WithAdmin extends Component {\r\n    state = {\r\n      login: \"\",\r\n      password: \"\",\r\n      user:\r\n        localStorage.getItem(\"sessionUser\") &&\r\n        localStorage.getItem(\"sessionUser\")\r\n    };\r\n\r\n    //*get password and login for administrator\r\n    handleLogin = () => {\r\n      this.props.api\r\n        .getAuth(this.state.login, this.state.password)\r\n        .then(res => {\r\n          this.setState({\r\n            user: res.data.token\r\n          });\r\n          localStorage.setItem(\"sessionUser\", res.data.token);\r\n        })\r\n        .catch(error => {\r\n          throw error;\r\n        });\r\n    };\r\n\r\n    //* function of logout administrator\r\n    handleLogout = () => {\r\n      localStorage.removeItem(\"sessionUser\");\r\n      this.setState({\r\n        user: null\r\n      });\r\n    };\r\n\r\n    handleChange = e => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <WrappedComponent\r\n          state={this.state}\r\n          handleChange={this.handleChange}\r\n          handleLogout={this.handleLogout}\r\n          handleLogin={this.handleLogin}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  return withAPI(WithAdmin);\r\n};\r\n\r\nexport default WithAdmin;\r\n","import React from \"react\";\r\nimport AdminPanel from \"./AdminPanel\";\r\nimport withAdmin from \"../hoc/withAdmin\";\r\nimport { AdminComponent } from \"./style\";\r\nimport { Grid, Segment, Input, Button, Form } from \"semantic-ui-react\";\r\n\r\nconst Admin = props => {\r\n  const { user } = props.state;\r\n  if (user) {\r\n    return <AdminPanel handleLogout={props.handleLogout} />;\r\n  }\r\n\r\n  return (\r\n    <AdminComponent>\r\n      <Grid container>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={8}>\r\n            <Form className=\"form\" onSubmit={props.handleLogin}>\r\n              <Segment>\r\n                <Form.Field>\r\n                  <label htmlFor=\"login\">Login</label>\r\n                  <Input\r\n                    value={props.state.login}\r\n                    onChange={props.handleChange}\r\n                    name=\"login\"\r\n                    type=\"text\"\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    value={props.state.password}\r\n                    onChange={props.handleChange}\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                  />\r\n                </Form.Field>\r\n                <Button type=\"submit\">Войти</Button>\r\n              </Segment>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </AdminComponent>\r\n  );\r\n};\r\n\r\nexport default withAdmin(Admin);\r\n","import styled from \"styled-components\";\r\n\r\nexport const AppWrapper = styled.div`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Montserrat\");\r\n  @import url(\"https://fonts.googleapis.com/css?family=Roboto&subset=cyrillic,cyrillic-ext,latin-ext\");\r\n`;\r\n","import React from \"react\";\r\nimport FormComponent from \"../Form\";\r\nimport Admin from \"../Admin\";\r\nimport { AppWrapper } from \"./style\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n// import Preloader from \"./Preloader\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <AppWrapper>\r\n        <div className=\"app\">\r\n          <Route exact path=\"/\" component={FormComponent} />\r\n          <Route exact path=\"/admin\" component={Admin} />\r\n        </div>\r\n      </AppWrapper>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport APIContext, { API } from \"./components/API\";\r\nimport App from \"./components/App\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <HashRouter basename={process.env.PUBLIC_URL}>\r\n    <APIContext.Provider value={new API()}>\r\n      <App />\r\n    </APIContext.Provider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}