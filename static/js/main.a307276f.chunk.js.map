{"version":3,"sources":["static/firstDorm.webp","static/secondDorm.webp","static/thirdDorm.webp","static/dormSchemes/1.webp","static/dormSchemes/2.webp","static/dormSchemes/3.webp","components/API/context.js","components/API/api.js","components/API/index.js","utils/util.js","components/hoc/withForm.js","components/Dorms/style.js","components/Dorms/index.js","components/Dorms/FirstDorm/style.js","components/Dorms/Floors.js","components/Dorms/FirstDorm/index.js","components/Dorms/FirstDorm/FirstForm.hooks.js","components/Form/style.js","components/Form/index.js","components/Admin/style.js","components/Admin/AdminReports.js","components/Admin/AdminDirection.js","components/Admin/AdminRequests.js","components/Admin/AdminPanel.js","components/Admin/index.js","components/hoc/withAdmin.js","components/Overlay/index.js","components/App/style.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","API","React","createContext","withAPI","WrappedComponent","props","react_default","a","createElement","context_API","Consumer","api","Object","assign","instance","axios","create","baseURL","headers","content-type","interceptors","request","use","config","token","localStorage","getItem","newConfig","objectSpread","Token","_this","this","classCallCheck","postRequest","reqValues","post","qs","stringify","postReport","_ref","mother","father","repValues","objectWithoutProperties","getAuth","login","password","get","concat","getDormDb","getReports","getRequests","getRooms","floor_id","getRequestById","requestId","getRequestDocument","name_f","name_l","patronymic","gender_id","address","phone","room_id","children","date_residence","group","id","putStatus","status_id","put","components_API","findName","names","find","name","withoutFields","values","newValues","_len","arguments","length","fields","Array","_key","forEach","field","gender","1","2","coordinatesDB","coordinates","x","y","recCoordinates","width","height","3","educational_form_id","dorm_id","email","residence_permit","city","country_id","citizenship","number","shelter","parent_mother","parent_father","guardian","orphanage","WithForm","_Component","_getPrototypeOf2","args","possibleConstructorReturn","getPrototypeOf","call","apply","state","responseStatus","error","parents","loading","dormDb","countries","educational_form","resetForm","setState","handleSubmit","e","preventDefault","JSON","resPer","parse","replace","console","log","then","res","status","catch","handleChange","defineProperty","target","value","handleParentsChange","callback","handleSelect","inherits","createClass","key","_this2","data","Component","RoomWrapper","styled","div","_templateObject","SvgRect","rect","attrs","_templateObject2","DormStyle","_templateObject3","Dorms","Grid","Row","centered","Column","computer","mobile","className","Card","Group","doubling","stackable","itemsPerRow","raised","color","onClick","setCurrentDorm","Image","alt","src","FirstDorm","Content","Meta","SecondDorm","ThirdDorm","FirstDormStyle","style_templateObject","FloorComponent","coordinatesByDormID","currentDormId","selectedRoom","amount","max","selectedFloor","FirstDormScheme","SecondDormScheme","ThirdDormScheme","rooms","map","room","index","handleSelectedRoom","genderColor","Floor","componentDidUpdate","_","prevState","setSelectedRoom","sortReports","i","endI","wasSwap","j","endJ","Floors_FloorComponent","floors","filter","dormId","currentDorm","_useField","defaultValue","_useState5","useState","_useState6","slicedToArray","useField","_useField2","currentFloor","setCurrentFloor","_useGetRooms","_useState","_useState2","setRooms","_useState3","_useState4","isLoading","setLoading","useEffect","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","sent","stop","useGetRooms","_useGetRooms2","Form","Field","onChange","disabled","floor","Fragment","Button","Segment","Floors","selectedDorm","FormStyle","Form_style_templateObject","date","Date","year","getFullYear","month","getMonth","day","getDate","currDate","_e$target$name$split","split","_e$target$name$split2","parentType","handleNestedObjChange","_e$target$name$split3","_e$target$name$split4","type","Dorms_FirstDorm","components_Dorms","success","onSubmit","size","unstackable","relaxed","columns","verticalAlign","stretched","required","Input","pattern","label","icon","labelPosition","placeholder","control","country","maxLength","content","min","eduForm","name_id","name_ru","readOnly","htmlFor","aria-label","aria-required","Message","header","textAlign","animated","primary","visible","hidden","Icon","AdminComponent","Admin_style_templateObject","AdminPanelStyle","style_templateObject2","AdminReportsStyle","style_templateObject3","AdminRequestsStyle","_templateObject4","AdminDirectionStyle","_templateObject5","ChangeStatusModal","report_id","AdminReports","reports","openModal","componentDidMount","loaded","Header","Table","celled","HeaderCell","Body","Cell","uin","Modal","open","onClose","dimmer","trigger","closeIcon","AdminReports_ChangeStatusModal","handleCurrentFieldSubmitReport","widths","openCurrentField","handleCurrentFieldChange","handleCurrentFieldSelect","genders","PureComponent","DownloadDoc","AdminRequests","requests","currentDataToDocument","searchValue","foundedRequest","handleSubmitReport","handleSearchInput","handleSearch","toConsumableArray","window","url","handleLogout","style","inline","corner","compact","Admin_AdminDirection","AdminRequests_DownloadDoc","AdminPanel","routes","setRoutes","Menu","fluid","secondary","Item","position","Admin_AdminRequests","Admin_AdminReports","withAdmin","WithAdmin","user","handleLogin","setItem","removeItem","Admin_AdminPanel","container","Overlay","react_fullpage_default","navigation","scrollingSpeed","render","fullpageApi","Wrapper","as","Link","to","circular","scrolling","moveSectionDown","AppWrapper","App_style_templateObject","App","Switch","Route","exact","path","component","FormComponent","Admin","ReactDOM","HashRouter","basename","process","Provider","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.a307276f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/firstDorm.952e4bbc.webp\";","module.exports = __webpack_public_path__ + \"static/media/secondDorm.7a1cfe76.webp\";","module.exports = __webpack_public_path__ + \"static/media/thirdDorm.e662d390.webp\";","module.exports = __webpack_public_path__ + \"static/media/1.05912791.webp\";","module.exports = __webpack_public_path__ + \"static/media/2.e4cf62c1.webp\";","module.exports = __webpack_public_path__ + \"static/media/3.52bd3667.webp\";","import React from \"react\";\r\n\r\nconst API = React.createContext(null);\r\n\r\nexport const withAPI = WrappedComponent => props => {\r\n  return (\r\n    <API.Consumer>\r\n      {api => <WrappedComponent {...props} api={api} />}\r\n    </API.Consumer>\r\n  );\r\n};\r\n\r\nexport default API;\r\n","/**\n * @file This file includes all api requests like GET,POST and etc.\n */\n\nimport axios from \"axios\";\nimport qs from \"qs\";\n\nconst instance = axios.create({\n  baseURL: \"https://dorm-keu.herokuapp.com/api\",\n  headers: {\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n});\n\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"sessionUser\");\n\n  if (!token) return config;\n  const newConfig = { ...config };\n  newConfig.headers.Token = token;\n  return newConfig;\n});\n\nclass API {\n  constructor() {\n    this.api = instance;\n  }\n\n  /**\n   * Posting request to the server\n   * @param {Object} reqValues The Request data that will be sended\n   */\n  postRequest = reqValues => {\n    const reqOptions = {\n      headers: {\n        \"content-type\": \"application/x-www-form-urlencoded\" //x-www-form-urlencoded\n      }\n    };\n    return this.api.post(\"/request\", qs.stringify(reqValues), reqOptions);\n  };\n\n  /**\n   * Posting reports to the server\n   * @param mother\n   * @param father\n   * @param repValues The Report data that will be sended\n   */\n  postReport = ({ mother, father, ...repValues }) => {\n    const repOptions = {\n      headers: {\n        \"content-type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n\n    return this.api.post(\"/report\", qs.stringify(repValues), repOptions);\n  };\n\n  /**\n   * Get login and password of administrator\n   * @param {string} login The login of admin\n   * @param {string} password The password of admin\n   */\n  getAuth = (login, password) => {\n    return this.api.get(`auth?login=${login}&password=${password}`);\n  };\n\n  /**\n   * Get data from dorm database\n   */\n  getDormDb = () => {\n    return this.api.get(\"/db\");\n  };\n\n  /**\n   * Get all reports\n   */\n  getReports = () => {\n    return this.api.get(\"/report\");\n  };\n\n  /**\n   * Get all requests\n   */\n  getRequests = () => {\n    return this.api.get(\"/request\");\n  };\n\n  /**\n   * This function is showing rooms leaning on current floor\n   * @param {number} floor_id The id of the floor\n   */\n  getRooms = floor_id => {\n    return this.api.get(`/room?id=${floor_id}`);\n  };\n\n  /**\n   * This function is for showing 1 request by entered id\n   * @param {number} requestId This is the id of the request\n   */\n  getRequestById = requestId => {\n    return this.api.get(`/search/request?id=${requestId}`);\n  };\n\n  /**\n   * Get autocomplete word document of request\n   * @param {string} name_f First name of student\n   * @param {string} name_l Last name of student\n   * @param {string} patronymic Patronymic of student\n   * @param {string} gender_id Gender\n   * @param {string} address Address of living of student\n   * @param {string} phone Phone of student\n   * @param {number} room_id Which room he selected\n   * @param {number} children How many children he has in family\n   * @param {date} date_residence On which date he reserved a room\n   * @param {string} group In which group he joined\n   * @param mother mother of student\n   * @param father father of student\n   * @param id i dont know for what is this\n   */\n  getRequestDocument = (\n    name_f,\n    name_l,\n    patronymic,\n    gender_id,\n    address,\n    phone,\n    room_id,\n    children,\n    date_residence,\n    group,\n    mother,\n    father,\n    id\n  ) => {\n    const reqDocOptions = {\n      headers: {\n        \"content-type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n    return this.api.get(\n      `/doc/request?name_f=${name_f}&name_l=${name_l}&patronymic=${patronymic}&gender_id=${gender_id}&address=${address}&phone=${phone}&room_id=${room_id}&children=${children}&date_residence=${date_residence}&group=${group}&id=${id}&mother={\"name_l\":${\n        mother.name_l\n      },\"name_f\":${mother.name_f}, \"patronymic\":${mother.patronymic}, \"phone\":${\n        mother.phone\n      }}&father={\"name_l\":${father.name_l},\"name_f\":${\n        father.name_f\n      },\"patronymic\":${father.patronymic}, \"phone\":${father.phone}}`,\n      reqDocOptions\n    );\n  };\n\n  /**\n   * Changing status of report\n   * @param {number} id The id of report\n   * @param {number} status_id The status (1,2,3,4)\n   */\n  putStatus = (id, status_id) => {\n    return this.api.put(`/status?id=${id}&status_id=${status_id}`);\n  };\n}\n\nexport default API;\n","import APIContext, { withAPI } from \"./context\";\r\n//*class API\r\nimport API from \"./api\";\r\n\r\n//* for main index.js\r\nexport default APIContext;\r\n//* for other components\r\nexport { withAPI, API };\r\n","export function findName(names, id) {\n  return names.find(name => id === name.id);\n}\n\n/**\n * @param {} values state that will be sended\n * @param  {...any} fields state that will be deleted\n */\nexport function withoutFields(values, ...fields) {\n  const newValues = { ...values };\n  fields.forEach(field => {\n    delete newValues[field];\n  });\n\n  return newValues;\n}\n\nexport const gender = {\n  1: \"Мужской\",\n  2: \"Женский\"\n};\n\nexport function sortByKeys(obj) {\n  const keys = Object.keys(obj).sort();\n\n  return keys.reduce((acc, key) => {\n    acc[key] = obj[key];\n    return acc;\n  }, {});\n}\n\nexport const coordinatesDB = {\n  // first dorm\n  1: {\n    coordinates: [\n      { x: 120, y: 556 },\n      { x: 221, y: 556 },\n      { x: 320, y: 556 },\n      { x: 416, y: 556 },\n      { x: 505, y: 556 },\n      { x: 596, y: 556 },\n      { x: 692, y: 556 },\n      { x: 779, y: 556 },\n      { x: 859, y: 556 },\n      { x: 943, y: 556 }\n    ],\n\n    recCoordinates: [\n      { x: 86.989, width: 96.972, y: 444.01, height: 191.57 },\n      { x: 188.99, width: 96.972, y: 444.01, height: 191.57 },\n      { x: 290.99, width: 92.218, y: 444.01, height: 191.57 },\n      { x: 388.99, width: 87.465, y: 444.01, height: 191.57 },\n      { x: 480.99, width: 83.187, y: 444.01, height: 191.57 },\n      { x: 570.99, width: 85.563, y: 444.01, height: 191.57 },\n      { x: 660.99, width: 87.244, y: 444.01, height: 191.57 },\n      { x: 754.99, width: 77.262, y: 444.01, height: 191.57 },\n      { x: 837.46, width: 73.228, y: 444.01, height: 191.57 },\n      { x: 916.78, width: 77.598, y: 444.01, height: 191.57 }\n    ]\n  },\n  // second dorm\n  2: {\n    coordinates: [\n      { x: 23, y: 348 },\n      { x: 91, y: 348 },\n      { x: 26, y: 524 },\n      { x: 92, y: 524 },\n      { x: 257, y: 148 },\n      { x: 330, y: 148 },\n      { x: 395, y: 148 },\n      { x: 465, y: 148 },\n      { x: 540, y: 148 },\n      { x: 670, y: 148 },\n      { x: 740, y: 148 },\n      { x: 810, y: 148 },\n      { x: 880, y: 148 },\n      { x: 950, y: 148 },\n      { x: 337, y: 335 },\n      { x: 408, y: 335 },\n      { x: 476, y: 335 },\n      { x: 547, y: 335 },\n      { x: 673, y: 335 },\n      { x: 739, y: 335 },\n      { x: 808, y: 335 },\n      { x: 880, y: 335 },\n      { x: 948, y: 335 }\n    ],\n\n    recCoordinates: [\n      { x: 9.4245, y: 279.2, width: 62.438, height: 123.3 },\n      { x: 77.752, y: 279.59, width: 64.401, height: 123.3 },\n      { x: 10.014, y: 456.11, width: 62.634, height: 123.89 },\n      { x: 78.341, y: 456.3, width: 64.597, height: 123.3 },\n      { x: 244.25, y: 81.679, width: 56.94, height: 132.14 },\n      { x: 306.1, y: 81.679, width: 63.027, height: 132.34 },\n      { x: 373.25, y: 81.679, width: 65.775, height: 132.34 },\n      { x: 443.54, y: 81.876, width: 68.328, height: 132.14 },\n      { x: 516.19, y: 81.776, width: 69.974, height: 132.17 },\n      { x: 647.53, y: 81.776, width: 69.974, height: 132.17 },\n      { x: 721.67, y: 81.499, width: 61.088, height: 132.17 },\n      { x: 787.14, y: 81.483, width: 67.739, height: 132.73 },\n      { x: 859.01, y: 81.287, width: 65.775, height: 132.93 },\n      { x: 928.91, y: 81.679, width: 62.241, height: 132.34 },\n      { x: 319.06, y: 266.24, width: 66.561, height: 119.77 },\n      { x: 390.33, y: 265.85, width: 64.597, height: 120.36 },\n      { x: 460.66, y: 266.43, width: 63.032, height: 119.12 },\n      { x: 529.24, y: 265.87, width: 66.919, height: 119.95 },\n      { x: 657.25, y: 265.04, width: 62.476, height: 120.79 },\n      { x: 724.45, y: 266.43, width: 62.199, height: 119.68 },\n      { x: 792.48, y: 266.15, width: 64.975, height: 120.23 },\n      { x: 863.28, y: 266.15, width: 64.975, height: 119.68 },\n      { x: 932.15, y: 266.43, width: 63.865, height: 119.4 }\n    ]\n  },\n  // third dorm\n  3: {\n    coordinates: [\n      { x: 130.02473, y: 649.37097 },\n      { x: 217.33463, y: 649.65887 },\n      { x: 302.42239, y: 649.40277 },\n      { x: 386.65302, y: 649.4502 },\n      { x: 478.79669, y: 649.74628 },\n      { x: 560.43793, y: 649.45428 },\n      { x: 638.92249, y: 649.40686 },\n      { x: 989.43994, y: 422.2587 },\n      { x: 989.5376, y: 337.53336 },\n      { x: 825.94354, y: 211.84669 },\n      { x: 826.45355, y: 270.3833 },\n      { x: 989.51501, y: 247.94127 }\n    ],\n\n    recCoordinates: [\n      { x: 94.986, y: 576.37, width: 79.351, height: 119.22 },\n      { x: 181.7, y: 576.37, width: 79.351, height: 119.22 },\n      { x: 268.48, y: 576.37, width: 79.351, height: 119.22 },\n      { x: 355.54, y: 576.37, width: 73.546, height: 119.22 },\n      { x: 446.08, y: 576.37, width: 71.888, height: 119.22 },\n      { x: 526.22, y: 576.37, width: 77.692, height: 119.22 },\n      { x: 612.06, y: 576.37, width: 77.139, height: 119.22 },\n      { x: 930.08, y: 377.09, width: 125.22, height: 72.111 },\n      { x: 930.08, y: 288.66, width: 125.22, height: 80.679 },\n      { x: 930.08, y: 203.64, width: 125.22, height: 77.363 },\n      { x: 796.3, y: 185.12, width: 78.784, height: 40.878 },\n      { x: 796.3, y: 234.02, width: 78.784, height: 67.136 }\n    ]\n  }\n};\n","/**\n * @file This HOC includes all input fields and its state.\n * @file This HOC only for components that have input fields.\n * This HOC includes functions like POST Request [handleSubmit], GET Request [getDormDb], and handlers for inputs.\n */\n\nimport React, { Component } from \"react\";\nimport { withAPI } from \"../API\";\nimport { withoutFields } from \"../../utils/util\";\nconst fields = {\n  name_f: \"\",\n  name_l: \"\",\n  patronymic: \"\",\n  educational_form_id: \"\",\n  group: \"\",\n  phone: \"\",\n  children: \"\",\n  room_id: \"\",\n  gender_id: \"\",\n  status_id: \"\",\n  dorm_id: \"\",\n  email: \"\",\n  date_residence: \"\",\n  residence_permit: {\n    city: \"\",\n    country_id: \"\",\n    address: \"\"\n  },\n  citizenship: {\n    number: \"\",\n    country_id: \"\"\n  },\n  shelter: {\n    parent_mother: {\n      name_l: \"\",\n      name_f: \"\",\n      patronymic: \"\",\n      phone: \"\"\n    },\n    parent_father: {\n      name_l: \"\",\n      name_f: \"\",\n      patronymic: \"\",\n      phone: \"\"\n    },\n    guardian: {\n      name_l: \"\",\n      name_f: \"\",\n      patronymic: \"\",\n      phone: \"\"\n    },\n    orphanage: {\n      address: \"\",\n      phone: \"\"\n    }\n  }\n};\nconst WithForm = WrappedComponent => {\n  class WithForm extends Component {\n    state = {\n      ...fields,\n      responseStatus: \"\",\n      error: null,\n      parents: \"\",\n      loading: false,\n      dormDb: {\n        countries: [],\n        educational_form: []\n      }\n    };\n\n    /**\n     * @function resetForm This function for clearing inputs fields\n     */\n    resetForm = () => {\n      this.setState({ ...fields });\n    };\n\n    componentDidMount() {\n      if (this.state.dormDb.length) return;\n      this.props.api\n        .getDormDb()\n        .then(res => {\n          this.setState({\n            dormDb: res.data\n          });\n        })\n        .catch(error => {\n          throw error;\n        });\n    }\n\n    /**\n     * Handling for posting requests\n     */\n    handleSubmit = e => {\n      e.preventDefault();\n      const state = { ...this.state };\n      const values = withoutFields(\n        state,\n        \"status_id\",\n        \"dormDb\",\n        \"parents\",\n        \"responseStatus\",\n        \"loading\",\n        \"error\"\n      );\n\n      /* This is for send nested objects, because library 'qs' requires to stringify stringified object  */\n\n      values.shelter = JSON.stringify(values.shelter);\n      values.residence_permit = JSON.stringify(values.residence_permit);\n      let resPer = JSON.parse(values.residence_permit);\n      values.citizenship = JSON.stringify(values.citizenship).replace(\n        /\"\"/g,\n        resPer.country_id\n      );\n\n      console.log(values);\n\n      this.setState({\n        loading: true\n      });\n      this.props.api\n        .postRequest(values)\n        .then(res => {\n          this.setState({\n            responseStatus: res.status,\n            loading: false,\n            error: null\n          });\n          this.resetForm();\n        })\n        .catch(error => {\n          this.setState({\n            error: error,\n            loading: false\n          });\n          return values;\n        });\n    };\n\n    /**\n     * Handling for inputs\n     */\n    handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    /**\n     * Handling for mother and father inputs\n     */\n    handleParentsChange = callback => {\n      this.setState(callback);\n    };\n\n    /**\n     * Handling for select and options\n     */\n    handleSelect = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    render() {\n      return (\n        <WrappedComponent\n          state={this.state}\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          handleSelect={this.handleSelect}\n          handleParentsChange={this.handleParentsChange}\n          {...this.props}\n        />\n      );\n    }\n  }\n\n  return withAPI(WithForm);\n};\n\nexport default WithForm;\n","import styled from \"styled-components\";\n\nexport const RoomWrapper = styled.div`\n  height: 100vh;\n  .ui.cards a.card:hover,\n  .ui.link.card:hover,\n  .ui.link.cards .card:hover,\n  a.ui.card:hover {\n    transform: translateY(-15px);\n  }\n  .title {\n    background-color: transparent;\n    font-size: 42px;\n    text-transform: uppercase;\n    text-align: center;\n    padding: 30px;\n  }\n\n  .desc {\n    text-align: center;\n    font-size: 24px;\n    font-family: \"Montserrat\", sans-serif;\n    color: #000;\n  }\n\n  .ui.card > .image,\n  .ui.cards > .card > .image {\n    cursor: pointer;\n  }\n  .ui.card .meta,\n  .ui.cards > .card .meta {\n    color: black;\n    font-size: 16px;\n  }\n\n  .card-group {\n    padding: 100px 0 0 0;\n  }\n`;\n\nexport const SvgRect = styled.rect.attrs(({ x, width }) => ({\n  x: x,\n  width: width\n}))`\n  position: relative;\n  transition: 0.5s all;\n  fill: ${props => props.gender};\n  cursor: pointer;\n  :hover {\n    fill: gray;\n  }\n`;\n\nexport const DormStyle = styled.div`\n  background-color: #ffffff;\n  border-radius: 0.28571429rem;\n  padding: 2rem;\n  outline: none;\n  background-image: none;\n  display: flex;\n  justify-content: center;\n  overflow: auto;\n\n  ul {\n    padding: 0;\n    margin: 0;\n  }\n\n  .svgwrapper {\n    position: absolute;\n    margin: auto;\n    text-align: center;\n  }\n\n  .svg {\n    width: 1080px;\n    height: 666px;\n  }\n\n  .title {\n    font-size: 24px;\n  }\n\n  .text {\n    font-size: 16px;\n    cursor: pointer;\n  }\n\n  .tooltip {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 99;\n    display: flex;\n    padding: 10px 10px;\n    background-color: #fff;\n    justify-content: space-between;\n    box-shadow: #000000 1px 0 10px;\n\n    span {\n      margin-right: 10px;\n      font-size: 16px;\n    }\n\n    .center-block {\n      font-weight: bold;\n    }\n\n    .last-block {\n      display: flex;\n      > div {\n        margin-right: 10px;\n        position: relative;\n        font-weight: bold;\n        &::before {\n          content: \"\";\n          width: 18px;\n          height: 18px;\n          display: inline-block;\n          vertical-align: middle;\n          border-radius: 50%;\n          margin-right: 5px;\n          margin-top: -2px;\n          background-color: #e3f2fd;\n        }\n      }\n\n      .free {\n        color: #a5d6a7;\n        &::before {\n          background-color: #a5d6a7;\n        }\n      }\n      .male {\n        color: #90caf9;\n        &::before {\n          background-color: #90caf9;\n        }\n      }\n      .female {\n        color: #f48fb1;\n        &::before {\n          background-color: #f48fb1;\n        }\n      }\n    }\n  }\n\n  //.select-wrapper {\n  //  display: flex;\n  //  justify-content: center;\n  //  align-items: center;\n  //  width: 400px;\n  //  height: 400px;\n  //  margin: 0 auto;\n  //}\n`;\n","import React, { Component } from \"react\";\nimport { withAPI } from \"../API\";\nimport { RoomWrapper } from \"./style\";\nimport { Grid, Card, Image } from \"semantic-ui-react\";\nimport FirstDorm from \"../../static/firstDorm.webp\";\nimport SecondDorm from \"../../static/secondDorm.webp\";\nimport ThirdDorm from \"../../static/thirdDorm.webp\";\n\nclass Dorms extends Component {\n  state = {};\n\n  render() {\n    return (\n      <RoomWrapper>\n        <Grid>\n          <Grid.Row centered>\n            <Grid.Column computer={14} mobile={14}>\n              <h1 className=\"title\">Общежития</h1>\n              <p className=\"desc\">Выберите корпус</p>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row centered>\n            <Grid.Column width={14}>\n              <Card.Group\n                className=\"card-group\"\n                doubling\n                stackable\n                itemsPerRow={3}\n                centered\n              >\n                <Card\n                  raised\n                  color=\"yellow\"\n                  onClick={() => this.props.setCurrentDorm(1)}\n                >\n                  <Image alt=\"First Dorm\" src={FirstDorm} />\n                  <Card.Content>\n                    <Card.Meta>г. Караганда, ул. Академическая 5/1</Card.Meta>\n                  </Card.Content>\n                </Card>\n                <Card\n                  raised\n                  color=\"yellow\"\n                  onClick={() => this.props.setCurrentDorm(2)}\n                >\n                  <Image alt=\"Second Dorm\" src={SecondDorm} />\n                  <Card.Content>\n                    <Card.Meta>г. Караганда, ул. Академическая 5</Card.Meta>\n                  </Card.Content>\n                </Card>\n                <Card\n                  raised\n                  color=\"yellow\"\n                  onClick={() => this.props.setCurrentDorm(3)}\n                >\n                  <Image alt=\"Third Dorm\" src={ThirdDorm} />\n                  <Card.Content>\n                    <Card.Meta>г. Караганда, ул. Комиссарова 32</Card.Meta>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </RoomWrapper>\n    );\n  }\n}\n\nexport default withAPI(Dorms);\n","import styled from \"styled-components\";\n\nexport const FirstDormStyle = styled.div`\n  padding-top: 50px;\n  .select-wrapper {\n    display: flex;\n    justify-content: center;\n    //margin-bottom: 20px;\n    align-items: center;\n    width: 400px;\n    margin: 10px auto;\n  }\n  .firstDorm {\n    border: 0 !important;\n    box-shadow: 0 0 0 0 rgba(255, 255, 255, 1) !important;\n  }\n`;\n","import React, { Component } from \"react\";\nimport FirstDormScheme from \"../../static/dormSchemes/1.webp\";\nimport SecondDormScheme from \"../../static/dormSchemes/2.webp\";\nimport ThirdDormScheme from \"../../static/dormSchemes/3.webp\";\nimport { DormStyle, SvgRect } from \"../Dorms/style\";\nimport { coordinatesDB } from \"../../utils/util\";\n\nconst FloorComponent = props => {\n  const setCurrentScheme = () => {\n    if (props.currentDormId === 1) {\n      return FirstDormScheme;\n    } else if (props.currentDormId === 2) {\n      return SecondDormScheme;\n    } else {\n      return ThirdDormScheme;\n    }\n  };\n\n  const coordinatesByDormID = coordinatesDB[props.currentDormId];\n\n  return (\n    <DormStyle>\n      <div className=\"tooltip\">\n        <div className=\"first-block\">\n          <span>Общежитие № {props.currentDormId}</span>\n          <span>\n            Проживает {props.selectedRoom.amount}/{props.selectedRoom.max}\n          </span>\n          <span>Этаж № {props.selectedFloor}</span>\n        </div>\n        <div className=\"center-block\">\n          <span>Выбрана комната {props.selectedRoom.number}</span>\n        </div>\n        <div className=\"last-block\">\n          <div className=\"free\">СВОБОДНАЯ</div>\n          <div className=\"male\">МУЖСКАЯ</div>\n          <div className=\"female\">ЖЕНСКАЯ</div>\n        </div>\n      </div>\n      <img alt=\"Dorm Schemes\" src={setCurrentScheme()} />\n      <div className=\"svgwrapper\">\n        <svg className=\"svg\">\n          {props.rooms.map((room, index) => {\n            return (\n              <SvgRect\n                key={room.id}\n                onClick={() => props.handleSelectedRoom(room)}\n                x={`${coordinatesByDormID.recCoordinates[index].x}`}\n                y={`${coordinatesByDormID.recCoordinates[index].y}`}\n                width={`${coordinatesByDormID.recCoordinates[index].width}`}\n                height={`${coordinatesByDormID.recCoordinates[index].height}`}\n                gender={props.genderColor(room.gender_id, room.amount)}\n              />\n            );\n          })}\n          {props.rooms.map((room, index) => (\n            <text\n              key={room.id}\n              onClick={() => props.handleSelectedRoom(room)}\n              className=\"text\"\n              height={`${coordinatesByDormID.recCoordinates[index].height}`}\n              x={`${coordinatesByDormID.coordinates[index].x}`}\n              y={`${coordinatesByDormID.coordinates[index].y}`}\n            >\n              {room.number}\n            </text>\n          ))}\n        </svg>\n      </div>\n    </DormStyle>\n  );\n};\n\nclass Floor extends Component {\n  state = {\n    selectedRoom: {},\n    gender_id: null\n  };\n\n  handleSelectedRoom = room => {\n    this.setState({\n      selectedRoom: room\n    });\n  };\n\n  genderColor = (gender_id, amount) => {\n    if (amount === 0) {\n      return \"#E8F5E9\";\n    }\n    switch (gender_id) {\n      case 1:\n        return \"#E3F2FD\";\n      case 2:\n        return \"#FCE4EC\";\n      default:\n        return \"#E8F5E9\";\n    }\n  };\n\n  componentDidUpdate = (_, prevState) => {\n    if (prevState.selectedRoom !== this.state.selectedRoom) {\n      this.props.setSelectedRoom(\n        this.state.selectedRoom.id,\n        this.props.currentDormId\n      );\n    }\n  };\n\n  sortReports = rooms => {\n    for (let i = 0, endI = rooms.length - 1; i < endI; i++) {\n      let wasSwap = false;\n\n      for (let j = 0, endJ = endI - i; j < endJ; j++) {\n        if (rooms[j].id > rooms[j + 1].id) {\n          [rooms[j], rooms[j + 1]] = [rooms[j + 1], rooms[j]];\n          wasSwap = true;\n        }\n      }\n\n      if (!wasSwap) break;\n    }\n\n    return rooms;\n  };\n\n  render() {\n    const { rooms } = this.props;\n    this.sortReports(rooms);\n    const { selectedRoom } = this.state;\n    this.genderColor();\n    return (\n      <FloorComponent\n        currentDormId={this.props.currentDormId}\n        selectedRoom={selectedRoom}\n        selectedFloor={this.props.selectedFloor}\n        rooms={rooms}\n        handleSelectedRoom={this.handleSelectedRoom}\n        genderColor={this.genderColor}\n      />\n    );\n  }\n}\n\nexport default Floor;\n","import React from \"react\";\nimport { Grid, Segment, Form, Button } from \"semantic-ui-react\";\nimport { useField, useGetRooms } from \"./FirstForm.hooks\";\nimport { FirstDormStyle } from \"./style\";\nimport { withAPI } from \"../../API\";\nimport Floors from \"../Floors\";\n\nconst FirstDorm = props => {\n  const floors = props.dormDb.floors\n    ? props.dormDb.floors.filter(dormId => {\n        return dormId.dorm_id === props.currentDorm;\n      })\n    : [{}];\n\n  const [currentFloor, setCurrentFloor] = useField(\"\");\n  const [rooms, isLoading] = useGetRooms(\n    currentFloor || floors[0].id,\n    props.api.getRooms\n  );\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setCurrentFloor(value);\n  };\n\n  return (\n    <FirstDormStyle>\n      <div className=\"select-wrapper\">\n        <Form>\n          <Form.Group>\n            <Form.Field>\n              <select\n                value={currentFloor}\n                onChange={handleChange}\n                name=\"selectedFloor\"\n              >\n                <option disabled value=\"0\">\n                  Выберите этаж\n                </option>\n                {floors.map((floor, key) => {\n                  return (\n                    <React.Fragment key={key}>\n                      <option value={floor.id}>{floor.number} этаж</option>\n                    </React.Fragment>\n                  );\n                })}\n              </select>\n            </Form.Field>\n            <Form.Field>\n              <Button onClick={() => props.setCurrentDorm(null)}>Назад</Button>\n            </Form.Field>\n          </Form.Group>\n        </Form>\n      </div>\n      <div>\n        <Grid>\n          <Grid.Row centered>\n            <Grid.Column width={16}>\n              <Segment className=\"firstDorm\" loading={isLoading}>\n                <Floors\n                  rooms={rooms}\n                  floors={floors[0].number}\n                  selectedFloor={currentFloor}\n                  currentDormId={props.currentDorm}\n                  setCurrentDorm={props.setCurrentDorm}\n                  setSelectedRoom={(selectedRoom, selectedDorm) =>\n                    props.setSelectedRoom(state => ({\n                      ...state,\n                      room_id: selectedRoom,\n                      dorm_id: selectedDorm\n                    }))\n                  }\n                />\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    </FirstDormStyle>\n  );\n};\n\nexport default withAPI(FirstDorm);\n","import { useEffect, useState } from 'react';\r\n\r\n/**\r\n *\r\n * @param {string} selectedFloor Comes from select\r\n * @param {*} getRooms This is just API\r\n *\r\n */\r\nexport const useGetRooms = (selectedFloor, getRooms) => {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  /**\r\n   * useEffect тригеррится только тогда когда меняется 2-ой аргумент [selectedFloor]\r\n   */\r\n  useEffect(() => {\r\n    (async () => {\r\n      setLoading(true);\r\n      const response = await getRooms(selectedFloor);\r\n      setRooms(response.data);\r\n      setLoading(false);\r\n    })();\r\n  }, [selectedFloor]); // Триггеры на которые будут дергаться API\r\n\r\n  return [rooms, isLoading];\r\n};\r\n\r\nexport const useField = defaultValue => {\r\n  const [value, handleChange] = useState(defaultValue);\r\n  return [value, handleChange];\r\n};\r\n","import styled from \"styled-components\";\n\nexport const FormStyle = styled.div`\n  height: 100%;\n  .mainForm {\n    padding-bottom: 50px;\n  }\n  .auth-btn {\n    margin-top: 58px !important;\n    position: absolute !important;\n    z-index: 999 !important;\n  }\n  .title {\n    color: #000;\n    font-family: \"Montserrat\", sans-serif;\n    font-size: 42px;\n    text-transform: uppercase;\n    text-align: center;\n    padding: 30px;\n  }\n  .form-label {\n    font-weight: 500;\n    font-size: 18px;\n  }\n  .form-label,\n  .gender label {\n    padding: 15px 10px 15px 0;\n    font-family: \"Roboto\", sans-serif;\n  }\n  .ui.segment {\n    border: 0;\n    box-shadow: none;\n    height: 100%;\n  }\n  .button {\n    margin: 10px 10px 10px 0;\n    padding: 15px;\n  }\n  .ui.raised.segment,\n  .ui.raised.segments {\n    box-shadow: 0 10px 14px 0 rgba(34, 36, 38, 0.5),\n      0 2px 10px 0 rgba(34, 36, 38, 0.15);\n  }\n  .ui.primary.button,\n  .ui.primary.buttons .button {\n    padding: 15px;\n    background-color: #0f5185;\n  }\n\n  .firstCol {\n    width: 100%;\n    margin: 0 auto;\n  }\n\n  .questionnaire {\n    font-size: 36px;\n  }\n  .lastGroup {\n    display: none !important;\n  }\n  .parentsCol {\n    padding-top: 10px;\n  }\n  .parents {\n    padding-top: 20px !important;\n  }\n`;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Icon,\n  Input,\n  Message,\n  Segment\n} from \"semantic-ui-react\";\nimport { findName } from \"../../utils/util\";\nimport WithForm from \"../hoc/withForm\";\nimport Dorms from \"../Dorms\";\nimport FirstDorm from \"../Dorms/FirstDorm/\";\nimport { FormStyle } from \"./style\";\n\nconst FormComponent = props => {\n  const [currentDorm, setCurrentDorm] = useState(null);\n\n  /**\n   * This is for setting min date that student can reserve a room\n   */\n  const date = new Date();\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  let currDate = `${year}-0${month}-${day}`;\n\n  function handleParentsChange(e) {\n    const { value } = e.target;\n    const [shelter, parentType, name] = e.target.name.split(\".\");\n    props.handleParentsChange(state => ({\n      ...state,\n      [shelter]: {\n        ...state[shelter],\n        [parentType]: {\n          ...state[shelter][parentType],\n          [name]: value\n        }\n      }\n    }));\n  }\n\n  function handleNestedObjChange(e) {\n    const { value } = e.target;\n    const [type, name] = e.target.name.split(\".\");\n    props.handleParentsChange(state => ({\n      ...state,\n      [type]: {\n        ...state[type],\n        [name]: value\n      }\n    }));\n  }\n\n  return <FormStyle>\n      <Grid.Row centered>\n        <Grid.Column width=\"14\">\n          <Segment>\n            {currentDorm !== null ? (\n              <FirstDorm\n                dormDb={props.state.dormDb}\n                setCurrentDorm={setCurrentDorm}\n                currentDorm={currentDorm}\n                setSelectedRoom={props.handleParentsChange}\n              />\n            ) : (\n              <Dorms\n                dormDb={props.state.dormDb}\n                setCurrentDorm={setCurrentDorm}\n                currentDorm={currentDorm}\n                setSelectedRoom={props.handleParentsChange}\n              />\n            )}\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n      <Segment>\n        <Form success={props.state.responseStatus === 200 || props.state.responseStatus === 201} error={!!props.state.error} loading={props.state.loading} onSubmit={props.handleSubmit} className=\"mainForm\" size=\"large\" unstackable>\n          <Grid relaxed=\"very\" columns=\"3\">\n            <Grid.Row verticalAlign=\"top\" centered>\n              <Grid.Column stretched width=\"7\">\n                <label className=\"form-label\">ФИО</label>\n                <Form.Group>\n                  <Form.Field width=\"7\" required>\n                    <Input required type=\"text\" name=\"name_l\" pattern=\"[А-ЯЁ][а-яё]{1,39}$\" onChange={props.handleChange} value={props.state.name_l} label={{ icon: \"asterisk\", color: \"black\" }} labelPosition=\"right corner\" placeholder=\"Фамилия\" />\n                  </Form.Field>\n                  <Form.Field width=\"7\" required>\n                    <Input required type=\"text\" name=\"name_f\" pattern=\"[А-ЯЁ][а-яё]{1,39}$\" onChange={props.handleChange} value={props.state.name_f} label={{ icon: \"asterisk\", color: \"black\" }} labelPosition=\"right corner\" placeholder=\"Имя\" />\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group>\n                  <Form.Field width=\"14\">\n                    <Input required type=\"text\" name=\"patronymic\" pattern=\"[А-ЯЁ][а-яё]{1,39}$\" onChange={props.handleChange} value={props.state.patronymic} label={{ icon: \"asterisk\", color: \"black\" }} labelPosition=\"right corner\" placeholder=\"Отчество\" />\n                  </Form.Field>\n                </Form.Group>\n\n                <label className=\"form-label\">Личные данные</label>\n\n                <Form.Group>\n                  <Form.Field width=\"14\" name=\"residence_permit.country_id\" onChange={handleNestedObjChange} value={props.state.residence_permit.country_id} control=\"select\" required>\n                    <option value=\"\" disabled>\n                      Выберите страну\n                    </option>\n                    {props.state.dormDb.countries.map((country, index) => {\n                      return <React.Fragment key={index}>\n                          <option value={country.id}>{country.name}</option>\n                        </React.Fragment>;\n                    })}\n                  </Form.Field>\n                </Form.Group>\n\n                <Form.Group>\n                  <Form.Field width=\"4\" required>\n                    <Input required type=\"text\" name=\"residence_permit.city\" onChange={handleNestedObjChange} value={props.state.residence_permit.city} placeholder=\"Город\" />\n                  </Form.Field>\n                  <Form.Field width=\"10\" required>\n                    <Input required type=\"text\" name=\"residence_permit.address\" onChange={handleNestedObjChange} value={props.state.residence_permit.address} placeholder=\"Адрес проживания\" />\n                  </Form.Field>\n                </Form.Group>\n\n                <Form.Group>\n                  {props.state.residence_permit.country_id === \"71\" ? <Form.Field width=\"14\" required>\n                      <Input required type=\"text\" name=\"citizenship.number\" maxLength=\"12\" onChange={handleNestedObjChange} value={props.state.citizenship.number} placeholder=\"ИИН\" />\n                    </Form.Field> : <Form.Field width=\"14\" required>\n                      <Input required type=\"text\" name=\"citizenship.number\" maxLength=\"10\" onChange={handleNestedObjChange} value={props.state.citizenship.number} placeholder=\"Номер паспорта\" />\n                    </Form.Field>}\n                </Form.Group>\n\n                <Form.Group>\n                  <Form.Field width=\"7\" required>\n                    <Input required type=\"text\" name=\"children\" onChange={props.handleChange} value={props.state.children} placeholder=\"Кол-во детей в семье\" />\n                  </Form.Field>\n                  <Form.Field width=\"7\" className=\"gender\" name=\"gender_id\" onChange={props.handleSelect} value={props.state.gender_id} control=\"select\" required>\n                    <option value=\"\" disabled>\n                      Выберите пол\n                    </option>\n                    <option value=\"1\">Мужской</option>\n                    <option value=\"2\">Женский</option>\n                  </Form.Field>\n                </Form.Group>\n\n                <label className=\"form-label\">Контакты</label>\n\n                <Form.Group>\n                  <Form.Field width=\"14\" required>\n                    <Input type=\"text\" name=\"phone\" maxLength=\"11\" onChange={props.handleChange} pattern=\"((\\+7)|[8])7[0-9]{9}$\" value={props.state.phone} icon=\"phone\" label={{ content: \"Телефон\", color: \"black\" }} labelPosition=\"left\" placeholder=\"Начиная с 8\" />\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group>\n                  <Form.Field width=\"14\" required>\n                    <Input type=\"email\" name=\"email\" onChange={props.handleChange} value={props.state.email} icon=\"mail\" label={{ content: \"E-mail\", color: \"black\" }} labelPosition=\"left\" placeholder=\"test@test.kz\" />\n                  </Form.Field>\n                </Form.Group>\n\n                <label className=\"form-label\">Другое</label>\n\n                <Form.Group>\n                  <Form.Field width=\"7\" required>\n                    <Input type=\"text\" name=\"group\" onChange={props.handleChange} value={props.state.group} icon=\"group\" label={{ content: \"Группа\", color: \"black\" }} labelPosition=\"left\" placeholder=\"ВТ-13С\" />\n                  </Form.Field>\n                  <Form.Field width=\"7\" required>\n                    <Input type=\"date\" min={currDate} name=\"date_residence\" onChange={props.handleChange} value={props.state.date_residence} icon=\"calendar\" label={{ content: \"Дата\", color: \"black\" }} labelPosition=\"left\" placeholder=\"test@test.kz\" />\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group>\n                  <Form.Field width=\"14\" name=\"educational_form_id\" onChange={props.handleSelect} value={props.state.educational_form_id} control=\"select\" required>\n                    <option value=\"\">Выберите форму обучения</option>\n                    {props.state.dormDb.educational_form && props.state.dormDb.educational_form.map(\n                        (eduForm, index) => {\n                          const name = findName(\n                            props.state.dormDb.names,\n                            eduForm.name_id\n                          );\n                          return (\n                            <React.Fragment key={index}>\n                              <option value={eduForm.id}>\n                                {name.name_ru}\n                              </option>\n                            </React.Fragment>\n                          );\n                        }\n                      )}\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group className=\"lastGroup\">\n                  <Form.Field required>\n                    <input readOnly required value={props.state.room_id} type=\"number\" name=\"room_id\" onChange={props.handleChange} placeholder=\"Введите номер комнаты\" />\n                  </Form.Field>\n                  <Form.Field required>\n                    <input readOnly required value={props.state.dorm_id || \"\"} type=\"number\" name=\"dorm_id\" onChange={props.handleChange} placeholder=\"Номер общежития\" />\n                  </Form.Field>\n                </Form.Group>\n              </Grid.Column>\n\n              {/* second column */}\n\n              <Grid.Column className=\"parentsCol\" width=\"7\">\n                <label htmlFor=\"parents\" className=\"form-label\">\n                  Родители\n                </label>\n                <Form.Group className=\"parents\">\n                  <Form.Field id=\"parents\" width=\"16\" name=\"parents\" onChange={props.handleChange} value={props.state.parents} control=\"select\">\n                    <option value=\"\">Нет</option>\n                    <option value=\"both\">Оба родителя</option>\n                    <option value=\"mother\">Мама</option>\n                    <option value=\"father\">Папа</option>\n                    <option value=\"guardian\">Опекун</option>\n                    <option value=\"orphanage\">Детский дом</option>\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group>\n                  {(props.state.parents === \"mother\" || props.state.parents === \"both\") && <React.Fragment>\n                      <Form.Field>\n                        <label htmlFor=\"parent_mother.name_l\">Фамилия</label>\n                        <input aria-label=\"Фамилия\" aria-required={true} id=\"parent_mother.name_l\" name=\"shelter.parent_mother.name_l\" value={props.state.shelter.parent_mother.name_l || \"\"} onChange={handleParentsChange} placeholder=\"Фамилия матери\" type=\"text\" />\n                      </Form.Field>\n                      <Form.Field>\n                        <label htmlFor=\"parent_mother.name_f\">Имя</label>\n                        <input aria-label=\"Имя\" aria-required={true} id=\"parent_mother.name_f\" name=\"shelter.parent_mother.name_f\" value={props.state.shelter.parent_mother.name_f || \"\"} onChange={handleParentsChange} placeholder=\"Имя матери\" type=\"text\" />\n                      </Form.Field>\n                      <Form.Field>\n                        <label htmlFor=\"parent_mother.patronymic\">\n                          Отчество\n                        </label>\n                        <input aria-label=\"Отчество\" aria-required={true} id=\"parent_mother.patronymic\" name=\"shelter.parent_mother.patronymic\" value={props.state.shelter.parent_mother.patronymic || \"\"} onChange={handleParentsChange} placeholder=\"Отчество матери\" type=\"text\" />\n                      </Form.Field>\n                      <Form.Field>\n                        <label htmlFor=\"parent_mother.phone\">\n                          Номер телефона\n                        </label>\n                        <input aria-label=\"Номер телефона\" aria-required={true} id=\"parent_mother.phone\" name=\"shelter.parent_mother.phone\" value={props.state.shelter.parent_mother.phone || \"\"} onChange={handleParentsChange} placeholder=\"Номер телефона матери\" type=\"text\" />\n                      </Form.Field>\n                    </React.Fragment>}\n                </Form.Group>\n                <Form.Group>\n                  {(props.state.parents === \"father\" || props.state.parents === \"both\") && <React.Fragment>\n                      <Form.Field>\n                        <label htmlFor=\"parent_father.name_l\">Фамилия</label>\n                        <input aria-label=\"Фамилия\" aria-required={true} id=\"parent_father.name_l\" name=\"shelter.parent_father.name_l\" value={props.state.shelter.parent_father.name_l || \"\"} onChange={handleParentsChange} placeholder=\"Фамилия отца\" type=\"text\" />\n                      </Form.Field>\n                      <Form.Field>\n                        <label htmlFor=\"parent_father.name_f\">Имя</label>\n                        <input aria-label=\"Имя\" aria-required={true} id=\"parent_father.name_f\" name=\"shelter.parent_father.name_f\" value={props.state.shelter.parent_father.name_f || \"\"} onChange={handleParentsChange} placeholder=\"Имя отца\" type=\"text\" />\n                      </Form.Field>\n                      <Form.Field>\n                        <label htmlFor=\"parent_father.patronymic\">\n                          Отчество\n                        </label>\n                        <input aria-label=\"Отчество\" aria-required={true} id=\"parent_father.patronymic\" name=\"shelter.parent_father.patronymic\" value={props.state.shelter.parent_father.patronymic || \"\"} onChange={handleParentsChange} placeholder=\"Отчество отца\" type=\"text\" />\n                      </Form.Field>\n                      <Form.Field>\n                        <label htmlFor=\"parent_father.phone\">\n                          Номер телефона\n                        </label>\n                        <input aria-label=\"Номер телефона\" aria-required={true} id=\"parent_father.phone\" name=\"shelter.parent_father.phone\" value={props.state.shelter.parent_father.phone || \"\"} onChange={handleParentsChange} placeholder=\"Номер телефона отца\" type=\"text\" />\n                      </Form.Field>\n                    </React.Fragment>}\n                  {props.state.parents === \"orphanage\" && <React.Fragment>\n                      <Form.Field>\n                        <label htmlFor=\"orphanage.address\">Адресс</label>\n                        <input aria-label=\"Адрес\" aria-required={true} id=\"orphanage.address\" name=\"shelter.orphanage.address\" value={props.state.shelter.orphanage.address || \"\"} onChange={handleParentsChange} placeholder=\"Адрес\" type=\"text\" />\n                      </Form.Field>\n                      <Form.Field>\n                        <label htmlFor=\"orphanage.phone\">Имя</label>\n                        <input aria-label=\"Имя\" aria-required={true} id=\"orphanage.phone\" name=\"shelter.orphanage.phone\" value={props.state.shelter.orphanage.phone || \"\"} onChange={handleParentsChange} placeholder=\"Телефон\" type=\"text\" />\n                      </Form.Field>\n                    </React.Fragment>}\n                  {props.state.parents === \"guardian\" && <React.Fragment>\n                      <Form.Field>\n                        <label htmlFor=\"guardian.name_l\">Фамилия</label>\n                        <input aria-label=\"Фамилия\" aria-required={true} id=\"guardian.name_l\" name=\"shelter.guardian.name_l\" value={props.state.shelter.guardian.name_l || \"\"} onChange={handleParentsChange} placeholder=\"Фамилия\" type=\"text\" />\n                      </Form.Field>\n                      <Form.Field>\n                        <label htmlFor=\"guardian.name_f\">Имя</label>\n                        <input aria-label=\"Имя\" aria-required={true} id=\"guardian.name_f\" name=\"shelter.guardian.name_f\" value={props.state.shelter.guardian.name_f || \"\"} onChange={handleParentsChange} placeholder=\"Имя\" type=\"text\" />\n                      </Form.Field>\n                      <Form.Field>\n                        <label htmlFor=\"guardian.patronymic\">Отчество</label>\n                        <input aria-label=\"Отчество\" aria-required={true} id=\"guardian.patronymic\" name=\"shelter.guardian.patronymic\" value={props.state.shelter.guardian.patronymic || \"\"} onChange={handleParentsChange} placeholder=\"Отчество\" type=\"text\" />\n                      </Form.Field>\n                      <Form.Field>\n                        <label htmlFor=\"guardian.phone\">Номер телефона</label>\n                        <input aria-label=\"Номер телефона\" aria-required={true} id=\"guardian.phone\" name=\"shelter.guardian.phone\" value={props.state.shelter.guardian.phone || \"\"} onChange={handleParentsChange} placeholder=\"Номер телефона\" type=\"text\" />\n                      </Form.Field>\n                    </React.Fragment>}\n                </Form.Group>\n              </Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row>\n              <Grid.Column>\n                {props.state.responseStatus === 200 || (props.state.responseStatus === 201 && <Message success header=\"Форма отправлена успешно!\" />)}\n                {props.state.error && <Message error header=\"Неправильно заполнена форма!\" />}\n              </Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row columns=\"equal\" centered>\n              <Grid.Column width=\"4\" />\n              <Grid.Column width=\"6\" textAlign=\"center\">\n                <h2 className=\"questionnaire\">Заполните анкету</h2>\n              </Grid.Column>\n              <Grid.Column width=\"4\" textAlign=\"right\">\n                <Button aria-label=\"Send request\" animated=\"fade\" primary type=\"submit\">\n                  <Button.Content visible>Отправить заявку</Button.Content>\n                  <Button.Content hidden>\n                    <Icon name=\"arrow right\" />\n                  </Button.Content>\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Form>\n      </Segment>\n    </FormStyle>;\n};\n\nexport default WithForm(FormComponent);\n","import styled from \"styled-components\";\n\nexport const AdminComponent = styled.div`\n  background-color: inherit;\n  font-family: \"Montserrat\", sans-serif;\n  height: 100vh;\n  .form {\n    padding-top: 50%;\n  }\n  .header {\n    text-align: center;\n    font-family: \"Montserrat\", sans-serif;\n    padding: 10px;\n  }\n`;\n\nexport const AdminPanelStyle = styled.div`\n  height: 100vh;\n  .ui.segment {\n    border-radius: 0px;\n    width: 100%;\n    overflow-x: auto;\n  }\n  i.icon,\n  i.icons {\n    font-size: 1.4em;\n  }\n  .form-label,\n  .gender label,\n  .status label {\n    padding: 10px 10px 10px 0px;\n  }\n  .ui.button {\n    margin: 2px 2px 2px 0px;\n    padding: 10px;\n    font-size: 14px;\n  }\n`;\n\nexport const AdminReportsStyle = styled.div`\n  background-color: inherit;\n`;\n\nexport const AdminRequestsStyle = styled.div`\n  background-color: inherit;\n  .searchInput {\n    margin-right: 20px !important;\n  }\n`;\n\nexport const AdminDirectionStyle = styled.div`\n  background-color: inherit;\n`;\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Icon,\r\n  Modal\r\n} from \"semantic-ui-react\";\r\nimport { withAPI } from \"../API\";\r\nimport { gender, findName } from \"../../utils/util\";\r\n\r\nimport { AdminReportsStyle } from \"./style\";\r\n\r\nconst ChangeStatusModal = props => {\r\n  const changeStatus = () => {\r\n    props.putStatus(props.report_id, props.status_id);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={changeStatus}>\r\n      <Form.Field\r\n        className=\"status\"\r\n        name=\"status_id\"\r\n        onChange={props.handleChange}\r\n        value={props.status_id || \"0\"}\r\n        control=\"select\"\r\n        required\r\n      >\r\n        <>\r\n          <option disabled value=\"0\">\r\n            Статус заявки\r\n          </option>\r\n          {props.dormDb.status &&\r\n            props.dormDb.status.map(status => {\r\n              const name = findName(props.dormDb.names, status.name_id);\r\n              return (\r\n                <option key={status.id} value={status.id}>\r\n                  {name.name_ru}\r\n                </option>\r\n              );\r\n            })}\r\n        </>\r\n      </Form.Field>\r\n      <Button primary type=\"submit\">\r\n        Изменить\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nclass AdminReports extends Component {\r\n  state = {\r\n    reports: [],\r\n    status_id: \"\",\r\n    report_id: \"\",\r\n    dormDb: {},\r\n    openModal: false\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (this.state.reports.length) return;\r\n    this.props.api.getReports().then(res => {\r\n      this.setState({\r\n        reports: res.data\r\n      });\r\n    });\r\n    if (this.state.dormDb.length) return;\r\n    this.props.api.getDormDb().then(res => {\r\n      this.setState({\r\n        dormDb: res.data\r\n      });\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const loaded = !this.state.reports.length;\r\n    return (\r\n      <AdminReportsStyle>\r\n        <Grid.Row centered>\r\n          <Grid.Column>\r\n            {!loaded ? (\r\n              <Segment loading={loaded}>\r\n                <h1>Направления</h1>\r\n                <Table size=\"large\" celled>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell>Фамилия</Table.HeaderCell>\r\n                      <Table.HeaderCell>Имя</Table.HeaderCell>\r\n                      <Table.HeaderCell>Отчество</Table.HeaderCell>\r\n                      <Table.HeaderCell>Пол</Table.HeaderCell>\r\n                      <Table.HeaderCell>ИИН</Table.HeaderCell>\r\n                      <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\r\n                      <Table.HeaderCell>Телефон</Table.HeaderCell>\r\n                      <Table.HeaderCell>Сколько детей в семье</Table.HeaderCell>\r\n                      <Table.HeaderCell>\r\n                        Дата начала проживания\r\n                      </Table.HeaderCell>\r\n                      <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\r\n                      <Table.HeaderCell>Статус</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {this.state.reports.map((value, index) => {\r\n                      return (\r\n                        <Table.Row key={index}>\r\n                          <Table.Cell>{value.name_l}</Table.Cell>\r\n                          <Table.Cell>{value.name_f}</Table.Cell>\r\n                          <Table.Cell>{value.patronymic}</Table.Cell>\r\n                          <Table.Cell>{gender[value.gender_id]}</Table.Cell>\r\n                          <Table.Cell>{value.uin}</Table.Cell>\r\n                          <Table.Cell>{value.address}</Table.Cell>\r\n                          <Table.Cell>{value.phone}</Table.Cell>\r\n                          <Table.Cell>{value.children}</Table.Cell>\r\n                          <Table.Cell>{value.date_residence}</Table.Cell>\r\n                          <Table.Cell>{value.rooms.number}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <Modal\r\n                              open={this.state.openModal}\r\n                              onClose={() =>\r\n                                this.setState({\r\n                                  openModal: false\r\n                                })\r\n                              }\r\n                              dimmer=\"blurring\"\r\n                              size=\"fullscreen\"\r\n                              trigger={\r\n                                <Button\r\n                                  onClick={() =>\r\n                                    this.setState({\r\n                                      report_id: value.id,\r\n                                      openModal: true\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  Изменить статус\r\n                                </Button>\r\n                              }\r\n                              closeIcon\r\n                            >\r\n                              <Header\r\n                                icon=\"archive\"\r\n                                content=\"Изменение статуса\"\r\n                              />\r\n                              <Modal.Content>\r\n                                <ChangeStatusModal\r\n                                  handleChange={this.handleChange}\r\n                                  status_id={this.state.status_id}\r\n                                  report_id={this.state.report_id}\r\n                                  dormDb={this.state.dormDb}\r\n                                  putStatus={this.props.api.putStatus}\r\n                                />\r\n                              </Modal.Content>\r\n                            </Modal>\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              </Segment>\r\n            ) : (\r\n              <Segment\r\n                loading={!this.state.reports.length}\r\n                placeholder\r\n              >\r\n                <Header icon>\r\n                  <Icon name=\"file outline\" />\r\n                  <br />\r\n                  Список направлений пуст.\r\n                </Header>\r\n              </Segment>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </AdminReportsStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAPI(AdminReports);\r\n","import React, { PureComponent } from \"react\";\r\nimport { Button, Segment, Form } from \"semantic-ui-react\";\r\nimport { findName } from \"../../utils/util\";\r\nimport WithForm from \"../hoc/withForm\";\r\n\r\nimport { AdminDirectionStyle } from \"./style\";\r\n\r\nclass AdminDirection extends PureComponent {\r\n  render() {\r\n    return (\r\n      <AdminDirectionStyle>\r\n        <Segment raised>\r\n          <Form size=\"big\" onSubmit={this.props.handleCurrentFieldSubmitReport}>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Фамилия</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.name_l}\r\n                  type=\"text\"\r\n                  name=\"name_l\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите фамилию\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Имя</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.name_f}\r\n                  type=\"text\"\r\n                  name=\"name_f\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите имя\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label className=\"form-label\">Отчество</label>\r\n                <input\r\n                  value={this.props.openCurrentField.patronymic || \"\"}\r\n                  type=\"text\"\r\n                  name=\"patronymic\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите отчество\"\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field required>\r\n                <label className=\"form-label\">ИИН</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.uin}\r\n                  type=\"text\"\r\n                  name=\"uin\"\r\n                  maxLength=\"12\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите ИИН\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field\r\n                className=\"status\"\r\n                name=\"status_id\"\r\n                onChange={this.props.handleCurrentFieldSelect}\r\n                value={this.props.openCurrentField.status_id || \"0\"}\r\n                label=\"Статус\"\r\n                control=\"select\"\r\n                required\r\n              >\r\n                <>\r\n                  <option disabled value=\"0\">\r\n                    Статус заявки\r\n                  </option>\r\n                  {this.props.state.dormDb.status &&\r\n                    this.props.state.dormDb.status.map(status => {\r\n                      const name = findName(\r\n                        this.props.state.dormDb.names,\r\n                        status.name_id\r\n                      );\r\n                      return (\r\n                        <option key={status.id} value={status.id}>\r\n                          {name.name_ru}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </>\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Номер телефона</label>\r\n                <input\r\n                  required\r\n                  pattern=\"((\\+7)|[8])7[0-9]{9}$\"\r\n                  value={this.props.openCurrentField.phone}\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  maxLength=\"11\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"87081231212\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Количество детей в семье</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.children}\r\n                  type=\"number\"\r\n                  name=\"children\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите количество детей в семье\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Номер комнаты</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.rooms.id}\r\n                  type=\"number\"\r\n                  name=\"room_id\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                  placeholder=\"Введите номер комнаты\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field\r\n                className=\"gender\"\r\n                name=\"gender_id\"\r\n                onChange={this.props.handleCurrentFieldChange}\r\n                value={this.props.openCurrentField.gender_id}\r\n                label=\"Пол\"\r\n                control=\"select\"\r\n                required\r\n              >\r\n                <>\r\n                  <option defaultValue=\"\" disabled>\r\n                    Пол\r\n                  </option>\r\n                  {this.props.state.dormDb.genders &&\r\n                    this.props.state.dormDb.genders.map(gender => {\r\n                      const name = findName(\r\n                        this.props.state.dormDb.names,\r\n                        gender.name_id\r\n                      );\r\n                      return (\r\n                        <option key={gender.id} value={gender.id}>\r\n                          {name.name_ru}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </>\r\n              </Form.Field>\r\n              <Form.Field required>\r\n                <label className=\"form-label\">Дата заселения</label>\r\n                <input\r\n                  required\r\n                  value={this.props.openCurrentField.date_residence}\r\n                  type=\"date\"\r\n                  name=\"date_residence\"\r\n                  onChange={this.props.handleCurrentFieldChange}\r\n                />\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Form.Field required>\r\n              <label className=\"form-label\">E-Mail</label>\r\n              <input\r\n                required\r\n                value={this.props.openCurrentField.email}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                onChange={this.props.handleCurrentFieldChange}\r\n                placeholder=\"E-Mail\"\r\n              />\r\n            </Form.Field>\r\n            <Form.Field required>\r\n              <label className=\"form-label\">Адрес проживания</label>\r\n              <input\r\n                required\r\n                value={this.props.openCurrentField.address}\r\n                type=\"text\"\r\n                name=\"address\"\r\n                onChange={this.props.handleCurrentFieldChange}\r\n                placeholder=\"Улица, дом, квартира\"\r\n              />\r\n            </Form.Field>\r\n            <Button primary type=\"submit\">\r\n              Создать направление\r\n            </Button>\r\n          </Form>\r\n        </Segment>\r\n      </AdminDirectionStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WithForm(AdminDirection);\r\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  Table,\n  Segment,\n  Modal,\n  Button,\n  Header,\n  Icon,\n  Form\n} from \"semantic-ui-react\";\nimport { withAPI } from \"../API\";\nimport { gender } from \"../../utils/util\";\nimport AdminDirection from \"./AdminDirection\";\nimport { withoutFields } from \"../../utils/util\";\n\nimport { AdminRequestsStyle } from \"./style\";\n\nconst DownloadDoc = props => {\n  return (\n    <Button onClick={props.getRequestDocument}>Скачать направление</Button>\n  );\n};\n\nclass AdminRequests extends Component {\n  state = {\n    requests: [],\n    openCurrentField: null,\n    room_id: null,\n    currentDataToDocument: null,\n    openModal: false,\n    loading: true,\n    searchValue: \"\",\n    foundedRequest: []\n  };\n\n  handleSubmitReport = e => {\n    const room_id = this.state.room_id;\n    const state = { ...this.state.openCurrentField, room_id };\n    const value = withoutFields(state, \"id\", \"active\", \"rooms\");\n    this.props.api.postReport(value).then(() => {\n      this.setState({\n        openModal: false\n      });\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      openCurrentField: {\n        ...this.state.openCurrentField,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  handleSearchInput = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSearch = e => {\n    this.props.api\n      .getRequestById(this.state.searchValue)\n      .then(res => {\n        if (this.state.foundedRequest) {\n          this.setState({\n            foundedRequest: []\n          });\n        }\n        this.setState(prevState => ({\n          foundedRequest: [...prevState.foundedRequest, res.data]\n        }));\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n\n  handleSelect = e => {\n    this.setState({\n      openCurrentField: {\n        ...this.state.openCurrentField,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  getRequestDocument = () => {\n    return this.props.api\n      .getRequestDocument(\n        this.state.currentDataToDocument.name_f,\n        this.state.currentDataToDocument.name_l,\n        this.state.currentDataToDocument.patronymic,\n        this.state.currentDataToDocument.gender_id,\n        this.state.currentDataToDocument.address,\n        this.state.currentDataToDocument.phone,\n        this.state.currentDataToDocument.rooms.id,\n        this.state.currentDataToDocument.children,\n        this.state.currentDataToDocument.date_residence,\n        this.state.currentDataToDocument.group,\n        this.state.currentDataToDocument.mother,\n        this.state.currentDataToDocument.father,\n        this.state.currentDataToDocument.id\n      )\n      .then(res => {\n        window.open(res.config.url);\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n\n  componentDidMount = () => {\n    this.props.api\n      .getRequests()\n      .then(\n        res => {\n          this.setState({\n            requests: res.data,\n            loading: false\n          });\n        },\n        error => {\n          if (error.response.status === 401) {\n            return this.props.handleLogout();\n          }\n        }\n      )\n      .catch(error => {\n        throw error;\n      });\n  };\n\n  render() {\n    console.log(this.state.requests);\n    return (\n      <AdminRequestsStyle>\n        <Grid.Row centered>\n          <Grid.Column width={14}>\n            {!this.state.loading ? (\n              <Segment loading={this.state.loading}>\n                <h1 style={{ textAlign: \"center\" }}>Заявления</h1>\n                <Form onSubmit={this.handleSearch}>\n                  <Form.Field inline>\n                    <label>\n                      <Icon corner=\"bottom left\" name=\"search\" />\n                    </label>\n                    <input\n                      onChange={this.handleSearchInput}\n                      value={this.state.searchValue}\n                      type=\"text\"\n                      name=\"searchValue\"\n                      className=\"searchInput\"\n                    />\n                    <Button primary type=\"submit\">\n                      Найти\n                    </Button>\n                  </Form.Field>\n                </Form>\n                {this.state.foundedRequest.length ? (\n                  <Table size=\"small\" compact celled>\n                    <Table.Header>\n                      <Table.Row>\n                        <Table.HeaderCell>Фамилия</Table.HeaderCell>\n                        <Table.HeaderCell>Имя</Table.HeaderCell>\n                        <Table.HeaderCell>Отчество</Table.HeaderCell>\n                        <Table.HeaderCell>Группа</Table.HeaderCell>\n                        <Table.HeaderCell>Пол</Table.HeaderCell>\n                        <Table.HeaderCell>ИИН</Table.HeaderCell>\n                        <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\n                        <Table.HeaderCell>Телефон</Table.HeaderCell>\n                        <Table.HeaderCell>\n                          Сколько детей в семье\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                          Дата начала проживания\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\n                        <Table.HeaderCell>Направление</Table.HeaderCell>\n                        <Table.HeaderCell>Скачать</Table.HeaderCell>\n                      </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                      {this.state.foundedRequest.map((value, index) => {\n                        return (\n                          <Table.Row key={index}>\n                            <Table.Cell>{value.name_l}</Table.Cell>\n                            <Table.Cell>{value.name_f}</Table.Cell>\n                            <Table.Cell>{value.patronymic}</Table.Cell>\n                            <Table.Cell>{value.group}</Table.Cell>\n                            <Table.Cell>{gender[value.gender_id]}</Table.Cell>\n                            <Table.Cell>{value.uin}</Table.Cell>\n                            <Table.Cell>{value.address}</Table.Cell>\n                            <Table.Cell>{value.phone}</Table.Cell>\n                            <Table.Cell>{value.children}</Table.Cell>\n                            <Table.Cell>{value.date_residence}</Table.Cell>\n                            <Table.Cell>{value.rooms.number}</Table.Cell>\n                            <Table.Cell>\n                              <Modal\n                                open={this.state.openModal}\n                                onClose={() =>\n                                  this.setState({\n                                    openModal: false\n                                  })\n                                }\n                                dimmer=\"blurring\"\n                                size=\"fullscreen\"\n                                trigger={\n                                  <Button\n                                    onClick={() =>\n                                      this.setState({\n                                        openCurrentField: value,\n                                        room_id: value.rooms.id,\n                                        openModal: true\n                                      })\n                                    }\n                                  >\n                                    Создать направление\n                                  </Button>\n                                }\n                                closeIcon\n                              >\n                                <Header\n                                  icon=\"archive\"\n                                  content=\"Создание направления\"\n                                />\n                                <Modal.Content>\n                                  <AdminDirection\n                                    openCurrentField={\n                                      this.state.openCurrentField\n                                    }\n                                    room_id={this.state.room_id}\n                                    handleCurrentFieldChange={this.handleChange}\n                                    handleCurrentFieldSelect={this.handleSelect}\n                                    handleCurrentFieldSubmitReport={\n                                      this.handleSubmitReport\n                                    }\n                                  />\n                                </Modal.Content>\n                              </Modal>\n                            </Table.Cell>\n                            <Table.Cell>\n                              <Modal\n                                dimmer=\"blurring\"\n                                size=\"mini\"\n                                trigger={\n                                  <Button\n                                    onClick={() => {\n                                      this.setState({\n                                        currentDataToDocument: value\n                                      });\n                                    }}\n                                  >\n                                    Открыть направление\n                                  </Button>\n                                }\n                              >\n                                <Header\n                                  icon=\"file outline\"\n                                  content=\"Скачать направление\"\n                                />\n                                <Modal.Content>\n                                  <DownloadDoc\n                                    getRequestDocument={this.getRequestDocument}\n                                  />\n                                </Modal.Content>\n                              </Modal>\n                            </Table.Cell>\n                          </Table.Row>\n                        );\n                      })}\n                    </Table.Body>\n                  </Table>\n                ) : (\n                  <p />\n                )}\n                <hr />\n                <Table compact={true} size=\"small\" celled>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Фамилия</Table.HeaderCell>\n                      <Table.HeaderCell>Имя</Table.HeaderCell>\n                      <Table.HeaderCell>Отчество</Table.HeaderCell>\n                      <Table.HeaderCell>Группа</Table.HeaderCell>\n                      <Table.HeaderCell>Пол</Table.HeaderCell>\n                      <Table.HeaderCell>ИИН</Table.HeaderCell>\n                      <Table.HeaderCell>Адрес проживания</Table.HeaderCell>\n                      <Table.HeaderCell>Телефон</Table.HeaderCell>\n                      <Table.HeaderCell>Сколько детей в семье</Table.HeaderCell>\n                      <Table.HeaderCell>\n                        Дата начала проживания\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>Номер комнаты</Table.HeaderCell>\n                      <Table.HeaderCell>Направление</Table.HeaderCell>\n                      <Table.HeaderCell>Скачать</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {this.state.requests.map((value, index) => {\n                      return (\n                        <Table.Row key={index}>\n                          <Table.Cell>{value.name_l}</Table.Cell>\n                          <Table.Cell>{value.name_f}</Table.Cell>\n                          <Table.Cell>{value.patronymic}</Table.Cell>\n                          <Table.Cell>{value.group}</Table.Cell>\n                          <Table.Cell>{gender[value.gender_id]}</Table.Cell>\n                          <Table.Cell>{value.uin}</Table.Cell>\n                          <Table.Cell>{value.address}</Table.Cell>\n                          <Table.Cell>{value.phone}</Table.Cell>\n                          <Table.Cell>{value.children}</Table.Cell>\n                          <Table.Cell>{value.date_residence}</Table.Cell>\n                          <Table.Cell>{value.rooms.number}</Table.Cell>\n                          <Table.Cell>\n                            <Modal\n                              open={this.state.openModal}\n                              onClose={() =>\n                                this.setState({\n                                  openModal: false\n                                })\n                              }\n                              dimmer=\"blurring\"\n                              size=\"fullscreen\"\n                              trigger={\n                                <Button\n                                  onClick={() =>\n                                    this.setState({\n                                      openCurrentField: value,\n                                      room_id: value.rooms.id,\n                                      openModal: true\n                                    })\n                                  }\n                                >\n                                  Создать направление\n                                </Button>\n                              }\n                              closeIcon\n                            >\n                              <Header\n                                icon=\"archive\"\n                                content=\"Создание направления\"\n                              />\n                              <Modal.Content>\n                                <AdminDirection\n                                  openCurrentField={this.state.openCurrentField}\n                                  room_id={this.state.room_id}\n                                  handleCurrentFieldChange={this.handleChange}\n                                  handleCurrentFieldSelect={this.handleSelect}\n                                  handleCurrentFieldSubmitReport={\n                                    this.handleSubmitReport\n                                  }\n                                />\n                              </Modal.Content>\n                            </Modal>\n                          </Table.Cell>\n                          <Table.Cell>\n                            <Modal\n                              dimmer=\"blurring\"\n                              size=\"mini\"\n                              trigger={\n                                <Button\n                                  onClick={() => {\n                                    this.setState({\n                                      currentDataToDocument: value\n                                    });\n                                  }}\n                                >\n                                  Открыть направление\n                                </Button>\n                              }\n                            >\n                              <Header\n                                icon=\"file outline\"\n                                content=\"Скачать направление\"\n                              />\n                              <Modal.Content>\n                                <DownloadDoc\n                                  getRequestDocument={this.getRequestDocument}\n                                />\n                              </Modal.Content>\n                            </Modal>\n                          </Table.Cell>\n                        </Table.Row>\n                      );\n                    })}\n                  </Table.Body>\n                </Table>\n              </Segment>\n            ) : (\n              <Segment loading={!this.state.requests.length} placeholder>\n                <Header icon>\n                  <Icon name=\"file outline\" />\n                  <br />\n                  Список заявлений пуст.\n                </Header>\n              </Segment>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n      </AdminRequestsStyle>\n    );\n  }\n}\n\nexport default withAPI(AdminRequests);\n","import React, { useState } from \"react\";\r\nimport AdminReports from \"./AdminReports\";\r\nimport AdminRequests from \"./AdminRequests\";\r\nimport { Grid, Menu, Segment } from \"semantic-ui-react\";\r\n\r\nimport { AdminPanelStyle } from \"./style\";\r\n\r\nconst AdminPanel = props => {\r\n  const [routes, setRoutes] = useState(1);\r\n  return (\r\n    <AdminPanelStyle>\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Grid.Column>\r\n            <Segment>\r\n              <Menu fluid size=\"large\" secondary>\r\n                <Menu.Item className=\"header-name\" icon=\"user\" />\r\n                <Menu.Item onClick={() => setRoutes(1)} name=\"Заявления\" />\r\n                <Menu.Item onClick={() => setRoutes(2)} name=\"Направления\" />\r\n                <Menu.Item\r\n                  icon=\"sign out\"\r\n                  position=\"right\"\r\n                  onClick={props.handleLogout}\r\n                  name=\"Выйти\"\r\n                />\r\n              </Menu>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row centered>\r\n          <Grid.Column>\r\n            <React.Fragment>\r\n              {routes === 1 && (\r\n                <AdminRequests handleLogout={props.handleLogout} />\r\n              )}\r\n              {routes === 2 && <AdminReports />}\r\n            </React.Fragment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </AdminPanelStyle>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React from \"react\";\nimport AdminPanel from \"./AdminPanel\";\nimport withAdmin from \"../hoc/withAdmin\";\nimport { AdminComponent } from \"./style\";\nimport { Grid, Segment, Input, Button, Form } from \"semantic-ui-react\";\n\nconst Admin = props => {\n  const { user } = props.state;\n  if (user) {\n    return <AdminPanel handleLogout={props.handleLogout} />;\n  }\n\n  return (\n    <AdminComponent>\n      <Grid container>\n        <Grid.Row centered>\n          <Grid.Column width={8}>\n            <Form className=\"form\" onSubmit={props.handleLogin}>\n              <Segment>\n                <h2 className=\"header\">Панель администратора</h2>\n                <Form.Field>\n                  <label htmlFor=\"login\">Логин</label>\n                  <Input\n                    value={props.state.login}\n                    onChange={props.handleChange}\n                    name=\"login\"\n                    type=\"text\"\n                  />\n                </Form.Field>\n                <Form.Field>\n                  <label htmlFor=\"password\">Пароль</label>\n                  <Input\n                    value={props.state.password}\n                    onChange={props.handleChange}\n                    name=\"password\"\n                    type=\"password\"\n                  />\n                </Form.Field>\n                <Button type=\"submit\">Войти</Button>\n              </Segment>\n            </Form>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </AdminComponent>\n  );\n};\n\nexport default withAdmin(Admin);\n","/**\n * @file This HOC is for authorization for admin\n */\n\nimport React, { Component } from \"react\";\nimport { withAPI } from \"../API\";\n\nconst WithAdmin = WrappedComponent => {\n  class WithAdmin extends Component {\n    state = {\n      login: \"\",\n      password: \"\",\n      user:\n        localStorage.getItem(\"sessionUser\") &&\n        localStorage.getItem(\"sessionUser\")\n    };\n\n    /**\n     * Get password and login for administrator\n     */\n    handleLogin = () => {\n      this.props.api\n        .getAuth(this.state.login, this.state.password)\n        .then(res => {\n          this.setState({\n            user: res.data.token\n          });\n          localStorage.setItem(\"sessionUser\", res.data.token);\n        })\n        .catch(error => {\n          throw error;\n        });\n    };\n\n    /**\n     * Function for logging out of administrator\n     */\n    handleLogout = () => {\n      localStorage.removeItem(\"sessionUser\");\n      this.setState({\n        user: null\n      });\n    };\n\n    handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    render() {\n      return (\n        <WrappedComponent\n          state={this.state}\n          handleChange={this.handleChange}\n          handleLogout={this.handleLogout}\n          handleLogin={this.handleLogin}\n          {...this.props}\n        />\n      );\n    }\n  }\n  return withAPI(WithAdmin);\n};\n\nexport default WithAdmin;\n","import React from \"react\";\nimport { Grid, Button, Modal, Header } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport ReactFullpage from \"@fullpage/react-fullpage\";\nimport \"./index.css\";\n\nconst Overlay = () => (\n  <ReactFullpage\n    navigation\n    scrollingSpeed=\"800\"\n    render={({ state, fullpageApi }) => {\n      return (\n        <ReactFullpage.Wrapper>\n          <div className=\"section section-1\">\n            <Grid container>\n              {/* <Button\n                inverted\n                circular\n                basic\n                color=\"grey\"\n                className=\"auth-button\"\n                as={Link}\n                to=\"/admin\"\n              >\n                <span className=\"auth-text\">Авторизация</span>\n              </Button> */}\n              <Grid.Row centered>\n                <Grid.Column width={12}>\n                  <h1 className=\"logo\">Dorm</h1>\n                </Grid.Column>\n                <Grid.Column stretched mobile=\"16\" computer={15}>\n                  <p className=\"description\">\n                    Dorm позволяет создавать и обрабатывать заявления, для\n                    заселения студентов в общежития\n                  </p>\n                </Grid.Column>\n                <Grid.Column width={12}>\n                  <div className=\"buttons\">\n                    <Button\n                      className=\"req-button\"\n                      as={Link}\n                      to=\"/form\"\n                      circular\n                    >\n                      <span className=\"req-text\"> Подать заявление </span>\n                    </Button>\n                    <Modal\n                      trigger={\n                        <Button className=\"req-button\" circular icon=\"info\" />\n                      }\n                      closeIcon\n                    >\n                      <Header icon=\"info\" content=\"Информация\" />\n                      <Modal.Content scrolling>\n                        <p>\n                          При обращении к услугодателю:\n                          <br /> 1) заявление о предоставлении места в общежитии\n                          по форме согласно приложению 2 к настоящему стандарту\n                          государственной услуги;\n                          <br /> 2) копия свидетельства о смерти обоих или\n                          единственного родителя либо справка с детского дома\n                          (при наличии); <br /> 3) копия удостоверения оралмана\n                          (при наличии);\n                          <br /> 4) справку о наличии в семье 4-х и более детей\n                          (для многодетных семей); <br /> 5) справка об\n                          инвалидности (при наличии); <br /> 6) копия документа,\n                          удостоверяющего личность; <br /> <br /> При обращении\n                          к услугодателю: <br /> 1) заявление о предоставлении\n                          места в общежитии по форме согласно приложению 2 к\n                          настоящему стандарту государственной услуги; <br /> 2)\n                          копия свидетельства о смерти обоих или единственного\n                          родителя либо справка с детского дома (при наличии);\n                          <br /> 3) копия удостоверения оралмана (при наличии);\n                          <br /> 4) справку о наличии в семье 4-х и более детей\n                          (для многодетных семей);\n                          <br /> 5) справка об инвалидности (при наличии);\n                          <br /> 6) копия документа, удостоверяющего личность;\n                          <br />\n                          <br />\n                          При обращении к услугодателю: <br /> 1) заявление о\n                          предоставлении места в общежитии по форме согласно\n                          приложению 2 к настоящему стандарту государственной\n                          услуги; <br /> 2) копия свидетельства о смерти обоих\n                          или единственного родителя либо справка с детского\n                          дома (при наличии); <br />\n                          3) копия удостоверения оралмана (при наличии); <br />\n                          4) справку о наличии в семье 4-х и более детей (для\n                          многодетных семей); <br /> 5) справка об инвалидности\n                          (при наличии); <br /> 6) копия документа,\n                          удостоверяющего личность;\n                        </p>\n                      </Modal.Content>\n                    </Modal>\n                  </div>\n                </Grid.Column>\n                <Grid.Column width={12}>\n                  <div\n                    onClick={() => fullpageApi.moveSectionDown()}\n                    className=\"icon-scroll\"\n                  />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </div>\n          <div className=\"section section2\">\n            <div className=\"slide section2text\"> Slide 1 </div>\n            <div className=\"slide section2text\"> Slide 2 </div>\n            <div className=\"slide section2text\"> Slide 3 </div>\n            <div className=\"slide section2text\"> Slide 4 </div>\n          </div>\n        </ReactFullpage.Wrapper>\n      );\n    }}\n  />\n);\n\nexport default Overlay;\n","import styled from \"styled-components\";\r\n\r\nexport const AppWrapper = styled.div`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Montserrat\");\r\n  @import url(\"https://fonts.googleapis.com/css?family=Roboto&subset=cyrillic,cyrillic-ext,latin-ext\");\r\n`;\r\n","import React from \"react\";\r\nimport FormComponent from \"../Form\";\r\nimport Admin from \"../Admin\";\r\nimport Overlay from \"../Overlay\";\r\nimport { AppWrapper } from \"./style\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <AppWrapper>\r\n        <div className=\"app\">\r\n          <Route exact path=\"/\" component={Overlay} />\r\n          <Route exact path=\"/form\" component={FormComponent} />\r\n          <Route exact path=\"/admin\" component={Admin} />\r\n        </div>\r\n      </AppWrapper>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport APIContext, { API } from \"./components/API\";\r\nimport App from \"./components/App\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <HashRouter basename={process.env.PUBLIC_URL}>\r\n    <APIContext.Provider value={new API()}>\r\n      <App />\r\n    </APIContext.Provider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}